ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RTC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RTC_IsBitSet,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	RTC_IsBitSet, %function
  22              	RTC_IsBitSet:
  23              	.LFB2:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\RTC.h"
   1:.\Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:.\Generated_Source\PSoC4/RTC.h **** * \version 1.10
   4:.\Generated_Source\PSoC4/RTC.h **** *
   5:.\Generated_Source\PSoC4/RTC.h **** * \brief
   6:.\Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   7:.\Generated_Source\PSoC4/RTC.h **** *
   8:.\Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   9:.\Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2016, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  14:.\Generated_Source\PSoC4/RTC.h **** 
  15:.\Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  16:.\Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  17:.\Generated_Source\PSoC4/RTC.h **** 
  18:.\Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  19:.\Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  20:.\Generated_Source\PSoC4/RTC.h **** 
  21:.\Generated_Source\PSoC4/RTC.h **** 
  22:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  23:.\Generated_Source\PSoC4/RTC.h **** *    Data types definition
  24:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  25:.\Generated_Source\PSoC4/RTC.h **** 
  26:.\Generated_Source\PSoC4/RTC.h **** typedef enum
  27:.\Generated_Source\PSoC4/RTC.h **** {
  28:.\Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,
  29:.\Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u
  30:.\Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  31:.\Generated_Source\PSoC4/RTC.h **** 
  32:.\Generated_Source\PSoC4/RTC.h **** /**
  33:.\Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 2


  34:.\Generated_Source\PSoC4/RTC.h **** * @{
  35:.\Generated_Source\PSoC4/RTC.h **** */
  36:.\Generated_Source\PSoC4/RTC.h **** 
  37:.\Generated_Source\PSoC4/RTC.h **** /**
  38:.\Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save the current time and date 
  39:.\Generated_Source\PSoC4/RTC.h **** * (RTC_currentTimeDate), and Alarm time and date (RTC_alarmCfgTimeDate).
  40:.\Generated_Source\PSoC4/RTC.h **** */
  41:.\Generated_Source\PSoC4/RTC.h **** typedef struct
  42:.\Generated_Source\PSoC4/RTC.h **** {
  43:.\Generated_Source\PSoC4/RTC.h ****     uint32 time;
  44:.\Generated_Source\PSoC4/RTC.h ****     uint32 date;
  45:.\Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  46:.\Generated_Source\PSoC4/RTC.h ****     uint32 status;
  47:.\Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  48:.\Generated_Source\PSoC4/RTC.h **** 
  49:.\Generated_Source\PSoC4/RTC.h **** /**
  50:.\Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save time and date values for 
  51:.\Generated_Source\PSoC4/RTC.h **** * Daylight Savings Time Start and Stop (RTC_dstTimeDateStart and 
  52:.\Generated_Source\PSoC4/RTC.h **** * RTC_dstTimeDateStop).
  53:.\Generated_Source\PSoC4/RTC.h **** */
  54:.\Generated_Source\PSoC4/RTC.h **** typedef struct
  55:.\Generated_Source\PSoC4/RTC.h **** {
  56:.\Generated_Source\PSoC4/RTC.h ****     uint32 hour;
  57:.\Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  58:.\Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;
  59:.\Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;
  60:.\Generated_Source\PSoC4/RTC.h ****     uint32 month;
  61:.\Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;
  62:.\Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  63:.\Generated_Source\PSoC4/RTC.h **** 
  64:.\Generated_Source\PSoC4/RTC.h **** /** @} structures */
  65:.\Generated_Source\PSoC4/RTC.h **** 
  66:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  67:.\Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  68:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  70:.\Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  71:.\Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  72:.\Generated_Source\PSoC4/RTC.h **** 
  73:.\Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  74:.\Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  75:.\Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  76:.\Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  77:.\Generated_Source\PSoC4/RTC.h **** 
  78:.\Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  79:.\Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  80:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  81:.\Generated_Source\PSoC4/RTC.h **** 
  82:.\Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  83:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
  84:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  85:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  86:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  87:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  88:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
  89:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  90:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 3


  91:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  92:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  93:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  94:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
  95:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
  96:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
  97:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
  98:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
  99:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 100:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 101:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 102:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 103:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 104:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 105:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 106:.\Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 107:.\Generated_Source\PSoC4/RTC.h **** 
 108:.\Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 109:.\Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 110:.\Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 111:.\Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 112:.\Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 113:.\Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 114:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 115:.\Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 116:.\Generated_Source\PSoC4/RTC.h **** 
 117:.\Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 118:.\Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 119:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 120:.\Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 121:.\Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 122:.\Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 123:.\Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 124:.\Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 125:.\Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 126:.\Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 127:.\Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 128:.\Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 129:.\Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 130:.\Generated_Source\PSoC4/RTC.h **** 
 131:.\Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 132:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 133:.\Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 134:.\Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 135:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 136:.\Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 137:.\Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 138:.\Generated_Source\PSoC4/RTC.h **** 
 139:.\Generated_Source\PSoC4/RTC.h **** 
 140:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (0u)
 141:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 142:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 143:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (0u)
 144:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (16u)
 145:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (10u)
 146:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (9u)
 147:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (8u)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 4


 148:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (2016u)
 149:.\Generated_Source\PSoC4/RTC.h **** 
 150:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (0u)
 151:.\Generated_Source\PSoC4/RTC.h **** 
 152:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (0u)
 153:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (0u)
 154:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 155:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 156:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 157:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 158:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (0uL)
 159:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 160:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 161:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 162:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 163:.\Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (0uL)
 164:.\Generated_Source\PSoC4/RTC.h **** 
 165:.\Generated_Source\PSoC4/RTC.h **** /* Day of week definitions */
 166:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)
 167:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)
 168:.\Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)
 169:.\Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)
 170:.\Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)
 171:.\Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)
 172:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)
 173:.\Generated_Source\PSoC4/RTC.h **** 
 174:.\Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants definitions */
 175:.\Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)
 176:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)
 177:.\Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)
 178:.\Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)
 179:.\Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)
 180:.\Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)
 181:.\Generated_Source\PSoC4/RTC.h **** 
 182:.\Generated_Source\PSoC4/RTC.h **** /* Month definitions */
 183:.\Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)
 184:.\Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)
 185:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)
 186:.\Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)
 187:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)
 188:.\Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)
 189:.\Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)
 190:.\Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)
 191:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)
 192:.\Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)
 193:.\Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)
 194:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)
 195:.\Generated_Source\PSoC4/RTC.h **** 
 196:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 197:.\Generated_Source\PSoC4/RTC.h **** 
 198:.\Generated_Source\PSoC4/RTC.h **** /* Number of days in month definitions */
 199:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)
 200:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)
 201:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)
 202:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)
 203:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)
 204:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 5


 205:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)
 206:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)
 207:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)
 208:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)
 209:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)
 210:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)
 211:.\Generated_Source\PSoC4/RTC.h **** 
 212:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 213:.\Generated_Source\PSoC4/RTC.h **** 
 214:.\Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
 215:.\Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 216:.\Generated_Source\PSoC4/RTC.h **** 
 217:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 218:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 219:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 220:.\Generated_Source\PSoC4/RTC.h **** 
 221:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 222:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 223:.\Generated_Source\PSoC4/RTC.h **** 
 224:.\Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM   ((12uL * 3600uL) + 1uL)
 225:.\Generated_Source\PSoC4/RTC.h **** 
 226:.\Generated_Source\PSoC4/RTC.h **** /* AM/PM status definitions */
 227:.\Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)
 228:.\Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)
 229:.\Generated_Source\PSoC4/RTC.h **** 
 230:.\Generated_Source\PSoC4/RTC.h **** /* Time format definitions */
 231:.\Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12)
 232:.\Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24)
 233:.\Generated_Source\PSoC4/RTC.h **** 
 234:.\Generated_Source\PSoC4/RTC.h **** /* UNIX time begins in 1970 year.  */
 235:.\Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 236:.\Generated_Source\PSoC4/RTC.h **** 
 237:.\Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 238:.\Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 239:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 240:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 241:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 242:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 243:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 244:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 245:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 246:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 247:.\Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 248:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 249:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 250:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 251:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 252:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 253:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 254:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 255:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 256:.\Generated_Source\PSoC4/RTC.h **** #else
 257:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 258:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 259:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
 260:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 261:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 6


 262:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 263:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 264:.\Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 265:.\Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 266:.\Generated_Source\PSoC4/RTC.h **** 
 267:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
 268:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 269:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 270:.\Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 271:.\Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 272:.\Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 273:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 274:.\Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 275:.\Generated_Source\PSoC4/RTC.h **** 
 276:.\Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 277:.\Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 278:.\Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 279:.\Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
 280:.\Generated_Source\PSoC4/RTC.h **** 
 281:.\Generated_Source\PSoC4/RTC.h **** 
 282:.\Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 283:.\Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 284:.\Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 285:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 286:.\Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 287:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 288:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 289:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 290:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 291:.\Generated_Source\PSoC4/RTC.h **** 
 292:.\Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 293:.\Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 294:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 295:.\Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 296:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 297:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 298:.\Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 299:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 300:.\Generated_Source\PSoC4/RTC.h **** 
 301:.\Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 302:.\Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 303:.\Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 304:.\Generated_Source\PSoC4/RTC.h **** 
 305:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 306:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 307:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 308:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 309:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 310:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 311:.\Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 312:.\Generated_Source\PSoC4/RTC.h **** 
 313:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 314:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 315:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 316:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
 317:.\Generated_Source\PSoC4/RTC.h **** 
 318:.\Generated_Source\PSoC4/RTC.h **** /* Definition of the RTC status values. */
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 7


 319:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST             (1uL << RTC_STATUS_DST_OFFSET)
 320:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY              (1uL << RTC_STATUS_LY_OFFSET)
 321:.\Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM           (1uL << RTC_STATUS_AM_PM_OFFSET)
 322:.\Generated_Source\PSoC4/RTC.h **** 
 323:.\Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit. */
 324:.\Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
 325:.\Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 326:.\Generated_Source\PSoC4/RTC.h **** 
 327:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 328:.\Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 329:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/RTC.h **** /**
 331:.\Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 332:.\Generated_Source\PSoC4/RTC.h **** * @{
 333:.\Generated_Source\PSoC4/RTC.h **** */
 334:.\Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 335:.\Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 336:.\Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 337:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 338:.\Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 339:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 340:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 341:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 342:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 343:.\Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
 344:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 345:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 346:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 347:.\Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 348:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 349:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 350:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 351:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 352:.\Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 353:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 354:.\Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 355:.\Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 356:.\Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 357:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 358:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 359:.\Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 360:.\Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 361:.\Generated_Source\PSoC4/RTC.h **** 
 362:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 363:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 364:.\Generated_Source\PSoC4/RTC.h **** /** @} api */
 365:.\Generated_Source\PSoC4/RTC.h **** 
 366:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 367:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 368:.\Generated_Source\PSoC4/RTC.h **** 
 369:.\Generated_Source\PSoC4/RTC.h **** /**
 370:.\Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 371:.\Generated_Source\PSoC4/RTC.h **** * @{
 372:.\Generated_Source\PSoC4/RTC.h **** */
 373:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
 374:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 375:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 8


 376:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 377:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 378:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 379:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 380:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 381:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
 382:.\Generated_Source\PSoC4/RTC.h **** /** @} api */
 383:.\Generated_Source\PSoC4/RTC.h **** 
 384:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 385:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 386:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 387:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 388:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 389:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 390:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 391:.\Generated_Source\PSoC4/RTC.h **** 
 392:.\Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 393:.\Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 394:.\Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 395:.\Generated_Source\PSoC4/RTC.h **** 
 396:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 397:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 398:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 399:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 400:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
 401:.\Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 402:.\Generated_Source\PSoC4/RTC.h **** 
 403:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 404:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 405:.\Generated_Source\PSoC4/RTC.h **** 
 406:.\Generated_Source\PSoC4/RTC.h **** /**
 407:.\Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 408:.\Generated_Source\PSoC4/RTC.h **** * @{
 409:.\Generated_Source\PSoC4/RTC.h **** */
 410:.\Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 411:.\Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 412:.\Generated_Source\PSoC4/RTC.h **** /** @} api */
 413:.\Generated_Source\PSoC4/RTC.h **** 
 414:.\Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 415:.\Generated_Source\PSoC4/RTC.h **** 
 416:.\Generated_Source\PSoC4/RTC.h **** 
 417:.\Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 418:.\Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 419:.\Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 420:.\Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 421:.\Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 422:.\Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 423:.\Generated_Source\PSoC4/RTC.h **** 
 424:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 426:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 427:.\Generated_Source\PSoC4/RTC.h **** *
 428:.\Generated_Source\PSoC4/RTC.h **** * \brief
 429:.\Generated_Source\PSoC4/RTC.h **** *  Checks the state of a bit passed through parameter.
 430:.\Generated_Source\PSoC4/RTC.h **** *
 431:.\Generated_Source\PSoC4/RTC.h **** * \param
 432:.\Generated_Source\PSoC4/RTC.h **** *  var The variable to be checked.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 9


 433:.\Generated_Source\PSoC4/RTC.h **** * \param
 434:.\Generated_Source\PSoC4/RTC.h **** *  mask The mask for a bit to be checked.
 435:.\Generated_Source\PSoC4/RTC.h **** *
 436:.\Generated_Source\PSoC4/RTC.h **** * \return
 437:.\Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set.
 438:.\Generated_Source\PSoC4/RTC.h **** * \return
 439:.\Generated_Source\PSoC4/RTC.h **** *  1u - Bit is set.
 440:.\Generated_Source\PSoC4/RTC.h **** *
 441:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 442:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 443:.\Generated_Source\PSoC4/RTC.h **** {
  25              		.loc 1 443 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 7860     		str	r0, [r7, #4]
  36 0008 3960     		str	r1, [r7]
 444:.\Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
  37              		.loc 1 444 0
  38 000a 7B68     		ldr	r3, [r7, #4]
  39 000c 3A68     		ldr	r2, [r7]
  40 000e 1A40     		and	r2, r3
  41 0010 3B68     		ldr	r3, [r7]
  42 0012 9A42     		cmp	r2, r3
  43 0014 01D1     		bne	.L2
  44              		.loc 1 444 0 is_stmt 0 discriminator 1
  45 0016 0123     		mov	r3, #1
  46 0018 00E0     		b	.L3
  47              	.L2:
  48              		.loc 1 444 0 discriminator 2
  49 001a 0023     		mov	r3, #0
  50              	.L3:
 445:.\Generated_Source\PSoC4/RTC.h **** }
  51              		.loc 1 445 0 is_stmt 1 discriminator 4
  52 001c 181C     		mov	r0, r3
  53 001e BD46     		mov	sp, r7
  54 0020 02B0     		add	sp, sp, #8
  55              		@ sp needed
  56 0022 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE2:
  59              		.size	RTC_IsBitSet, .-RTC_IsBitSet
  60              		.global	__aeabi_uidivmod
  61              		.section	.text.RTC_LeapYear,"ax",%progbits
  62              		.align	2
  63              		.code	16
  64              		.thumb_func
  65              		.type	RTC_LeapYear, %function
  66              	RTC_LeapYear:
  67              	.LFB3:
 446:.\Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 10


 447:.\Generated_Source\PSoC4/RTC.h **** 
 448:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 450:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 451:.\Generated_Source\PSoC4/RTC.h **** *
 452:.\Generated_Source\PSoC4/RTC.h **** * \brief
 453:.\Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is
 454:.\Generated_Source\PSoC4/RTC.h **** * leap or no.
 455:.\Generated_Source\PSoC4/RTC.h **** *
 456:.\Generated_Source\PSoC4/RTC.h **** * \param
 457:.\Generated_Source\PSoC4/RTC.h **** *  year The year to be checked.
 458:.\Generated_Source\PSoC4/RTC.h **** *
 459:.\Generated_Source\PSoC4/RTC.h **** *
 460:.\Generated_Source\PSoC4/RTC.h **** * \return
 461:.\Generated_Source\PSoC4/RTC.h **** *  0u - The year is not leap.
 462:.\Generated_Source\PSoC4/RTC.h **** * \return
 463:.\Generated_Source\PSoC4/RTC.h **** *  1u - The year is leap.
 464:.\Generated_Source\PSoC4/RTC.h **** *
 465:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 467:.\Generated_Source\PSoC4/RTC.h **** {
  68              		.loc 1 467 0
  69              		.cfi_startproc
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 84B0     		sub	sp, sp, #16
  75              		.cfi_def_cfa_offset 24
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 469:.\Generated_Source\PSoC4/RTC.h **** 
 470:.\Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
  79              		.loc 1 470 0
  80 0008 7B68     		ldr	r3, [r7, #4]
  81 000a 0322     		mov	r2, #3
  82 000c 1340     		and	r3, r2
  83 000e 06D1     		bne	.L6
  84              		.loc 1 470 0 is_stmt 0 discriminator 1
  85 0010 7B68     		ldr	r3, [r7, #4]
  86 0012 181C     		mov	r0, r3
  87 0014 6421     		mov	r1, #100
  88 0016 FFF7FEFF 		bl	__aeabi_uidivmod
  89 001a 0B1E     		sub	r3, r1, #0
  90 001c 07D1     		bne	.L7
  91              	.L6:
  92              		.loc 1 470 0 discriminator 3
  93 001e 7B68     		ldr	r3, [r7, #4]
  94 0020 181C     		mov	r0, r3
  95 0022 C823     		mov	r3, #200
  96 0024 5900     		lsl	r1, r3, #1
  97 0026 FFF7FEFF 		bl	__aeabi_uidivmod
  98 002a 0B1E     		sub	r3, r1, #0
  99 002c 02D1     		bne	.L8
 100              	.L7:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 11


 471:.\Generated_Source\PSoC4/RTC.h ****     {
 472:.\Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 101              		.loc 1 472 0 is_stmt 1
 102 002e 0123     		mov	r3, #1
 103 0030 FB60     		str	r3, [r7, #12]
 104 0032 01E0     		b	.L9
 105              	.L8:
 473:.\Generated_Source\PSoC4/RTC.h ****     }
 474:.\Generated_Source\PSoC4/RTC.h ****     else
 475:.\Generated_Source\PSoC4/RTC.h ****     {
 476:.\Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 106              		.loc 1 476 0
 107 0034 0023     		mov	r3, #0
 108 0036 FB60     		str	r3, [r7, #12]
 109              	.L9:
 477:.\Generated_Source\PSoC4/RTC.h ****     }
 478:.\Generated_Source\PSoC4/RTC.h **** 
 479:.\Generated_Source\PSoC4/RTC.h ****     return(retVal);
 110              		.loc 1 479 0
 111 0038 FB68     		ldr	r3, [r7, #12]
 480:.\Generated_Source\PSoC4/RTC.h **** }
 112              		.loc 1 480 0
 113 003a 181C     		mov	r0, r3
 114 003c BD46     		mov	sp, r7
 115 003e 04B0     		add	sp, sp, #16
 116              		@ sp needed
 117 0040 80BD     		pop	{r7, pc}
 118              		.cfi_endproc
 119              	.LFE3:
 120              		.size	RTC_LeapYear, .-RTC_LeapYear
 121 0042 C046     		.section	.text.RTC_GetSecond,"ax",%progbits
 122              		.align	2
 123              		.code	16
 124              		.thumb_func
 125              		.type	RTC_GetSecond, %function
 126              	RTC_GetSecond:
 127              	.LFB4:
 481:.\Generated_Source\PSoC4/RTC.h **** 
 482:.\Generated_Source\PSoC4/RTC.h **** 
 483:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 484:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 485:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 486:.\Generated_Source\PSoC4/RTC.h **** *
 487:.\Generated_Source\PSoC4/RTC.h **** * \brief
 488:.\Generated_Source\PSoC4/RTC.h **** *  Returns the seconds value from the time value that is passed as a/the parameter.
 489:.\Generated_Source\PSoC4/RTC.h **** *
 490:.\Generated_Source\PSoC4/RTC.h **** * \param
 491:.\Generated_Source\PSoC4/RTC.h **** *  time The time value.
 492:.\Generated_Source\PSoC4/RTC.h **** *
 493:.\Generated_Source\PSoC4/RTC.h **** * \return
 494:.\Generated_Source\PSoC4/RTC.h **** *  The seconds value.
 495:.\Generated_Source\PSoC4/RTC.h **** *
 496:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 497:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 498:.\Generated_Source\PSoC4/RTC.h **** {
 128              		.loc 1 498 0
 129              		.cfi_startproc
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 12


 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 84B0     		sub	sp, sp, #16
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 138 0006 7860     		str	r0, [r7, #4]
 499:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 500:.\Generated_Source\PSoC4/RTC.h **** 
 501:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
 139              		.loc 1 501 0
 140 0008 7B68     		ldr	r3, [r7, #4]
 141 000a 7022     		mov	r2, #112
 142 000c 1340     		and	r3, r2
 143 000e 1A09     		lsr	r2, r3, #4
 144 0010 131C     		mov	r3, r2
 145 0012 9B00     		lsl	r3, r3, #2
 146 0014 9B18     		add	r3, r3, r2
 147 0016 5B00     		lsl	r3, r3, #1
 148 0018 FB60     		str	r3, [r7, #12]
 502:.\Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 149              		.loc 1 502 0
 150 001a 7B68     		ldr	r3, [r7, #4]
 151 001c 0F22     		mov	r2, #15
 152 001e 1340     		and	r3, r2
 153 0020 FA68     		ldr	r2, [r7, #12]
 154 0022 D318     		add	r3, r2, r3
 155 0024 FB60     		str	r3, [r7, #12]
 503:.\Generated_Source\PSoC4/RTC.h **** 
 504:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 156              		.loc 1 504 0
 157 0026 FB68     		ldr	r3, [r7, #12]
 505:.\Generated_Source\PSoC4/RTC.h **** }
 158              		.loc 1 505 0
 159 0028 181C     		mov	r0, r3
 160 002a BD46     		mov	sp, r7
 161 002c 04B0     		add	sp, sp, #16
 162              		@ sp needed
 163 002e 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE4:
 166              		.size	RTC_GetSecond, .-RTC_GetSecond
 167              		.section	.text.RTC_GetMinutes,"ax",%progbits
 168              		.align	2
 169              		.code	16
 170              		.thumb_func
 171              		.type	RTC_GetMinutes, %function
 172              	RTC_GetMinutes:
 173              	.LFB5:
 506:.\Generated_Source\PSoC4/RTC.h **** 
 507:.\Generated_Source\PSoC4/RTC.h **** 
 508:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 509:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 510:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 511:.\Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 13


 512:.\Generated_Source\PSoC4/RTC.h **** * \brief
 513:.\Generated_Source\PSoC4/RTC.h **** *  Returns the minutes value from the time value that is passed as a/the 
 514:.\Generated_Source\PSoC4/RTC.h **** * parameter.
 515:.\Generated_Source\PSoC4/RTC.h **** *
 516:.\Generated_Source\PSoC4/RTC.h **** * \param
 517:.\Generated_Source\PSoC4/RTC.h **** *  time The time value.
 518:.\Generated_Source\PSoC4/RTC.h **** *
 519:.\Generated_Source\PSoC4/RTC.h **** * \return
 520:.\Generated_Source\PSoC4/RTC.h **** *  The minutes value.
 521:.\Generated_Source\PSoC4/RTC.h **** *
 522:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 523:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
 524:.\Generated_Source\PSoC4/RTC.h **** {
 174              		.loc 1 524 0
 175              		.cfi_startproc
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 84B0     		sub	sp, sp, #16
 181              		.cfi_def_cfa_offset 24
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 525:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 526:.\Generated_Source\PSoC4/RTC.h **** 
 527:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
 185              		.loc 1 527 0
 186 0008 7A68     		ldr	r2, [r7, #4]
 187 000a E023     		mov	r3, #224
 188 000c DB01     		lsl	r3, r3, #7
 189 000e 1340     		and	r3, r2
 190 0010 1A0B     		lsr	r2, r3, #12
 191 0012 131C     		mov	r3, r2
 192 0014 9B00     		lsl	r3, r3, #2
 193 0016 9B18     		add	r3, r3, r2
 194 0018 5B00     		lsl	r3, r3, #1
 195 001a FB60     		str	r3, [r7, #12]
 528:.\Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 196              		.loc 1 528 0
 197 001c 7A68     		ldr	r2, [r7, #4]
 198 001e F023     		mov	r3, #240
 199 0020 1B01     		lsl	r3, r3, #4
 200 0022 1340     		and	r3, r2
 201 0024 1B0A     		lsr	r3, r3, #8
 202 0026 FA68     		ldr	r2, [r7, #12]
 203 0028 D318     		add	r3, r2, r3
 204 002a FB60     		str	r3, [r7, #12]
 529:.\Generated_Source\PSoC4/RTC.h **** 
 530:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 205              		.loc 1 530 0
 206 002c FB68     		ldr	r3, [r7, #12]
 531:.\Generated_Source\PSoC4/RTC.h **** }
 207              		.loc 1 531 0
 208 002e 181C     		mov	r0, r3
 209 0030 BD46     		mov	sp, r7
 210 0032 04B0     		add	sp, sp, #16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 14


 211              		@ sp needed
 212 0034 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE5:
 215              		.size	RTC_GetMinutes, .-RTC_GetMinutes
 216 0036 C046     		.section	.text.RTC_GetHours,"ax",%progbits
 217              		.align	2
 218              		.code	16
 219              		.thumb_func
 220              		.type	RTC_GetHours, %function
 221              	RTC_GetHours:
 222              	.LFB6:
 532:.\Generated_Source\PSoC4/RTC.h **** 
 533:.\Generated_Source\PSoC4/RTC.h **** 
 534:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 535:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 536:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 537:.\Generated_Source\PSoC4/RTC.h **** *
 538:.\Generated_Source\PSoC4/RTC.h **** * \brief
 539:.\Generated_Source\PSoC4/RTC.h **** *  Returns the hours value from the time value that is passed as a/the parameter.
 540:.\Generated_Source\PSoC4/RTC.h **** *
 541:.\Generated_Source\PSoC4/RTC.h **** * \param
 542:.\Generated_Source\PSoC4/RTC.h **** *  time The time value.
 543:.\Generated_Source\PSoC4/RTC.h **** *
 544:.\Generated_Source\PSoC4/RTC.h **** * \return
 545:.\Generated_Source\PSoC4/RTC.h **** *  The hours value.
 546:.\Generated_Source\PSoC4/RTC.h **** *
 547:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 548:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 549:.\Generated_Source\PSoC4/RTC.h **** {
 223              		.loc 1 549 0
 224              		.cfi_startproc
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 84B0     		sub	sp, sp, #16
 230              		.cfi_def_cfa_offset 24
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 550:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 551:.\Generated_Source\PSoC4/RTC.h **** 
 552:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
 234              		.loc 1 552 0
 235 0008 7A68     		ldr	r2, [r7, #4]
 236 000a C023     		mov	r3, #192
 237 000c 9B03     		lsl	r3, r3, #14
 238 000e 1340     		and	r3, r2
 239 0010 1A0D     		lsr	r2, r3, #20
 240 0012 131C     		mov	r3, r2
 241 0014 9B00     		lsl	r3, r3, #2
 242 0016 9B18     		add	r3, r3, r2
 243 0018 5B00     		lsl	r3, r3, #1
 244 001a FB60     		str	r3, [r7, #12]
 553:.\Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
 245              		.loc 1 553 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 15


 246 001c 7A68     		ldr	r2, [r7, #4]
 247 001e F023     		mov	r3, #240
 248 0020 1B03     		lsl	r3, r3, #12
 249 0022 1340     		and	r3, r2
 250 0024 1B0C     		lsr	r3, r3, #16
 251 0026 FA68     		ldr	r2, [r7, #12]
 252 0028 D318     		add	r3, r2, r3
 253 002a FB60     		str	r3, [r7, #12]
 554:.\Generated_Source\PSoC4/RTC.h **** 
 555:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 254              		.loc 1 555 0
 255 002c FB68     		ldr	r3, [r7, #12]
 556:.\Generated_Source\PSoC4/RTC.h **** }
 256              		.loc 1 556 0
 257 002e 181C     		mov	r0, r3
 258 0030 BD46     		mov	sp, r7
 259 0032 04B0     		add	sp, sp, #16
 260              		@ sp needed
 261 0034 80BD     		pop	{r7, pc}
 262              		.cfi_endproc
 263              	.LFE6:
 264              		.size	RTC_GetHours, .-RTC_GetHours
 265 0036 C046     		.section	.text.RTC_GetAmPm,"ax",%progbits
 266              		.align	2
 267              		.code	16
 268              		.thumb_func
 269              		.type	RTC_GetAmPm, %function
 270              	RTC_GetAmPm:
 271              	.LFB7:
 557:.\Generated_Source\PSoC4/RTC.h **** 
 558:.\Generated_Source\PSoC4/RTC.h **** 
 559:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 560:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetAmPm
 561:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 562:.\Generated_Source\PSoC4/RTC.h **** *
 563:.\Generated_Source\PSoC4/RTC.h **** * \brief
 564:.\Generated_Source\PSoC4/RTC.h **** *  Returns the AM/PM status from the time value that is passed as parameter.
 565:.\Generated_Source\PSoC4/RTC.h **** *
 566:.\Generated_Source\PSoC4/RTC.h **** * \param
 567:.\Generated_Source\PSoC4/RTC.h **** *  time The time value.
 568:.\Generated_Source\PSoC4/RTC.h **** *
 569:.\Generated_Source\PSoC4/RTC.h **** * \return
 570:.\Generated_Source\PSoC4/RTC.h **** *  RTC_AM - AM.
 571:.\Generated_Source\PSoC4/RTC.h **** * \return
 572:.\Generated_Source\PSoC4/RTC.h **** *  RTC_PM - PM.
 573:.\Generated_Source\PSoC4/RTC.h **** *
 574:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetAmPm(uint32 inputTime)
 576:.\Generated_Source\PSoC4/RTC.h **** {
 272              		.loc 1 576 0
 273              		.cfi_startproc
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 16


 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 577:.\Generated_Source\PSoC4/RTC.h ****     return (RTC_IsBitSet(inputTime, RTC_PERIOD_OF_DAY_MASK));
 283              		.loc 1 577 0
 284 0008 7A68     		ldr	r2, [r7, #4]
 285 000a 8023     		mov	r3, #128
 286 000c DB03     		lsl	r3, r3, #15
 287 000e 101C     		mov	r0, r2
 288 0010 191C     		mov	r1, r3
 289 0012 FFF7FEFF 		bl	RTC_IsBitSet
 290 0016 031C     		mov	r3, r0
 578:.\Generated_Source\PSoC4/RTC.h **** }
 291              		.loc 1 578 0
 292 0018 181C     		mov	r0, r3
 293 001a BD46     		mov	sp, r7
 294 001c 02B0     		add	sp, sp, #8
 295              		@ sp needed
 296 001e 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE7:
 299              		.size	RTC_GetAmPm, .-RTC_GetAmPm
 300              		.section	.text.RTC_GetDay,"ax",%progbits
 301              		.align	2
 302              		.code	16
 303              		.thumb_func
 304              		.type	RTC_GetDay, %function
 305              	RTC_GetDay:
 306              	.LFB8:
 579:.\Generated_Source\PSoC4/RTC.h **** 
 580:.\Generated_Source\PSoC4/RTC.h **** 
 581:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 582:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDay
 583:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 584:.\Generated_Source\PSoC4/RTC.h **** *
 585:.\Generated_Source\PSoC4/RTC.h **** * \brief
 586:.\Generated_Source\PSoC4/RTC.h **** *  Returns the day value from the date value that is passed as parameter.
 587:.\Generated_Source\PSoC4/RTC.h **** *
 588:.\Generated_Source\PSoC4/RTC.h **** * \param
 589:.\Generated_Source\PSoC4/RTC.h **** *  date The date value.
 590:.\Generated_Source\PSoC4/RTC.h **** *
 591:.\Generated_Source\PSoC4/RTC.h **** * \return
 592:.\Generated_Source\PSoC4/RTC.h **** *  The day value.
 593:.\Generated_Source\PSoC4/RTC.h **** *
 594:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 595:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDay(uint32 date)
 596:.\Generated_Source\PSoC4/RTC.h **** {
 307              		.loc 1 596 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 84B0     		sub	sp, sp, #16
 314              		.cfi_def_cfa_offset 24
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 17


 317 0006 7860     		str	r0, [r7, #4]
 597:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 598:.\Generated_Source\PSoC4/RTC.h **** 
 599:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_DAY_MASK) >> RTC_10_DAY_OFFSET) * 10u;
 318              		.loc 1 599 0
 319 0008 7A68     		ldr	r2, [r7, #4]
 320 000a C023     		mov	r3, #192
 321 000c 9B03     		lsl	r3, r3, #14
 322 000e 1340     		and	r3, r2
 323 0010 1A0D     		lsr	r2, r3, #20
 324 0012 131C     		mov	r3, r2
 325 0014 9B00     		lsl	r3, r3, #2
 326 0016 9B18     		add	r3, r3, r2
 327 0018 5B00     		lsl	r3, r3, #1
 328 001a FB60     		str	r3, [r7, #12]
 600:.\Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 329              		.loc 1 600 0
 330 001c 7A68     		ldr	r2, [r7, #4]
 331 001e F023     		mov	r3, #240
 332 0020 1B03     		lsl	r3, r3, #12
 333 0022 1340     		and	r3, r2
 334 0024 1B0C     		lsr	r3, r3, #16
 335 0026 FA68     		ldr	r2, [r7, #12]
 336 0028 D318     		add	r3, r2, r3
 337 002a FB60     		str	r3, [r7, #12]
 601:.\Generated_Source\PSoC4/RTC.h **** 
 602:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 338              		.loc 1 602 0
 339 002c FB68     		ldr	r3, [r7, #12]
 603:.\Generated_Source\PSoC4/RTC.h **** }
 340              		.loc 1 603 0
 341 002e 181C     		mov	r0, r3
 342 0030 BD46     		mov	sp, r7
 343 0032 04B0     		add	sp, sp, #16
 344              		@ sp needed
 345 0034 80BD     		pop	{r7, pc}
 346              		.cfi_endproc
 347              	.LFE8:
 348              		.size	RTC_GetDay, .-RTC_GetDay
 349 0036 C046     		.section	.text.RTC_GetMonth,"ax",%progbits
 350              		.align	2
 351              		.code	16
 352              		.thumb_func
 353              		.type	RTC_GetMonth, %function
 354              	RTC_GetMonth:
 355              	.LFB9:
 604:.\Generated_Source\PSoC4/RTC.h **** 
 605:.\Generated_Source\PSoC4/RTC.h **** 
 606:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 607:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMonth
 608:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 609:.\Generated_Source\PSoC4/RTC.h **** *
 610:.\Generated_Source\PSoC4/RTC.h **** * \brief
 611:.\Generated_Source\PSoC4/RTC.h **** *  Returns the month value from the date value that is passed as parameter.
 612:.\Generated_Source\PSoC4/RTC.h **** *
 613:.\Generated_Source\PSoC4/RTC.h **** * \param
 614:.\Generated_Source\PSoC4/RTC.h **** *  date The date value.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 18


 615:.\Generated_Source\PSoC4/RTC.h **** *
 616:.\Generated_Source\PSoC4/RTC.h **** * \return
 617:.\Generated_Source\PSoC4/RTC.h **** *  The month value.
 618:.\Generated_Source\PSoC4/RTC.h **** *
 619:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 620:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMonth(uint32 date)
 621:.\Generated_Source\PSoC4/RTC.h **** {
 356              		.loc 1 621 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 622:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 623:.\Generated_Source\PSoC4/RTC.h **** 
 624:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_MONTH_MASK) >> RTC_10_MONTH_OFFSET) * 10u;
 367              		.loc 1 624 0
 368 0008 7A68     		ldr	r2, [r7, #4]
 369 000a 8023     		mov	r3, #128
 370 000c 5B05     		lsl	r3, r3, #21
 371 000e 1340     		and	r3, r2
 372 0010 1A0F     		lsr	r2, r3, #28
 373 0012 131C     		mov	r3, r2
 374 0014 9B00     		lsl	r3, r3, #2
 375 0016 9B18     		add	r3, r3, r2
 376 0018 5B00     		lsl	r3, r3, #1
 377 001a FB60     		str	r3, [r7, #12]
 625:.\Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_MONTH_MASK) >> RTC_MONTH_OFFSET;
 378              		.loc 1 625 0
 379 001c 7A68     		ldr	r2, [r7, #4]
 380 001e F023     		mov	r3, #240
 381 0020 1B05     		lsl	r3, r3, #20
 382 0022 1340     		and	r3, r2
 383 0024 1B0E     		lsr	r3, r3, #24
 384 0026 FA68     		ldr	r2, [r7, #12]
 385 0028 D318     		add	r3, r2, r3
 386 002a FB60     		str	r3, [r7, #12]
 626:.\Generated_Source\PSoC4/RTC.h **** 
 627:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 387              		.loc 1 627 0
 388 002c FB68     		ldr	r3, [r7, #12]
 628:.\Generated_Source\PSoC4/RTC.h **** }
 389              		.loc 1 628 0
 390 002e 181C     		mov	r0, r3
 391 0030 BD46     		mov	sp, r7
 392 0032 04B0     		add	sp, sp, #16
 393              		@ sp needed
 394 0034 80BD     		pop	{r7, pc}
 395              		.cfi_endproc
 396              	.LFE9:
 397              		.size	RTC_GetMonth, .-RTC_GetMonth
 398 0036 C046     		.section	.text.RTC_GetYear,"ax",%progbits
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 19


 399              		.align	2
 400              		.code	16
 401              		.thumb_func
 402              		.type	RTC_GetYear, %function
 403              	RTC_GetYear:
 404              	.LFB10:
 629:.\Generated_Source\PSoC4/RTC.h **** 
 630:.\Generated_Source\PSoC4/RTC.h **** 
 631:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 632:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetYear
 633:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 634:.\Generated_Source\PSoC4/RTC.h **** *
 635:.\Generated_Source\PSoC4/RTC.h **** * \brief
 636:.\Generated_Source\PSoC4/RTC.h **** *  Returns the year value from the date value that is passed as parameter.
 637:.\Generated_Source\PSoC4/RTC.h **** *
 638:.\Generated_Source\PSoC4/RTC.h **** * \param
 639:.\Generated_Source\PSoC4/RTC.h **** *  date The date value.
 640:.\Generated_Source\PSoC4/RTC.h **** *
 641:.\Generated_Source\PSoC4/RTC.h **** * \return
 642:.\Generated_Source\PSoC4/RTC.h **** *  The year value.
 643:.\Generated_Source\PSoC4/RTC.h **** *
 644:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 645:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetYear(uint32 date)
 646:.\Generated_Source\PSoC4/RTC.h **** {
 405              		.loc 1 646 0
 406              		.cfi_startproc
 407 0000 80B5     		push	{r7, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 84B0     		sub	sp, sp, #16
 412              		.cfi_def_cfa_offset 24
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 415 0006 7860     		str	r0, [r7, #4]
 647:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 648:.\Generated_Source\PSoC4/RTC.h **** 
 649:.\Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_1000_YEAR_MASK) >> RTC_1000_YEAR_OFFSET) * 1000u;
 416              		.loc 1 649 0
 417 0008 7A68     		ldr	r2, [r7, #4]
 418 000a C023     		mov	r3, #192
 419 000c 9B01     		lsl	r3, r3, #6
 420 000e 1340     		and	r3, r2
 421 0010 1B0B     		lsr	r3, r3, #12
 422 0012 FA22     		mov	r2, #250
 423 0014 9200     		lsl	r2, r2, #2
 424 0016 5343     		mul	r3, r2
 425 0018 FB60     		str	r3, [r7, #12]
 650:.\Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_100_YEAR_MASK) >> RTC_100_YEAR_OFFSET) * 100u;
 426              		.loc 1 650 0
 427 001a 7A68     		ldr	r2, [r7, #4]
 428 001c F023     		mov	r3, #240
 429 001e 1B01     		lsl	r3, r3, #4
 430 0020 1340     		and	r3, r2
 431 0022 1B0A     		lsr	r3, r3, #8
 432 0024 6422     		mov	r2, #100
 433 0026 5343     		mul	r3, r2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 20


 434 0028 FA68     		ldr	r2, [r7, #12]
 435 002a D318     		add	r3, r2, r3
 436 002c FB60     		str	r3, [r7, #12]
 651:.\Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_10_YEAR_MASK) >> RTC_10_YEAR_OFFSET) * 10u;
 437              		.loc 1 651 0
 438 002e 7B68     		ldr	r3, [r7, #4]
 439 0030 F022     		mov	r2, #240
 440 0032 1340     		and	r3, r2
 441 0034 1A09     		lsr	r2, r3, #4
 442 0036 131C     		mov	r3, r2
 443 0038 9B00     		lsl	r3, r3, #2
 444 003a 9B18     		add	r3, r3, r2
 445 003c 5B00     		lsl	r3, r3, #1
 446 003e 1A1C     		mov	r2, r3
 447 0040 FB68     		ldr	r3, [r7, #12]
 448 0042 9B18     		add	r3, r3, r2
 449 0044 FB60     		str	r3, [r7, #12]
 652:.\Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_YEAR_MASK) >> RTC_YEAR_OFFSET;
 450              		.loc 1 652 0
 451 0046 7B68     		ldr	r3, [r7, #4]
 452 0048 0F22     		mov	r2, #15
 453 004a 1340     		and	r3, r2
 454 004c FA68     		ldr	r2, [r7, #12]
 455 004e D318     		add	r3, r2, r3
 456 0050 FB60     		str	r3, [r7, #12]
 653:.\Generated_Source\PSoC4/RTC.h **** 
 654:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 457              		.loc 1 654 0
 458 0052 FB68     		ldr	r3, [r7, #12]
 655:.\Generated_Source\PSoC4/RTC.h **** }
 459              		.loc 1 655 0
 460 0054 181C     		mov	r0, r3
 461 0056 BD46     		mov	sp, r7
 462 0058 04B0     		add	sp, sp, #16
 463              		@ sp needed
 464 005a 80BD     		pop	{r7, pc}
 465              		.cfi_endproc
 466              	.LFE10:
 467              		.size	RTC_GetYear, .-RTC_GetYear
 468              		.section	.text.RTC_GetTimeFormat,"ax",%progbits
 469              		.align	2
 470              		.code	16
 471              		.thumb_func
 472              		.type	RTC_GetTimeFormat, %function
 473              	RTC_GetTimeFormat:
 474              	.LFB24:
 656:.\Generated_Source\PSoC4/RTC.h **** 
 657:.\Generated_Source\PSoC4/RTC.h **** 
 658:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetSecond
 660:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 661:.\Generated_Source\PSoC4/RTC.h **** *\internal
 662:.\Generated_Source\PSoC4/RTC.h **** * \brief
 663:.\Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new second value.
 664:.\Generated_Source\PSoC4/RTC.h **** *
 665:.\Generated_Source\PSoC4/RTC.h **** * \param
 666:.\Generated_Source\PSoC4/RTC.h **** * time The current date.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 21


 667:.\Generated_Source\PSoC4/RTC.h **** * \param
 668:.\Generated_Source\PSoC4/RTC.h **** * second The seconds value to be set to the time variable.
 669:.\Generated_Source\PSoC4/RTC.h **** *
 670:.\Generated_Source\PSoC4/RTC.h **** * \return
 671:.\Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 672:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 673:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 674:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond)
 675:.\Generated_Source\PSoC4/RTC.h **** {
 676:.\Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_SECONDS_FULL_MASK);
 677:.\Generated_Source\PSoC4/RTC.h **** 
 678:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond / 10u) << RTC_10_SECONDS_OFFSET;
 679:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond % 10u) << RTC_SECONDS_OFFSET;
 680:.\Generated_Source\PSoC4/RTC.h **** 
 681:.\Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 682:.\Generated_Source\PSoC4/RTC.h **** }
 683:.\Generated_Source\PSoC4/RTC.h **** 
 684:.\Generated_Source\PSoC4/RTC.h **** 
 685:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 686:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMinutes
 687:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 688:.\Generated_Source\PSoC4/RTC.h **** *\internal
 689:.\Generated_Source\PSoC4/RTC.h **** * \brief
 690:.\Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new minute value.
 691:.\Generated_Source\PSoC4/RTC.h **** *
 692:.\Generated_Source\PSoC4/RTC.h **** * \param
 693:.\Generated_Source\PSoC4/RTC.h **** *  time The current date.
 694:.\Generated_Source\PSoC4/RTC.h **** * \param
 695:.\Generated_Source\PSoC4/RTC.h **** *  minutes The minutes value to be set to the time variable.
 696:.\Generated_Source\PSoC4/RTC.h **** *
 697:.\Generated_Source\PSoC4/RTC.h **** * \return
 698:.\Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 699:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 700:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 701:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute)
 702:.\Generated_Source\PSoC4/RTC.h **** {
 703:.\Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_MINUTES_FULL_MASK);
 704:.\Generated_Source\PSoC4/RTC.h **** 
 705:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute / 10u) << RTC_10_MINUTES_OFFSET;
 706:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute % 10u) << RTC_MINUTES_OFFSET;
 707:.\Generated_Source\PSoC4/RTC.h **** 
 708:.\Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 709:.\Generated_Source\PSoC4/RTC.h **** }
 710:.\Generated_Source\PSoC4/RTC.h **** 
 711:.\Generated_Source\PSoC4/RTC.h **** 
 712:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 713:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetHours
 714:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 715:.\Generated_Source\PSoC4/RTC.h **** *\internal
 716:.\Generated_Source\PSoC4/RTC.h **** * \brief
 717:.\Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new hour value.
 718:.\Generated_Source\PSoC4/RTC.h **** *
 719:.\Generated_Source\PSoC4/RTC.h **** * \param
 720:.\Generated_Source\PSoC4/RTC.h **** * time The current date.
 721:.\Generated_Source\PSoC4/RTC.h **** * \param
 722:.\Generated_Source\PSoC4/RTC.h **** * hours The hours value to be set to the time variable.
 723:.\Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 22


 724:.\Generated_Source\PSoC4/RTC.h **** * \return
 725:.\Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 726:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 727:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 728:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours)
 729:.\Generated_Source\PSoC4/RTC.h **** {
 730:.\Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_HOURS_FULL_MASK);
 731:.\Generated_Source\PSoC4/RTC.h **** 
 732:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours / 10u) << RTC_10_HOURS_OFFSET;
 733:.\Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours % 10u) << RTC_HOURS_OFFSET;
 734:.\Generated_Source\PSoC4/RTC.h **** 
 735:.\Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 736:.\Generated_Source\PSoC4/RTC.h **** }
 737:.\Generated_Source\PSoC4/RTC.h **** 
 738:.\Generated_Source\PSoC4/RTC.h **** 
 739:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 740:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetAmPm
 741:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 742:.\Generated_Source\PSoC4/RTC.h **** *\internal
 743:.\Generated_Source\PSoC4/RTC.h **** * \brief
 744:.\Generated_Source\PSoC4/RTC.h **** *  Updates the time variable with the AmPm status.
 745:.\Generated_Source\PSoC4/RTC.h **** *
 746:.\Generated_Source\PSoC4/RTC.h **** * \param
 747:.\Generated_Source\PSoC4/RTC.h **** * time The current date.
 748:.\Generated_Source\PSoC4/RTC.h **** * \param
 749:.\Generated_Source\PSoC4/RTC.h **** * periodOfDay The AmPm status to be set to the time variable.
 750:.\Generated_Source\PSoC4/RTC.h **** *
 751:.\Generated_Source\PSoC4/RTC.h **** * \return
 752:.\Generated_Source\PSoC4/RTC.h **** *  The updated time variable.
 753:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 754:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 755:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay)
 756:.\Generated_Source\PSoC4/RTC.h **** {
 757:.\Generated_Source\PSoC4/RTC.h ****     if(0u != periodOfDay)
 758:.\Generated_Source\PSoC4/RTC.h ****     {
 759:.\Generated_Source\PSoC4/RTC.h ****         inputTime &= ~(RTC_PERIOD_OF_DAY_MASK);
 760:.\Generated_Source\PSoC4/RTC.h ****     }
 761:.\Generated_Source\PSoC4/RTC.h ****     else
 762:.\Generated_Source\PSoC4/RTC.h ****     {
 763:.\Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_PERIOD_OF_DAY_MASK;
 764:.\Generated_Source\PSoC4/RTC.h ****     }
 765:.\Generated_Source\PSoC4/RTC.h **** 
 766:.\Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 767:.\Generated_Source\PSoC4/RTC.h **** }
 768:.\Generated_Source\PSoC4/RTC.h **** 
 769:.\Generated_Source\PSoC4/RTC.h **** 
 770:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 771:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetDay
 772:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 773:.\Generated_Source\PSoC4/RTC.h **** *\internal
 774:.\Generated_Source\PSoC4/RTC.h **** * \brief
 775:.\Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new day value.
 776:.\Generated_Source\PSoC4/RTC.h **** *
 777:.\Generated_Source\PSoC4/RTC.h **** * \param
 778:.\Generated_Source\PSoC4/RTC.h **** * date The current date.
 779:.\Generated_Source\PSoC4/RTC.h **** * \param
 780:.\Generated_Source\PSoC4/RTC.h **** * day The month to be set to the date variable.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 23


 781:.\Generated_Source\PSoC4/RTC.h **** *
 782:.\Generated_Source\PSoC4/RTC.h **** * \return
 783:.\Generated_Source\PSoC4/RTC.h **** *  The updated date variable.
 784:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 785:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay)
 787:.\Generated_Source\PSoC4/RTC.h **** {
 788:.\Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_DAY_FULL_MASK);
 789:.\Generated_Source\PSoC4/RTC.h **** 
 790:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay / 10u) << RTC_10_DAY_OFFSET;
 791:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay % 10u) << RTC_DAY_OFFSET;
 792:.\Generated_Source\PSoC4/RTC.h **** 
 793:.\Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 794:.\Generated_Source\PSoC4/RTC.h **** }
 795:.\Generated_Source\PSoC4/RTC.h **** 
 796:.\Generated_Source\PSoC4/RTC.h **** 
 797:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 798:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMonth
 799:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 800:.\Generated_Source\PSoC4/RTC.h **** *\internal
 801:.\Generated_Source\PSoC4/RTC.h **** * \brief
 802:.\Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new month value.
 803:.\Generated_Source\PSoC4/RTC.h **** *
 804:.\Generated_Source\PSoC4/RTC.h **** * \param
 805:.\Generated_Source\PSoC4/RTC.h **** * date The current date.
 806:.\Generated_Source\PSoC4/RTC.h **** * \param
 807:.\Generated_Source\PSoC4/RTC.h **** * month The month that to be set to the date variable.
 808:.\Generated_Source\PSoC4/RTC.h **** *
 809:.\Generated_Source\PSoC4/RTC.h **** * \return
 810:.\Generated_Source\PSoC4/RTC.h **** *  The updated date variable.
 811:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 812:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 813:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth)
 814:.\Generated_Source\PSoC4/RTC.h **** {
 815:.\Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_MONTH_FULL_MASK);
 816:.\Generated_Source\PSoC4/RTC.h **** 
 817:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth / 10u) << RTC_10_MONTH_OFFSET;
 818:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth % 10u) << RTC_MONTH_OFFSET;
 819:.\Generated_Source\PSoC4/RTC.h **** 
 820:.\Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 821:.\Generated_Source\PSoC4/RTC.h **** }
 822:.\Generated_Source\PSoC4/RTC.h **** 
 823:.\Generated_Source\PSoC4/RTC.h **** 
 824:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 825:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetYear
 826:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 827:.\Generated_Source\PSoC4/RTC.h **** *\internal
 828:.\Generated_Source\PSoC4/RTC.h **** * \brief
 829:.\Generated_Source\PSoC4/RTC.h **** *  Updates the date variable with the new year value.
 830:.\Generated_Source\PSoC4/RTC.h **** *
 831:.\Generated_Source\PSoC4/RTC.h **** * \param
 832:.\Generated_Source\PSoC4/RTC.h **** * date The current date.
 833:.\Generated_Source\PSoC4/RTC.h **** * \param
 834:.\Generated_Source\PSoC4/RTC.h **** * year The year to be set to the date variable.
 835:.\Generated_Source\PSoC4/RTC.h **** *
 836:.\Generated_Source\PSoC4/RTC.h **** * \return
 837:.\Generated_Source\PSoC4/RTC.h **** * The updated date variable.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 24


 838:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 839:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 840:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear)
 841:.\Generated_Source\PSoC4/RTC.h **** {
 842:.\Generated_Source\PSoC4/RTC.h ****     inputDate  &= ~(RTC_YEAR_FULL_MASK);
 843:.\Generated_Source\PSoC4/RTC.h **** 
 844:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 1000u) << RTC_1000_YEAR_OFFSET;
 845:.\Generated_Source\PSoC4/RTC.h ****     inputYear %= 1000u;
 846:.\Generated_Source\PSoC4/RTC.h **** 
 847:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 100u) << RTC_100_YEAR_OFFSET;
 848:.\Generated_Source\PSoC4/RTC.h ****     inputYear %= 100u;
 849:.\Generated_Source\PSoC4/RTC.h **** 
 850:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 10u) << RTC_10_YEAR_OFFSET;
 851:.\Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear % 10u) << RTC_YEAR_OFFSET;
 852:.\Generated_Source\PSoC4/RTC.h **** 
 853:.\Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 854:.\Generated_Source\PSoC4/RTC.h **** }
 855:.\Generated_Source\PSoC4/RTC.h **** 
 856:.\Generated_Source\PSoC4/RTC.h **** 
 857:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 858:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMinSec
 859:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 860:.\Generated_Source\PSoC4/RTC.h **** *\internal
 861:.\Generated_Source\PSoC4/RTC.h **** * \brief
 862:.\Generated_Source\PSoC4/RTC.h **** * This is an internal function that calculates the value of the next Second/Minute
 863:.\Generated_Source\PSoC4/RTC.h **** * that follows after the current Minute/Second.
 864:.\Generated_Source\PSoC4/RTC.h **** *
 865:.\Generated_Source\PSoC4/RTC.h **** * \param
 866:.\Generated_Source\PSoC4/RTC.h **** * curVal The current Second/Minute value.
 867:.\Generated_Source\PSoC4/RTC.h **** *
 868:.\Generated_Source\PSoC4/RTC.h **** * \return
 869:.\Generated_Source\PSoC4/RTC.h **** * Returns the Second/Minute which follows after the current Second/Minute.
 870:.\Generated_Source\PSoC4/RTC.h **** *\endinternal
 871:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 872:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMinSec(uint32 curVal)
 873:.\Generated_Source\PSoC4/RTC.h **** {
 874:.\Generated_Source\PSoC4/RTC.h ****     return((curVal < 59u) ? (curVal + 1u) : 0u);
 875:.\Generated_Source\PSoC4/RTC.h **** }
 876:.\Generated_Source\PSoC4/RTC.h **** 
 877:.\Generated_Source\PSoC4/RTC.h **** 
 878:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 879:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextHour
 880:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 881:.\Generated_Source\PSoC4/RTC.h **** *\internal
 882:.\Generated_Source\PSoC4/RTC.h **** * \brief
 883:.\Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Hour
 884:.\Generated_Source\PSoC4/RTC.h **** *  that follows after the current Hour.
 885:.\Generated_Source\PSoC4/RTC.h **** *
 886:.\Generated_Source\PSoC4/RTC.h **** * \param
 887:.\Generated_Source\PSoC4/RTC.h **** * curVal The current Hour value.
 888:.\Generated_Source\PSoC4/RTC.h **** *
 889:.\Generated_Source\PSoC4/RTC.h **** * \return
 890:.\Generated_Source\PSoC4/RTC.h **** *  Returns the Hour which follows after the current Hour.
 891:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 892:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 893:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextHour(uint32 curVal)
 894:.\Generated_Source\PSoC4/RTC.h **** {
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 25


 895:.\Generated_Source\PSoC4/RTC.h ****     return((curVal < 23u) ? (curVal + 1u) : 0u);
 896:.\Generated_Source\PSoC4/RTC.h **** }
 897:.\Generated_Source\PSoC4/RTC.h **** 
 898:.\Generated_Source\PSoC4/RTC.h **** 
 899:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 900:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextDay
 901:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 902:.\Generated_Source\PSoC4/RTC.h **** * \internal
 903:.\Generated_Source\PSoC4/RTC.h **** * \brief
 904:.\Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Day
 905:.\Generated_Source\PSoC4/RTC.h **** *  that follows after the current Day.
 906:.\Generated_Source\PSoC4/RTC.h **** *
 907:.\Generated_Source\PSoC4/RTC.h **** * \param
 908:.\Generated_Source\PSoC4/RTC.h **** *  curYear The current year.
 909:.\Generated_Source\PSoC4/RTC.h **** * \param
 910:.\Generated_Source\PSoC4/RTC.h **** *  curMonth The current month.
 911:.\Generated_Source\PSoC4/RTC.h **** * \param
 912:.\Generated_Source\PSoC4/RTC.h **** *  curDay The current day.
 913:.\Generated_Source\PSoC4/RTC.h **** * \param
 914:.\Generated_Source\PSoC4/RTC.h **** *  alarmCfgMask Alarm Config Mask.
 915:.\Generated_Source\PSoC4/RTC.h **** *
 916:.\Generated_Source\PSoC4/RTC.h **** * \return
 917:.\Generated_Source\PSoC4/RTC.h **** *  Returns the day which follows after the current Day.
 918:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 919:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 920:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarm
 921:.\Generated_Source\PSoC4/RTC.h **** {
 922:.\Generated_Source\PSoC4/RTC.h ****     uint32 daysInMonth;
 923:.\Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal;
 924:.\Generated_Source\PSoC4/RTC.h **** 
 925:.\Generated_Source\PSoC4/RTC.h ****     daysInMonth = RTC_DaysInMonth(curMonth, curYear);
 926:.\Generated_Source\PSoC4/RTC.h **** 
 927:.\Generated_Source\PSoC4/RTC.h ****     if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 928:.\Generated_Source\PSoC4/RTC.h ****     {
 929:.\Generated_Source\PSoC4/RTC.h ****         tmpVal = curDay + RTC_DAYS_PER_WEEK;
 930:.\Generated_Source\PSoC4/RTC.h ****         tmpVal = (tmpVal > daysInMonth) ? (tmpVal - daysInMonth) : tmpVal;
 931:.\Generated_Source\PSoC4/RTC.h ****     }
 932:.\Generated_Source\PSoC4/RTC.h ****     else
 933:.\Generated_Source\PSoC4/RTC.h ****     {
 934:.\Generated_Source\PSoC4/RTC.h ****         tmpVal = (curDay < daysInMonth) ? (curDay + 1u) : 1u;
 935:.\Generated_Source\PSoC4/RTC.h ****     }
 936:.\Generated_Source\PSoC4/RTC.h **** 
 937:.\Generated_Source\PSoC4/RTC.h ****     return(tmpVal);
 938:.\Generated_Source\PSoC4/RTC.h **** }
 939:.\Generated_Source\PSoC4/RTC.h **** 
 940:.\Generated_Source\PSoC4/RTC.h **** 
 941:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 942:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMonth
 943:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 944:.\Generated_Source\PSoC4/RTC.h **** * \internal
 945:.\Generated_Source\PSoC4/RTC.h **** * \brief
 946:.\Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next month
 947:.\Generated_Source\PSoC4/RTC.h **** *  that follows after the current month.
 948:.\Generated_Source\PSoC4/RTC.h **** *
 949:.\Generated_Source\PSoC4/RTC.h **** * \param
 950:.\Generated_Source\PSoC4/RTC.h **** *  curMonth The current month.
 951:.\Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 26


 952:.\Generated_Source\PSoC4/RTC.h **** * \return
 953:.\Generated_Source\PSoC4/RTC.h **** *  Returns the month which follows after the current month.
 954:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 955:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 956:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMonth(uint32 curMonth)
 957:.\Generated_Source\PSoC4/RTC.h **** {
 958:.\Generated_Source\PSoC4/RTC.h ****     return((curMonth < 12u) ? (curMonth + 1u) : 1u);
 959:.\Generated_Source\PSoC4/RTC.h **** }
 960:.\Generated_Source\PSoC4/RTC.h **** 
 961:.\Generated_Source\PSoC4/RTC.h **** 
 962:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 963:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextYear
 964:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 965:.\Generated_Source\PSoC4/RTC.h **** * \internal
 966:.\Generated_Source\PSoC4/RTC.h **** * \brief
 967:.\Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next year
 968:.\Generated_Source\PSoC4/RTC.h **** *  that follows after the current year.
 969:.\Generated_Source\PSoC4/RTC.h **** *
 970:.\Generated_Source\PSoC4/RTC.h **** * \param
 971:.\Generated_Source\PSoC4/RTC.h **** *  curYear The current year.
 972:.\Generated_Source\PSoC4/RTC.h **** *
 973:.\Generated_Source\PSoC4/RTC.h **** * \return
 974:.\Generated_Source\PSoC4/RTC.h **** *  Returns the year which follows after the current year.
 975:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 976:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 977:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextYear(uint32 curYear)
 978:.\Generated_Source\PSoC4/RTC.h **** {
 979:.\Generated_Source\PSoC4/RTC.h ****     return(curYear + 1u);
 980:.\Generated_Source\PSoC4/RTC.h **** }
 981:.\Generated_Source\PSoC4/RTC.h **** 
 982:.\Generated_Source\PSoC4/RTC.h **** 
 983:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 984:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetTimeFormat
 985:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 986:.\Generated_Source\PSoC4/RTC.h **** * \internal
 987:.\Generated_Source\PSoC4/RTC.h **** * \brief
 988:.\Generated_Source\PSoC4/RTC.h **** *  Updates the "Time Format" value in the variable that contains time in the
 989:.\Generated_Source\PSoC4/RTC.h **** *  "HH:MM:SS" format.
 990:.\Generated_Source\PSoC4/RTC.h **** *
 991:.\Generated_Source\PSoC4/RTC.h **** * \param
 992:.\Generated_Source\PSoC4/RTC.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
 993:.\Generated_Source\PSoC4/RTC.h **** *
 994:.\Generated_Source\PSoC4/RTC.h **** * \return
 995:.\Generated_Source\PSoC4/RTC.h **** *  Returns the updated value of the time in the "HH:MM:SS" format.
 996:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
 997:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 998:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat)
 999:.\Generated_Source\PSoC4/RTC.h **** {
1000:.\Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_TIME_FORMAT_MASK);
1001:.\Generated_Source\PSoC4/RTC.h **** 
1002:.\Generated_Source\PSoC4/RTC.h ****     if((uint32)RTC_12_HOURS_FORMAT != timeFormat)
1003:.\Generated_Source\PSoC4/RTC.h ****     {
1004:.\Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_TIME_FORMAT_MASK;
1005:.\Generated_Source\PSoC4/RTC.h ****     }
1006:.\Generated_Source\PSoC4/RTC.h **** 
1007:.\Generated_Source\PSoC4/RTC.h ****     return(inputTime);
1008:.\Generated_Source\PSoC4/RTC.h **** }
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 27


1009:.\Generated_Source\PSoC4/RTC.h **** 
1010:.\Generated_Source\PSoC4/RTC.h **** 
1011:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1012:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetTimeFormat
1013:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1014:.\Generated_Source\PSoC4/RTC.h **** * \internal
1015:.\Generated_Source\PSoC4/RTC.h **** * \brief
1016:.\Generated_Source\PSoC4/RTC.h **** *  Reads the time format from the variable that contains time in the
1017:.\Generated_Source\PSoC4/RTC.h **** *  "HH:MM:SS" format.
1018:.\Generated_Source\PSoC4/RTC.h **** *
1019:.\Generated_Source\PSoC4/RTC.h **** * \param
1020:.\Generated_Source\PSoC4/RTC.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
1021:.\Generated_Source\PSoC4/RTC.h **** *
1022:.\Generated_Source\PSoC4/RTC.h **** * \return
1023:.\Generated_Source\PSoC4/RTC.h **** *  Returns the time format that is stored in the variable that contains time
1024:.\Generated_Source\PSoC4/RTC.h **** *  in the "HH:MM:SS" format.
1025:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
1026:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1027:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetTimeFormat(uint32 inputTime)
1028:.\Generated_Source\PSoC4/RTC.h **** {
 475              		.loc 1 1028 0
 476              		.cfi_startproc
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 82B0     		sub	sp, sp, #8
 482              		.cfi_def_cfa_offset 16
 483 0004 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 485 0006 7860     		str	r0, [r7, #4]
1029:.\Generated_Source\PSoC4/RTC.h ****     return ((0uL != (inputTime & (1uL << RTC_TIME_FORMAT_OFFSET))) ? (uint32)RTC_12_HOURS_FORMAT :
 486              		.loc 1 1029 0
 487 0008 7A68     		ldr	r2, [r7, #4]
 488 000a 8023     		mov	r3, #128
 489 000c 1B04     		lsl	r3, r3, #16
 490 000e 1340     		and	r3, r2
 491 0010 01D0     		beq	.L26
 492              		.loc 1 1029 0 is_stmt 0 discriminator 1
 493 0012 0123     		mov	r3, #1
 494 0014 00E0     		b	.L27
 495              	.L26:
 496              		.loc 1 1029 0 discriminator 2
 497 0016 0023     		mov	r3, #0
 498              	.L27:
1030:.\Generated_Source\PSoC4/RTC.h ****                                                                                   (uint32)RTC_24_HO
1031:.\Generated_Source\PSoC4/RTC.h **** }
 499              		.loc 1 1031 0 is_stmt 1 discriminator 4
 500 0018 181C     		mov	r0, r3
 501 001a BD46     		mov	sp, r7
 502 001c 02B0     		add	sp, sp, #8
 503              		@ sp needed
 504 001e 80BD     		pop	{r7, pc}
 505              		.cfi_endproc
 506              	.LFE24:
 507              		.size	RTC_GetTimeFormat, .-RTC_GetTimeFormat
 508              		.global	__aeabi_uidiv
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 28


 509              		.section	.text.RTC_ConstructTime,"ax",%progbits
 510              		.align	2
 511              		.code	16
 512              		.thumb_func
 513              		.type	RTC_ConstructTime, %function
 514              	RTC_ConstructTime:
 515              	.LFB25:
1032:.\Generated_Source\PSoC4/RTC.h **** 
1033:.\Generated_Source\PSoC4/RTC.h **** 
1034:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1035:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructTime
1036:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1037:.\Generated_Source\PSoC4/RTC.h **** *
1038:.\Generated_Source\PSoC4/RTC.h **** * \brief
1039:.\Generated_Source\PSoC4/RTC.h **** *  Returns the time in the format used in APIs from individual elements
1040:.\Generated_Source\PSoC4/RTC.h **** *  passed (hour, min, sec etc)
1041:.\Generated_Source\PSoC4/RTC.h **** *
1042:.\Generated_Source\PSoC4/RTC.h **** * \param
1043:.\Generated_Source\PSoC4/RTC.h **** * timeFormat The 12/24 hours time format <br>
1044:.\Generated_Source\PSoC4/RTC.h **** * RTC_24_HOURS_FORMAT - The 24 hours format. <br>
1045:.\Generated_Source\PSoC4/RTC.h **** * RTC_12_HOURS_FORMAT - The 12 hours format.
1046:.\Generated_Source\PSoC4/RTC.h **** *
1047:.\Generated_Source\PSoC4/RTC.h **** * \param
1048:.\Generated_Source\PSoC4/RTC.h **** * stateAmPm  The AM/PM status <br>
1049:.\Generated_Source\PSoC4/RTC.h **** * RTC_AM - AM. <br>
1050:.\Generated_Source\PSoC4/RTC.h **** * RTC_PM - PM.
1051:.\Generated_Source\PSoC4/RTC.h **** *
1052:.\Generated_Source\PSoC4/RTC.h **** * \param
1053:.\Generated_Source\PSoC4/RTC.h **** *  hour The hour.
1054:.\Generated_Source\PSoC4/RTC.h **** *
1055:.\Generated_Source\PSoC4/RTC.h **** * \param
1056:.\Generated_Source\PSoC4/RTC.h **** *  min The minute.
1057:.\Generated_Source\PSoC4/RTC.h **** *
1058:.\Generated_Source\PSoC4/RTC.h **** * \param
1059:.\Generated_Source\PSoC4/RTC.h **** *  sec The second.
1060:.\Generated_Source\PSoC4/RTC.h **** *
1061:.\Generated_Source\PSoC4/RTC.h **** * \return
1062:.\Generated_Source\PSoC4/RTC.h **** *  Time in the format used in API.
1063:.\Generated_Source\PSoC4/RTC.h **** *
1064:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1065:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 
1066:.\Generated_Source\PSoC4/RTC.h **** {
 516              		.loc 1 1066 0
 517              		.cfi_startproc
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 86B0     		sub	sp, sp, #24
 523              		.cfi_def_cfa_offset 32
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 F860     		str	r0, [r7, #12]
 527 0008 B960     		str	r1, [r7, #8]
 528 000a 7A60     		str	r2, [r7, #4]
 529 000c 3B60     		str	r3, [r7]
1067:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 29


1068:.\Generated_Source\PSoC4/RTC.h **** 
1069:.\Generated_Source\PSoC4/RTC.h ****     retVal  = timeFormat << RTC_TIME_FORMAT_OFFSET;
 530              		.loc 1 1069 0
 531 000e FB68     		ldr	r3, [r7, #12]
 532 0010 DB05     		lsl	r3, r3, #23
 533 0012 7B61     		str	r3, [r7, #20]
1070:.\Generated_Source\PSoC4/RTC.h ****     retVal |= stateAmPm << RTC_PERIOD_OF_DAY_OFFSET;
 534              		.loc 1 1070 0
 535 0014 BB68     		ldr	r3, [r7, #8]
 536 0016 9B05     		lsl	r3, r3, #22
 537 0018 7A69     		ldr	r2, [r7, #20]
 538 001a 1343     		orr	r3, r2
 539 001c 7B61     		str	r3, [r7, #20]
1071:.\Generated_Source\PSoC4/RTC.h **** 
1072:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (hour / 10u) << RTC_10_HOURS_OFFSET;
 540              		.loc 1 1072 0
 541 001e 7B68     		ldr	r3, [r7, #4]
 542 0020 181C     		mov	r0, r3
 543 0022 0A21     		mov	r1, #10
 544 0024 FFF7FEFF 		bl	__aeabi_uidiv
 545 0028 031C     		mov	r3, r0
 546 002a 1B05     		lsl	r3, r3, #20
 547 002c 7A69     		ldr	r2, [r7, #20]
 548 002e 1343     		orr	r3, r2
 549 0030 7B61     		str	r3, [r7, #20]
1073:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (hour % 10u) << RTC_HOURS_OFFSET;
 550              		.loc 1 1073 0
 551 0032 7B68     		ldr	r3, [r7, #4]
 552 0034 181C     		mov	r0, r3
 553 0036 0A21     		mov	r1, #10
 554 0038 FFF7FEFF 		bl	__aeabi_uidivmod
 555 003c 0B1C     		mov	r3, r1
 556 003e 1B04     		lsl	r3, r3, #16
 557 0040 7A69     		ldr	r2, [r7, #20]
 558 0042 1343     		orr	r3, r2
 559 0044 7B61     		str	r3, [r7, #20]
1074:.\Generated_Source\PSoC4/RTC.h **** 
1075:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (min / 10u) << RTC_10_MINUTES_OFFSET;
 560              		.loc 1 1075 0
 561 0046 3B68     		ldr	r3, [r7]
 562 0048 181C     		mov	r0, r3
 563 004a 0A21     		mov	r1, #10
 564 004c FFF7FEFF 		bl	__aeabi_uidiv
 565 0050 031C     		mov	r3, r0
 566 0052 1B03     		lsl	r3, r3, #12
 567 0054 7A69     		ldr	r2, [r7, #20]
 568 0056 1343     		orr	r3, r2
 569 0058 7B61     		str	r3, [r7, #20]
1076:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (min % 10u) << RTC_MINUTES_OFFSET;
 570              		.loc 1 1076 0
 571 005a 3B68     		ldr	r3, [r7]
 572 005c 181C     		mov	r0, r3
 573 005e 0A21     		mov	r1, #10
 574 0060 FFF7FEFF 		bl	__aeabi_uidivmod
 575 0064 0B1C     		mov	r3, r1
 576 0066 1B02     		lsl	r3, r3, #8
 577 0068 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 30


 578 006a 1343     		orr	r3, r2
 579 006c 7B61     		str	r3, [r7, #20]
1077:.\Generated_Source\PSoC4/RTC.h **** 
1078:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (sec / 10u) << RTC_10_SECONDS_OFFSET;
 580              		.loc 1 1078 0
 581 006e 3B6A     		ldr	r3, [r7, #32]
 582 0070 181C     		mov	r0, r3
 583 0072 0A21     		mov	r1, #10
 584 0074 FFF7FEFF 		bl	__aeabi_uidiv
 585 0078 031C     		mov	r3, r0
 586 007a 1B01     		lsl	r3, r3, #4
 587 007c 7A69     		ldr	r2, [r7, #20]
 588 007e 1343     		orr	r3, r2
 589 0080 7B61     		str	r3, [r7, #20]
1079:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (sec % 10u) << RTC_SECONDS_OFFSET;
 590              		.loc 1 1079 0
 591 0082 3B6A     		ldr	r3, [r7, #32]
 592 0084 181C     		mov	r0, r3
 593 0086 0A21     		mov	r1, #10
 594 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 595 008c 0B1C     		mov	r3, r1
 596 008e 1A1C     		mov	r2, r3
 597 0090 7B69     		ldr	r3, [r7, #20]
 598 0092 1343     		orr	r3, r2
 599 0094 7B61     		str	r3, [r7, #20]
1080:.\Generated_Source\PSoC4/RTC.h **** 
1081:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 600              		.loc 1 1081 0
 601 0096 7B69     		ldr	r3, [r7, #20]
1082:.\Generated_Source\PSoC4/RTC.h **** }
 602              		.loc 1 1082 0
 603 0098 181C     		mov	r0, r3
 604 009a BD46     		mov	sp, r7
 605 009c 06B0     		add	sp, sp, #24
 606              		@ sp needed
 607 009e 80BD     		pop	{r7, pc}
 608              		.cfi_endproc
 609              	.LFE25:
 610              		.size	RTC_ConstructTime, .-RTC_ConstructTime
 611              		.section	.text.RTC_ConstructDate,"ax",%progbits
 612              		.align	2
 613              		.code	16
 614              		.thumb_func
 615              		.type	RTC_ConstructDate, %function
 616              	RTC_ConstructDate:
 617              	.LFB26:
1083:.\Generated_Source\PSoC4/RTC.h **** 
1084:.\Generated_Source\PSoC4/RTC.h **** 
1085:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructDate
1087:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1088:.\Generated_Source\PSoC4/RTC.h **** *
1089:.\Generated_Source\PSoC4/RTC.h **** * \brief
1090:.\Generated_Source\PSoC4/RTC.h **** *  Returns the date in the format used in APIs from individual elements
1091:.\Generated_Source\PSoC4/RTC.h **** *  passed (day. Month and year)
1092:.\Generated_Source\PSoC4/RTC.h **** *
1093:.\Generated_Source\PSoC4/RTC.h **** * \param
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 31


1094:.\Generated_Source\PSoC4/RTC.h **** *  month The month.
1095:.\Generated_Source\PSoC4/RTC.h **** *
1096:.\Generated_Source\PSoC4/RTC.h **** * \param
1097:.\Generated_Source\PSoC4/RTC.h **** *  day The day.
1098:.\Generated_Source\PSoC4/RTC.h **** *
1099:.\Generated_Source\PSoC4/RTC.h **** * \param
1100:.\Generated_Source\PSoC4/RTC.h **** *  year The year.
1101:.\Generated_Source\PSoC4/RTC.h **** *
1102:.\Generated_Source\PSoC4/RTC.h **** * \return
1103:.\Generated_Source\PSoC4/RTC.h **** *  The date in the format used in API.
1104:.\Generated_Source\PSoC4/RTC.h **** *
1105:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1106:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year)
1107:.\Generated_Source\PSoC4/RTC.h **** {
 618              		.loc 1 1107 0
 619              		.cfi_startproc
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 86B0     		sub	sp, sp, #24
 625              		.cfi_def_cfa_offset 32
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 F860     		str	r0, [r7, #12]
 629 0008 B960     		str	r1, [r7, #8]
 630 000a 7A60     		str	r2, [r7, #4]
1108:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1109:.\Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal = year;
 631              		.loc 1 1109 0
 632 000c 7B68     		ldr	r3, [r7, #4]
 633 000e 7B61     		str	r3, [r7, #20]
1110:.\Generated_Source\PSoC4/RTC.h **** 
1111:.\Generated_Source\PSoC4/RTC.h ****     retVal  = (month / 10u) << RTC_10_MONTH_OFFSET;
 634              		.loc 1 1111 0
 635 0010 FB68     		ldr	r3, [r7, #12]
 636 0012 181C     		mov	r0, r3
 637 0014 0A21     		mov	r1, #10
 638 0016 FFF7FEFF 		bl	__aeabi_uidiv
 639 001a 031C     		mov	r3, r0
 640 001c 1B07     		lsl	r3, r3, #28
 641 001e 3B61     		str	r3, [r7, #16]
1112:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (month % 10u) << RTC_MONTH_OFFSET;
 642              		.loc 1 1112 0
 643 0020 FB68     		ldr	r3, [r7, #12]
 644 0022 181C     		mov	r0, r3
 645 0024 0A21     		mov	r1, #10
 646 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 647 002a 0B1C     		mov	r3, r1
 648 002c 1B06     		lsl	r3, r3, #24
 649 002e 3A69     		ldr	r2, [r7, #16]
 650 0030 1343     		orr	r3, r2
 651 0032 3B61     		str	r3, [r7, #16]
1113:.\Generated_Source\PSoC4/RTC.h **** 
1114:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (day / 10u) << RTC_10_DAY_OFFSET;
 652              		.loc 1 1114 0
 653 0034 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 32


 654 0036 181C     		mov	r0, r3
 655 0038 0A21     		mov	r1, #10
 656 003a FFF7FEFF 		bl	__aeabi_uidiv
 657 003e 031C     		mov	r3, r0
 658 0040 1B05     		lsl	r3, r3, #20
 659 0042 3A69     		ldr	r2, [r7, #16]
 660 0044 1343     		orr	r3, r2
 661 0046 3B61     		str	r3, [r7, #16]
1115:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (day % 10u) << RTC_DAY_OFFSET;
 662              		.loc 1 1115 0
 663 0048 BB68     		ldr	r3, [r7, #8]
 664 004a 181C     		mov	r0, r3
 665 004c 0A21     		mov	r1, #10
 666 004e FFF7FEFF 		bl	__aeabi_uidivmod
 667 0052 0B1C     		mov	r3, r1
 668 0054 1B04     		lsl	r3, r3, #16
 669 0056 3A69     		ldr	r2, [r7, #16]
 670 0058 1343     		orr	r3, r2
 671 005a 3B61     		str	r3, [r7, #16]
1116:.\Generated_Source\PSoC4/RTC.h **** 
1117:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (year / 1000u) << RTC_1000_YEAR_OFFSET;
 672              		.loc 1 1117 0
 673 005c 7B68     		ldr	r3, [r7, #4]
 674 005e 181C     		mov	r0, r3
 675 0060 FA23     		mov	r3, #250
 676 0062 9900     		lsl	r1, r3, #2
 677 0064 FFF7FEFF 		bl	__aeabi_uidiv
 678 0068 031C     		mov	r3, r0
 679 006a 1B03     		lsl	r3, r3, #12
 680 006c 3A69     		ldr	r2, [r7, #16]
 681 006e 1343     		orr	r3, r2
 682 0070 3B61     		str	r3, [r7, #16]
1118:.\Generated_Source\PSoC4/RTC.h ****     tmpVal %= 1000u;
 683              		.loc 1 1118 0
 684 0072 7B69     		ldr	r3, [r7, #20]
 685 0074 181C     		mov	r0, r3
 686 0076 FA23     		mov	r3, #250
 687 0078 9900     		lsl	r1, r3, #2
 688 007a FFF7FEFF 		bl	__aeabi_uidivmod
 689 007e 0B1C     		mov	r3, r1
 690 0080 7B61     		str	r3, [r7, #20]
1119:.\Generated_Source\PSoC4/RTC.h **** 
1120:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 100u) << RTC_100_YEAR_OFFSET;
 691              		.loc 1 1120 0
 692 0082 7B69     		ldr	r3, [r7, #20]
 693 0084 181C     		mov	r0, r3
 694 0086 6421     		mov	r1, #100
 695 0088 FFF7FEFF 		bl	__aeabi_uidiv
 696 008c 031C     		mov	r3, r0
 697 008e 1B02     		lsl	r3, r3, #8
 698 0090 3A69     		ldr	r2, [r7, #16]
 699 0092 1343     		orr	r3, r2
 700 0094 3B61     		str	r3, [r7, #16]
1121:.\Generated_Source\PSoC4/RTC.h ****     tmpVal %= 100u;
 701              		.loc 1 1121 0
 702 0096 7B69     		ldr	r3, [r7, #20]
 703 0098 181C     		mov	r0, r3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 33


 704 009a 6421     		mov	r1, #100
 705 009c FFF7FEFF 		bl	__aeabi_uidivmod
 706 00a0 0B1C     		mov	r3, r1
 707 00a2 7B61     		str	r3, [r7, #20]
1122:.\Generated_Source\PSoC4/RTC.h **** 
1123:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 10u) << RTC_10_YEAR_OFFSET;
 708              		.loc 1 1123 0
 709 00a4 7B69     		ldr	r3, [r7, #20]
 710 00a6 181C     		mov	r0, r3
 711 00a8 0A21     		mov	r1, #10
 712 00aa FFF7FEFF 		bl	__aeabi_uidiv
 713 00ae 031C     		mov	r3, r0
 714 00b0 1B01     		lsl	r3, r3, #4
 715 00b2 3A69     		ldr	r2, [r7, #16]
 716 00b4 1343     		orr	r3, r2
 717 00b6 3B61     		str	r3, [r7, #16]
1124:.\Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal % 10u) << RTC_YEAR_OFFSET;
 718              		.loc 1 1124 0
 719 00b8 7B69     		ldr	r3, [r7, #20]
 720 00ba 181C     		mov	r0, r3
 721 00bc 0A21     		mov	r1, #10
 722 00be FFF7FEFF 		bl	__aeabi_uidivmod
 723 00c2 0B1C     		mov	r3, r1
 724 00c4 1A1C     		mov	r2, r3
 725 00c6 3B69     		ldr	r3, [r7, #16]
 726 00c8 1343     		orr	r3, r2
 727 00ca 3B61     		str	r3, [r7, #16]
1125:.\Generated_Source\PSoC4/RTC.h **** 
1126:.\Generated_Source\PSoC4/RTC.h ****     return (retVal);
 728              		.loc 1 1126 0
 729 00cc 3B69     		ldr	r3, [r7, #16]
1127:.\Generated_Source\PSoC4/RTC.h **** }
 730              		.loc 1 1127 0
 731 00ce 181C     		mov	r0, r3
 732 00d0 BD46     		mov	sp, r7
 733 00d2 06B0     		add	sp, sp, #24
 734              		@ sp needed
 735 00d4 80BD     		pop	{r7, pc}
 736              		.cfi_endproc
 737              	.LFE26:
 738              		.size	RTC_ConstructDate, .-RTC_ConstructDate
 739 00d6 C046     		.section	.text.RTC_GetDayOfWeek,"ax",%progbits
 740              		.align	2
 741              		.code	16
 742              		.thumb_func
 743              		.type	RTC_GetDayOfWeek, %function
 744              	RTC_GetDayOfWeek:
 745              	.LFB27:
1128:.\Generated_Source\PSoC4/RTC.h **** 
1129:.\Generated_Source\PSoC4/RTC.h **** 
1130:.\Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1131:.\Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDayOfWeek
1132:.\Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1133:.\Generated_Source\PSoC4/RTC.h **** * \internal
1134:.\Generated_Source\PSoC4/RTC.h **** *
1135:.\Generated_Source\PSoC4/RTC.h **** * \brief
1136:.\Generated_Source\PSoC4/RTC.h **** *  Returns a day of the week for a year, month, and day of month that are passed
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 34


1137:.\Generated_Source\PSoC4/RTC.h **** *  through parameters. Zeller's congruence is used to calculate the day of
1138:.\Generated_Source\PSoC4/RTC.h **** *  the week.
1139:.\Generated_Source\PSoC4/RTC.h **** *
1140:.\Generated_Source\PSoC4/RTC.h **** *  For the Georgian calendar, Zeller's congruence is:
1141:.\Generated_Source\PSoC4/RTC.h **** *  h = (q + [13 * (m + 1)] + K + [K/4] + [J/4] - 2J) mod 7
1142:.\Generated_Source\PSoC4/RTC.h **** *
1143:.\Generated_Source\PSoC4/RTC.h **** *  h - The day of the week (0 = Saturday, 1 = Sunday, 2 = Monday, ..., 6 = Friday).
1144:.\Generated_Source\PSoC4/RTC.h **** *  q - The day of the month.
1145:.\Generated_Source\PSoC4/RTC.h **** *  m - The month (3 = March, 4 = April, 5 = May, ..., 14 = February)
1146:.\Generated_Source\PSoC4/RTC.h **** *  K - The year of the century (year \mod 100).
1147:.\Generated_Source\PSoC4/RTC.h **** *  J - The zero-based century (actually [year/100]) For example, the zero-based
1148:.\Generated_Source\PSoC4/RTC.h **** *  centuries for 1995 and 2000 are 19 and 20 respectively (not to be
1149:.\Generated_Source\PSoC4/RTC.h **** *  confused with the common ordinal century enumeration which indicates
1150:.\Generated_Source\PSoC4/RTC.h **** *  20th for both cases).
1151:.\Generated_Source\PSoC4/RTC.h **** *
1152:.\Generated_Source\PSoC4/RTC.h **** * \note In this algorithm January and February are counted as months 13 and 14
1153:.\Generated_Source\PSoC4/RTC.h **** * of the previous year.
1154:.\Generated_Source\PSoC4/RTC.h **** *
1155:.\Generated_Source\PSoC4/RTC.h **** * \param
1156:.\Generated_Source\PSoC4/RTC.h **** *  day The day of the month(1..31)
1157:.\Generated_Source\PSoC4/RTC.h **** *
1158:.\Generated_Source\PSoC4/RTC.h **** * \param
1159:.\Generated_Source\PSoC4/RTC.h **** *  month The month of the year
1160:.\Generated_Source\PSoC4/RTC.h **** * RTC_JANUARY <br>
1161:.\Generated_Source\PSoC4/RTC.h **** * RTC_FEBRUARY <br>
1162:.\Generated_Source\PSoC4/RTC.h **** * RTC_MARCH <br>
1163:.\Generated_Source\PSoC4/RTC.h **** * RTC_APRIL <br>
1164:.\Generated_Source\PSoC4/RTC.h **** * RTC_MAY <br>
1165:.\Generated_Source\PSoC4/RTC.h **** * RTC_JUNE <br>
1166:.\Generated_Source\PSoC4/RTC.h **** * RTC_JULY <br>
1167:.\Generated_Source\PSoC4/RTC.h **** * RTC_AUGUST <br>
1168:.\Generated_Source\PSoC4/RTC.h **** * RTC_SEPTEMBER <br>
1169:.\Generated_Source\PSoC4/RTC.h **** * RTC_OCTOBER <br>
1170:.\Generated_Source\PSoC4/RTC.h **** * RTC_NOVEMBER <br>
1171:.\Generated_Source\PSoC4/RTC.h **** * RTC_DECEMBER <br>
1172:.\Generated_Source\PSoC4/RTC.h **** *
1173:.\Generated_Source\PSoC4/RTC.h **** * \param
1174:.\Generated_Source\PSoC4/RTC.h **** *  year The year value.
1175:.\Generated_Source\PSoC4/RTC.h **** *
1176:.\Generated_Source\PSoC4/RTC.h **** * \return
1177:.\Generated_Source\PSoC4/RTC.h **** * Returns a day of the week
1178:.\Generated_Source\PSoC4/RTC.h **** * RTC_SUNDAY <br>
1179:.\Generated_Source\PSoC4/RTC.h **** * RTC_MONDAY <br>
1180:.\Generated_Source\PSoC4/RTC.h **** * RTC_TUESDAY <br>
1181:.\Generated_Source\PSoC4/RTC.h **** * RTC_WEDNESDAY <br>
1182:.\Generated_Source\PSoC4/RTC.h **** * RTC_THURSDAY <br>
1183:.\Generated_Source\PSoC4/RTC.h **** * RTC_FRIDAY <br>
1184:.\Generated_Source\PSoC4/RTC.h **** * RTC_SATURDAY <br>
1185:.\Generated_Source\PSoC4/RTC.h **** *
1186:.\Generated_Source\PSoC4/RTC.h **** * \endinternal
1187:.\Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1188:.\Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year)
1189:.\Generated_Source\PSoC4/RTC.h **** {
 746              		.loc 1 1189 0
 747              		.cfi_startproc
 748 0000 90B5     		push	{r4, r7, lr}
 749              		.cfi_def_cfa_offset 12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 35


 750              		.cfi_offset 4, -12
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 87B0     		sub	sp, sp, #28
 754              		.cfi_def_cfa_offset 40
 755 0004 00AF     		add	r7, sp, #0
 756              		.cfi_def_cfa_register 7
 757 0006 F860     		str	r0, [r7, #12]
 758 0008 B960     		str	r1, [r7, #8]
 759 000a 7A60     		str	r2, [r7, #4]
1190:.\Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1191:.\Generated_Source\PSoC4/RTC.h **** 
1192:.\Generated_Source\PSoC4/RTC.h ****     /* Converts month number from regular convention
1193:.\Generated_Source\PSoC4/RTC.h ****      * (1=January,..., 12=December) to convention required for this
1194:.\Generated_Source\PSoC4/RTC.h ****      * algorithm(January and February are counted as months 13 and 14 of
1195:.\Generated_Source\PSoC4/RTC.h ****      * previous year).
1196:.\Generated_Source\PSoC4/RTC.h ****     */
1197:.\Generated_Source\PSoC4/RTC.h ****     if(month < (uint32)RTC_MARCH)
 760              		.loc 1 1197 0
 761 000c BB68     		ldr	r3, [r7, #8]
 762 000e 022B     		cmp	r3, #2
 763 0010 05D8     		bhi	.L34
1198:.\Generated_Source\PSoC4/RTC.h ****     {
1199:.\Generated_Source\PSoC4/RTC.h ****         month = 12u + month;
 764              		.loc 1 1199 0
 765 0012 BB68     		ldr	r3, [r7, #8]
 766 0014 0C33     		add	r3, r3, #12
 767 0016 BB60     		str	r3, [r7, #8]
1200:.\Generated_Source\PSoC4/RTC.h ****         year--;
 768              		.loc 1 1200 0
 769 0018 7B68     		ldr	r3, [r7, #4]
 770 001a 013B     		sub	r3, r3, #1
 771 001c 7B60     		str	r3, [r7, #4]
 772              	.L34:
1201:.\Generated_Source\PSoC4/RTC.h ****     }
1202:.\Generated_Source\PSoC4/RTC.h **** 
1203:.\Generated_Source\PSoC4/RTC.h ****     /* Calculates Day of Week using Zeller's congruence algorithms.
1204:.\Generated_Source\PSoC4/RTC.h ****     */
1205:.\Generated_Source\PSoC4/RTC.h ****     retVal = (day + (((month + 1u) * 26u) / 10u) + year + (year / 4u) + (6u * (year / 100u)) + (yea
 773              		.loc 1 1205 0
 774 001e BB68     		ldr	r3, [r7, #8]
 775 0020 0133     		add	r3, r3, #1
 776 0022 1A22     		mov	r2, #26
 777 0024 5343     		mul	r3, r2
 778 0026 181C     		mov	r0, r3
 779 0028 0A21     		mov	r1, #10
 780 002a FFF7FEFF 		bl	__aeabi_uidiv
 781 002e 031C     		mov	r3, r0
 782 0030 1A1C     		mov	r2, r3
 783 0032 FB68     		ldr	r3, [r7, #12]
 784 0034 D218     		add	r2, r2, r3
 785 0036 7B68     		ldr	r3, [r7, #4]
 786 0038 D218     		add	r2, r2, r3
 787 003a 7B68     		ldr	r3, [r7, #4]
 788 003c 9B08     		lsr	r3, r3, #2
 789 003e D418     		add	r4, r2, r3
 790 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 36


 791 0042 181C     		mov	r0, r3
 792 0044 6421     		mov	r1, #100
 793 0046 FFF7FEFF 		bl	__aeabi_uidiv
 794 004a 031C     		mov	r3, r0
 795 004c 1A1C     		mov	r2, r3
 796 004e 131C     		mov	r3, r2
 797 0050 5B00     		lsl	r3, r3, #1
 798 0052 9B18     		add	r3, r3, r2
 799 0054 5B00     		lsl	r3, r3, #1
 800 0056 E418     		add	r4, r4, r3
 801 0058 7B68     		ldr	r3, [r7, #4]
 802 005a 181C     		mov	r0, r3
 803 005c C823     		mov	r3, #200
 804 005e 5900     		lsl	r1, r3, #1
 805 0060 FFF7FEFF 		bl	__aeabi_uidiv
 806 0064 031C     		mov	r3, r0
 807 0066 E318     		add	r3, r4, r3
 808 0068 181C     		mov	r0, r3
 809 006a 0721     		mov	r1, #7
 810 006c FFF7FEFF 		bl	__aeabi_uidivmod
 811 0070 0B1C     		mov	r3, r1
 812 0072 7B61     		str	r3, [r7, #20]
1206:.\Generated_Source\PSoC4/RTC.h **** 
1207:.\Generated_Source\PSoC4/RTC.h ****     /* Makes correction for Saturday. Saturday number should be 7 instead of 0. */
1208:.\Generated_Source\PSoC4/RTC.h ****     if(0u == retVal)
 813              		.loc 1 1208 0
 814 0074 7B69     		ldr	r3, [r7, #20]
 815 0076 002B     		cmp	r3, #0
 816 0078 01D1     		bne	.L35
1209:.\Generated_Source\PSoC4/RTC.h ****     {
1210:.\Generated_Source\PSoC4/RTC.h ****         retVal = (uint32)RTC_SATURDAY;
 817              		.loc 1 1210 0
 818 007a 0723     		mov	r3, #7
 819 007c 7B61     		str	r3, [r7, #20]
 820              	.L35:
1211:.\Generated_Source\PSoC4/RTC.h ****     }
1212:.\Generated_Source\PSoC4/RTC.h **** 
1213:.\Generated_Source\PSoC4/RTC.h ****     return(retVal);
 821              		.loc 1 1213 0
 822 007e 7B69     		ldr	r3, [r7, #20]
1214:.\Generated_Source\PSoC4/RTC.h **** }
 823              		.loc 1 1214 0
 824 0080 181C     		mov	r0, r3
 825 0082 BD46     		mov	sp, r7
 826 0084 07B0     		add	sp, sp, #28
 827              		@ sp needed
 828 0086 90BD     		pop	{r4, r7, pc}
 829              		.cfi_endproc
 830              	.LFE27:
 831              		.size	RTC_GetDayOfWeek, .-RTC_GetDayOfWeek
 832              		.comm	RTC_initVar,1,1
 833              		.comm	RTC_unixTime,8,8
 834              		.comm	RTC_currentTimeDate,16,4
 835              		.bss
 836              		.align	2
 837              	RTC_updateTimePeriod:
 838 0000 00000000 		.space	4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 37


 839              		.align	2
 840              	RTC_tickRefOneSec:
 841 0004 00000000 		.space	4
 842              		.comm	RTC_dstStatus,1,1
 843              		.align	2
 844              	RTC_dstTimeOffset:
 845 0008 00000000 		.space	4
 846              		.comm	RTC_alarmCurStatus,4,4
 847              		.global	RTC_daysBeforeMonthTbl
 848              		.section	.rodata
 849              		.align	2
 850              		.type	RTC_daysBeforeMonthTbl, %object
 851              		.size	RTC_daysBeforeMonthTbl, 24
 852              	RTC_daysBeforeMonthTbl:
 853 0000 0000     		.short	0
 854 0002 1F00     		.short	31
 855 0004 3B00     		.short	59
 856 0006 5A00     		.short	90
 857 0008 7800     		.short	120
 858 000a 9700     		.short	151
 859 000c B500     		.short	181
 860 000e D400     		.short	212
 861 0010 F300     		.short	243
 862 0012 1101     		.short	273
 863 0014 3001     		.short	304
 864 0016 4E01     		.short	334
 865              		.global	RTC_daysInMonthTbl
 866              		.align	2
 867              		.type	RTC_daysInMonthTbl, %object
 868              		.size	RTC_daysInMonthTbl, 12
 869              	RTC_daysInMonthTbl:
 870 0018 1F       		.byte	31
 871 0019 1C       		.byte	28
 872 001a 1F       		.byte	31
 873 001b 1E       		.byte	30
 874 001c 1F       		.byte	31
 875 001d 1E       		.byte	30
 876 001e 1F       		.byte	31
 877 001f 1F       		.byte	31
 878 0020 1E       		.byte	30
 879 0021 1F       		.byte	31
 880 0022 1E       		.byte	30
 881 0023 1F       		.byte	31
 882              		.section	.text.RTC_Start,"ax",%progbits
 883              		.align	2
 884              		.global	RTC_Start
 885              		.code	16
 886              		.thumb_func
 887              		.type	RTC_Start, %function
 888              	RTC_Start:
 889              	.LFB28:
 890              		.file 2 ".\\Generated_Source\\PSoC4\\RTC.c"
   1:.\Generated_Source\PSoC4/RTC.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/RTC.c **** * \file Name: RTC.c
   3:.\Generated_Source\PSoC4/RTC.c **** * \version 1.10
   4:.\Generated_Source\PSoC4/RTC.c **** *
   5:.\Generated_Source\PSoC4/RTC.c **** * \brief
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 38


   6:.\Generated_Source\PSoC4/RTC.c **** *  This file provides the source code to the API for the RTC_P4 Component.
   7:.\Generated_Source\PSoC4/RTC.c **** *
   8:.\Generated_Source\PSoC4/RTC.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/RTC.c **** * \copyright
  10:.\Generated_Source\PSoC4/RTC.c **** * Copyright 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:.\Generated_Source\PSoC4/RTC.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC4/RTC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC4/RTC.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC4/RTC.c **** 
  16:.\Generated_Source\PSoC4/RTC.c **** #include "RTC.h"
  17:.\Generated_Source\PSoC4/RTC.c **** 
  18:.\Generated_Source\PSoC4/RTC.c **** uint8  RTC_initVar;
  19:.\Generated_Source\PSoC4/RTC.c **** 
  20:.\Generated_Source\PSoC4/RTC.c **** volatile uint64 RTC_unixTime;
  21:.\Generated_Source\PSoC4/RTC.c **** RTC_DATE_TIME RTC_currentTimeDate;
  22:.\Generated_Source\PSoC4/RTC.c **** 
  23:.\Generated_Source\PSoC4/RTC.c **** static uint32 RTC_updateTimePeriod;
  24:.\Generated_Source\PSoC4/RTC.c **** static uint32 RTC_tickRefOneSec;
  25:.\Generated_Source\PSoC4/RTC.c **** 
  26:.\Generated_Source\PSoC4/RTC.c **** uint8  RTC_dstStatus;
  27:.\Generated_Source\PSoC4/RTC.c **** static uint32 RTC_dstTimeOffset;
  28:.\Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
  29:.\Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStart;
  30:.\Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStop;
  31:.\Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStartTime;
  32:.\Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStopTime;
  33:.\Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
  34:.\Generated_Source\PSoC4/RTC.c **** 
  35:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_alarmCurStatus;
  36:.\Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
  37:.\Generated_Source\PSoC4/RTC.c ****     uint32  RTC_alarmCfgMask = 0xFFu;
  38:.\Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeAlarm;
  39:.\Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME RTC_alarmCfgTimeDate;
  40:.\Generated_Source\PSoC4/RTC.c ****     void (*RTC_alarmCallbackPtr)(void) = (void *)0;
  41:.\Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
  42:.\Generated_Source\PSoC4/RTC.c **** 
  43:.\Generated_Source\PSoC4/RTC.c **** const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR] = {
  44:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u), /* JANUARY */
  45:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u), /* FEBRUARY */
  46:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u), /* MARCH */
  47:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u), /* APRIL */
  48:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u), /* MAY */
  49:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u), /* JUNE */
  50:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u), /* JULY 
  51:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u), /*
  52:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  53:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  54:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  55:.\Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  56:.\Generated_Source\PSoC4/RTC.c **** 
  57:.\Generated_Source\PSoC4/RTC.c **** const uint8 RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR] = {RTC_DAYS_IN_JANUARY,
  58:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_FEBRUA
  59:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MARCH,
  60:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_APRIL,
  61:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MAY,
  62:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JUNE,
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 39


  63:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JULY,
  64:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_AUGUST
  65:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_SEPTEM
  66:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_OCTOBE
  67:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_NOVEMB
  68:.\Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_DECEMB
  69:.\Generated_Source\PSoC4/RTC.c **** 
  70:.\Generated_Source\PSoC4/RTC.c **** 
  71:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
  72:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Start
  73:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
  74:.\Generated_Source\PSoC4/RTC.c **** *
  75:.\Generated_Source\PSoC4/RTC.c **** * \brief
  76:.\Generated_Source\PSoC4/RTC.c **** *  Performs all the required calculations for the time and date registers and
  77:.\Generated_Source\PSoC4/RTC.c **** *  initializes the component along with the date and time selected in the
  78:.\Generated_Source\PSoC4/RTC.c **** *  customizer. 
  79:.\Generated_Source\PSoC4/RTC.c **** *
  80:.\Generated_Source\PSoC4/RTC.c **** *  If "Implement RTC update manually" is disabled in the customizer
  81:.\Generated_Source\PSoC4/RTC.c **** *  and if WDT or WCO timer is selected as a source in the clocks configuration 
  82:.\Generated_Source\PSoC4/RTC.c **** *  window (low frequency clocks tab), attaches RTC_Update API to a corresponding
  83:.\Generated_Source\PSoC4/RTC.c **** *  WDT's or WCO's ISR callback.
  84:.\Generated_Source\PSoC4/RTC.c **** *
  85:.\Generated_Source\PSoC4/RTC.c **** * \note "Implement RTC update manually" checkbox is available for PSoC 4200L / 
  86:.\Generated_Source\PSoC4/RTC.c **** * PSoC 4100M / PSoC 4200M / PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4000S / PSoC 
  87:.\Generated_Source\PSoC4/RTC.c **** * 4100S and Analog Coprocessor.
  88:.\Generated_Source\PSoC4/RTC.c **** *
  89:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  90:.\Generated_Source\PSoC4/RTC.c **** void RTC_Start(void)
  91:.\Generated_Source\PSoC4/RTC.c **** {
 891              		.loc 2 91 0
 892              		.cfi_startproc
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
  92:.\Generated_Source\PSoC4/RTC.c ****     if(0u == RTC_initVar)
 899              		.loc 2 92 0
 900 0004 034B     		ldr	r3, .L39
 901 0006 1B78     		ldrb	r3, [r3]
 902 0008 002B     		cmp	r3, #0
 903 000a 01D1     		bne	.L37
  93:.\Generated_Source\PSoC4/RTC.c ****     {
  94:.\Generated_Source\PSoC4/RTC.c ****         RTC_Init();
 904              		.loc 2 94 0
 905 000c FFF7FEFF 		bl	RTC_Init
 906              	.L37:
  95:.\Generated_Source\PSoC4/RTC.c ****     }
  96:.\Generated_Source\PSoC4/RTC.c **** 
  97:.\Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
  98:.\Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
  99:.\Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcSetCallback(CYDEV_RTC_SOURCE_WDT);
 100:.\Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 101:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 102:.\Generated_Source\PSoC4/RTC.c **** }
 907              		.loc 2 102 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 40


 908 0010 BD46     		mov	sp, r7
 909              		@ sp needed
 910 0012 80BD     		pop	{r7, pc}
 911              	.L40:
 912              		.align	2
 913              	.L39:
 914 0014 00000000 		.word	RTC_initVar
 915              		.cfi_endproc
 916              	.LFE28:
 917              		.size	RTC_Start, .-RTC_Start
 918              		.section	.text.RTC_Stop,"ax",%progbits
 919              		.align	2
 920              		.global	RTC_Stop
 921              		.code	16
 922              		.thumb_func
 923              		.type	RTC_Stop, %function
 924              	RTC_Stop:
 925              	.LFB29:
 103:.\Generated_Source\PSoC4/RTC.c **** 
 104:.\Generated_Source\PSoC4/RTC.c **** 
 105:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 106:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Stop
 107:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 108:.\Generated_Source\PSoC4/RTC.c **** *
 109:.\Generated_Source\PSoC4/RTC.c **** * \brief
 110:.\Generated_Source\PSoC4/RTC.c **** *  Stops the time and date updates.
 111:.\Generated_Source\PSoC4/RTC.c **** *
 112:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC4/RTC.c **** void RTC_Stop(void)
 114:.\Generated_Source\PSoC4/RTC.c **** {
 926              		.loc 2 114 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 115:.\Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
 116:.\Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 117:.\Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcResetCallback(CYDEV_RTC_SOURCE_WDT);
 118:.\Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 119:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 120:.\Generated_Source\PSoC4/RTC.c **** }
 934              		.loc 2 120 0
 935 0004 BD46     		mov	sp, r7
 936              		@ sp needed
 937 0006 80BD     		pop	{r7, pc}
 938              		.cfi_endproc
 939              	.LFE29:
 940              		.size	RTC_Stop, .-RTC_Stop
 941              		.section	.text.RTC_Init,"ax",%progbits
 942              		.align	2
 943              		.global	RTC_Init
 944              		.code	16
 945              		.thumb_func
 946              		.type	RTC_Init, %function
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 41


 947              	RTC_Init:
 948              	.LFB30:
 121:.\Generated_Source\PSoC4/RTC.c **** 
 122:.\Generated_Source\PSoC4/RTC.c **** 
 123:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 124:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Init
 125:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 126:.\Generated_Source\PSoC4/RTC.c **** *
 127:.\Generated_Source\PSoC4/RTC.c **** * \brief
 128:.\Generated_Source\PSoC4/RTC.c **** *  Initializes or restores the component according to the customizer Configure
 129:.\Generated_Source\PSoC4/RTC.c **** *  dialog settings. 
 130:.\Generated_Source\PSoC4/RTC.c **** *
 131:.\Generated_Source\PSoC4/RTC.c **** * It is not necessary to call RTC_Init() because
 132:.\Generated_Source\PSoC4/RTC.c **** *  RTC_Start() API calls this function and is the preferred method to begin
 133:.\Generated_Source\PSoC4/RTC.c **** *  component operation.
 134:.\Generated_Source\PSoC4/RTC.c **** *
 135:.\Generated_Source\PSoC4/RTC.c **** *  All registers are set to values according to the customizer Configure
 136:.\Generated_Source\PSoC4/RTC.c **** *  dialog. The default date value, if not set by the user before this function 
 137:.\Generated_Source\PSoC4/RTC.c **** *  call, is 12:00:00 AM January 1, 2000.
 138:.\Generated_Source\PSoC4/RTC.c **** *
 139:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 140:.\Generated_Source\PSoC4/RTC.c **** void RTC_Init(void)
 141:.\Generated_Source\PSoC4/RTC.c **** {
 949              		.loc 2 141 0
 950              		.cfi_startproc
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 84B0     		sub	sp, sp, #16
 956              		.cfi_def_cfa_offset 24
 957 0004 02AF     		add	r7, sp, #8
 958              		.cfi_def_cfa 7, 16
 142:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpDate;
 143:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpTime;
 144:.\Generated_Source\PSoC4/RTC.c **** 
 145:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 146:.\Generated_Source\PSoC4/RTC.c ****         RTC_DST_TIME dstTimeTmp;
 147:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 148:.\Generated_Source\PSoC4/RTC.c **** 
 149:.\Generated_Source\PSoC4/RTC.c ****     RTC_initVar = 1u;
 959              		.loc 2 149 0
 960 0006 154B     		ldr	r3, .L43
 961 0008 0122     		mov	r2, #1
 962 000a 1A70     		strb	r2, [r3]
 150:.\Generated_Source\PSoC4/RTC.c ****     RTC_dstTimeOffset = 0uL;
 963              		.loc 2 150 0
 964 000c 144B     		ldr	r3, .L43+4
 965 000e 0022     		mov	r2, #0
 966 0010 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.status = 0uL;
 967              		.loc 2 151 0
 968 0012 144B     		ldr	r3, .L43+8
 969 0014 0022     		mov	r2, #0
 970 0016 DA60     		str	r2, [r3, #12]
 152:.\Generated_Source\PSoC4/RTC.c **** 
 153:.\Generated_Source\PSoC4/RTC.c ****     RTC_dstStatus      = RTC_INITIAL_DST_STATUS;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 42


 971              		.loc 2 153 0
 972 0018 134B     		ldr	r3, .L43+12
 973 001a 0022     		mov	r2, #0
 974 001c 1A70     		strb	r2, [r3]
 154:.\Generated_Source\PSoC4/RTC.c ****     RTC_alarmCurStatus = RTC_INITIAL_ALARM_STATUS;
 975              		.loc 2 154 0
 976 001e 134B     		ldr	r3, .L43+16
 977 0020 0022     		mov	r2, #0
 978 0022 1A60     		str	r2, [r3]
 155:.\Generated_Source\PSoC4/RTC.c **** 
 156:.\Generated_Source\PSoC4/RTC.c ****     tmpDate = RTC_ConstructDate(RTC_INITIAL_MONTH,
 979              		.loc 2 156 0
 980 0024 FC23     		mov	r3, #252
 981 0026 DB00     		lsl	r3, r3, #3
 982 0028 0820     		mov	r0, #8
 983 002a 0921     		mov	r1, #9
 984 002c 1A1C     		mov	r2, r3
 985 002e FFF7FEFF 		bl	RTC_ConstructDate
 986 0032 031C     		mov	r3, r0
 987 0034 7B60     		str	r3, [r7, #4]
 157:.\Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_DAY,
 158:.\Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_YEAR);
 159:.\Generated_Source\PSoC4/RTC.c **** 
 160:.\Generated_Source\PSoC4/RTC.c ****     tmpTime = RTC_ConstructTime(RTC_INITIAL_TIME_FORMAT,
 988              		.loc 2 160 0
 989 0036 0023     		mov	r3, #0
 990 0038 0093     		str	r3, [sp]
 991 003a 0020     		mov	r0, #0
 992 003c 0021     		mov	r1, #0
 993 003e 0A22     		mov	r2, #10
 994 0040 1023     		mov	r3, #16
 995 0042 FFF7FEFF 		bl	RTC_ConstructTime
 996 0046 031C     		mov	r3, r0
 997 0048 3B60     		str	r3, [r7]
 161:.\Generated_Source\PSoC4/RTC.c ****                                           0u,
 162:.\Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_HOUR,
 163:.\Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_MINUTE,
 164:.\Generated_Source\PSoC4/RTC.c ****                                           RTC_INITIAL_SECOND);
 165:.\Generated_Source\PSoC4/RTC.c **** 
 166:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 167:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStatus = 0u;
 168:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status = (1uL << RTC_STATUS_DST_OFFSET);
 169:.\Generated_Source\PSoC4/RTC.c **** 
 170:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 171:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_START_HRS;
 172:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_START_DOW;
 173:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_START_WOM;
 174:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_START_DOM;
 175:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_START_MONTH;
 176:.\Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStartTime(&dstTimeTmp, (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 177:.\Generated_Source\PSoC4/RTC.c **** 
 178:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 179:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_STOP_HRS;
 180:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_STOP_DOW;
 181:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_STOP_WOM;
 182:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_STOP_DOM;
 183:.\Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_STOP_MONTH;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 43


 184:.\Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStopTime(&dstTimeTmp, (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 185:.\Generated_Source\PSoC4/RTC.c **** 
 186:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 187:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 188:.\Generated_Source\PSoC4/RTC.c **** 
 189:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 190:.\Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 191:.\Generated_Source\PSoC4/RTC.c ****         {
 192:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 193:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 194:.\Generated_Source\PSoC4/RTC.c ****         }
 195:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 196:.\Generated_Source\PSoC4/RTC.c **** 
 197:.\Generated_Source\PSoC4/RTC.c ****     RTC_SetDateAndTime(tmpTime, tmpDate);
 998              		.loc 2 197 0
 999 004a 3A68     		ldr	r2, [r7]
 1000 004c 7B68     		ldr	r3, [r7, #4]
 1001 004e 101C     		mov	r0, r2
 1002 0050 191C     		mov	r1, r3
 1003 0052 FFF7FEFF 		bl	RTC_SetDateAndTime
 198:.\Generated_Source\PSoC4/RTC.c **** }
 1004              		.loc 2 198 0
 1005 0056 BD46     		mov	sp, r7
 1006 0058 02B0     		add	sp, sp, #8
 1007              		@ sp needed
 1008 005a 80BD     		pop	{r7, pc}
 1009              	.L44:
 1010              		.align	2
 1011              	.L43:
 1012 005c 00000000 		.word	RTC_initVar
 1013 0060 08000000 		.word	RTC_dstTimeOffset
 1014 0064 00000000 		.word	RTC_currentTimeDate
 1015 0068 00000000 		.word	RTC_dstStatus
 1016 006c 00000000 		.word	RTC_alarmCurStatus
 1017              		.cfi_endproc
 1018              	.LFE30:
 1019              		.size	RTC_Init, .-RTC_Init
 1020              		.section	.text.RTC_SetDateAndTime,"ax",%progbits
 1021              		.align	2
 1022              		.global	RTC_SetDateAndTime
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	RTC_SetDateAndTime, %function
 1026              	RTC_SetDateAndTime:
 1027              	.LFB31:
 199:.\Generated_Source\PSoC4/RTC.c **** 
 200:.\Generated_Source\PSoC4/RTC.c **** 
 201:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 202:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetDateAndTime
 203:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 204:.\Generated_Source\PSoC4/RTC.c **** *
 205:.\Generated_Source\PSoC4/RTC.c **** * \brief
 206:.\Generated_Source\PSoC4/RTC.c **** * Sets the time and date values as the current time and date.
 207:.\Generated_Source\PSoC4/RTC.c **** *
 208:.\Generated_Source\PSoC4/RTC.c **** * \param
 209:.\Generated_Source\PSoC4/RTC.c **** * inputTime The time value in the HH:MM:SS format. <br>
 210:.\Generated_Source\PSoC4/RTC.c **** * "HH"- The 2nd 8-bit MSB that denotes the hour value.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 44


 211:.\Generated_Source\PSoC4/RTC.c **** * (0-23 for the 24-hour format and 1-12 for the 12-hour format. The MSB bit of the
 212:.\Generated_Source\PSoC4/RTC.c **** * value denotes AM/PM for the 12-hour format (0-AM and 1-PM). <br>
 213:.\Generated_Source\PSoC4/RTC.c **** * "MM" - The 3nd 8-bit MSB denotes the minutes value, the valid entries -> 0-59.<br>
 214:.\Generated_Source\PSoC4/RTC.c **** * "SS" - The 8-bit LSB denotes the seconds value, the valid entries -> 0-59.
 215:.\Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid time entries retain the
 216:.\Generated_Source\PSoC4/RTC.c **** * previously set values.
 217:.\Generated_Source\PSoC4/RTC.c **** *
 218:.\Generated_Source\PSoC4/RTC.c **** * \param
 219:.\Generated_Source\PSoC4/RTC.c **** *  inputDate The date value in the format selected in the customizer.
 220:.\Generated_Source\PSoC4/RTC.c **** * For the MM/DD/YYYY format: <br>
 221:.\Generated_Source\PSoC4/RTC.c **** * "MM" - The 8-bit MSB denotes the month value in BCD, the valid entries -> 1-12<br>
 222:.\Generated_Source\PSoC4/RTC.c **** * "DD" - The 2nd 8-bit MSB denotes a day of the month value in BCD, the valid
 223:.\Generated_Source\PSoC4/RTC.c **** * entries -> 1-31.<br>
 224:.\Generated_Source\PSoC4/RTC.c **** * "YYYY" - The 16-bit LSB denotes a year in BCD, the valid entries -> 1900-2200.
 225:.\Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid date entries retain the
 226:.\Generated_Source\PSoC4/RTC.c **** * previously set values.
 227:.\Generated_Source\PSoC4/RTC.c **** *
 228:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 229:.\Generated_Source\PSoC4/RTC.c **** void RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate)
 230:.\Generated_Source\PSoC4/RTC.c **** {
 1028              		.loc 2 230 0
 1029              		.cfi_startproc
 1030 0000 90B5     		push	{r4, r7, lr}
 1031              		.cfi_def_cfa_offset 12
 1032              		.cfi_offset 4, -12
 1033              		.cfi_offset 7, -8
 1034              		.cfi_offset 14, -4
 1035 0002 87B0     		sub	sp, sp, #28
 1036              		.cfi_def_cfa_offset 40
 1037 0004 00AF     		add	r7, sp, #0
 1038              		.cfi_def_cfa_register 7
 1039 0006 7860     		str	r0, [r7, #4]
 1040 0008 3960     		str	r1, [r7]
 231:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
 232:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
 233:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 234:.\Generated_Source\PSoC4/RTC.c **** 
 235:.\Generated_Source\PSoC4/RTC.c ****     tmpDay   = RTC_GetDay(inputDate);
 1041              		.loc 2 235 0
 1042 000a 3B68     		ldr	r3, [r7]
 1043 000c 181C     		mov	r0, r3
 1044 000e FFF7FEFF 		bl	RTC_GetDay
 1045 0012 031C     		mov	r3, r0
 1046 0014 7B61     		str	r3, [r7, #20]
 236:.\Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 1047              		.loc 2 236 0
 1048 0016 3B68     		ldr	r3, [r7]
 1049 0018 181C     		mov	r0, r3
 1050 001a FFF7FEFF 		bl	RTC_GetMonth
 1051 001e 031C     		mov	r3, r0
 1052 0020 3B61     		str	r3, [r7, #16]
 237:.\Generated_Source\PSoC4/RTC.c ****     tmpYear  = RTC_GetYear(inputDate);
 1053              		.loc 2 237 0
 1054 0022 3B68     		ldr	r3, [r7]
 1055 0024 181C     		mov	r0, r3
 1056 0026 FFF7FEFF 		bl	RTC_GetYear
 1057 002a 031C     		mov	r3, r0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 45


 1058 002c FB60     		str	r3, [r7, #12]
 238:.\Generated_Source\PSoC4/RTC.c **** 
 239:.\Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = RTC_DateTimeToUnix(inputDate, inputTime);
 1059              		.loc 2 239 0
 1060 002e 3A68     		ldr	r2, [r7]
 1061 0030 7B68     		ldr	r3, [r7, #4]
 1062 0032 101C     		mov	r0, r2
 1063 0034 191C     		mov	r1, r3
 1064 0036 FFF7FEFF 		bl	RTC_DateTimeToUnix
 1065 003a 031C     		mov	r3, r0
 1066 003c 0C1C     		mov	r4, r1
 1067 003e 0B4A     		ldr	r2, .L46
 1068 0040 1360     		str	r3, [r2]
 1069 0042 5460     		str	r4, [r2, #4]
 240:.\Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.date = inputDate;
 1070              		.loc 2 240 0
 1071 0044 0A4B     		ldr	r3, .L46+4
 1072 0046 3A68     		ldr	r2, [r7]
 1073 0048 5A60     		str	r2, [r3, #4]
 241:.\Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.time = inputTime;
 1074              		.loc 2 241 0
 1075 004a 094B     		ldr	r3, .L46+4
 1076 004c 7A68     		ldr	r2, [r7, #4]
 1077 004e 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 1078              		.loc 2 242 0
 1079 0050 7969     		ldr	r1, [r7, #20]
 1080 0052 3A69     		ldr	r2, [r7, #16]
 1081 0054 FB68     		ldr	r3, [r7, #12]
 1082 0056 081C     		mov	r0, r1
 1083 0058 111C     		mov	r1, r2
 1084 005a 1A1C     		mov	r2, r3
 1085 005c FFF7FEFF 		bl	RTC_GetDayOfWeek
 1086 0060 021C     		mov	r2, r0
 1087 0062 034B     		ldr	r3, .L46+4
 1088 0064 9A60     		str	r2, [r3, #8]
 243:.\Generated_Source\PSoC4/RTC.c **** 
 244:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 245:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 246:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 247:.\Generated_Source\PSoC4/RTC.c **** 
 248:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 249:.\Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 250:.\Generated_Source\PSoC4/RTC.c ****         {
 251:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 252:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 253:.\Generated_Source\PSoC4/RTC.c ****             RTC_unixTime -= RTC_dstTimeOffset;
 254:.\Generated_Source\PSoC4/RTC.c ****         }
 255:.\Generated_Source\PSoC4/RTC.c ****         else
 256:.\Generated_Source\PSoC4/RTC.c ****         {
 257:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 258:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 259:.\Generated_Source\PSoC4/RTC.c ****         }
 260:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 261:.\Generated_Source\PSoC4/RTC.c **** 
 262:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
 263:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate,
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 46


 264:.\Generated_Source\PSoC4/RTC.c ****                                                                                  (uint8)RTC_alarmCf
 265:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
 266:.\Generated_Source\PSoC4/RTC.c **** }
 1089              		.loc 2 266 0
 1090 0066 BD46     		mov	sp, r7
 1091 0068 07B0     		add	sp, sp, #28
 1092              		@ sp needed
 1093 006a 90BD     		pop	{r4, r7, pc}
 1094              	.L47:
 1095              		.align	2
 1096              	.L46:
 1097 006c 00000000 		.word	RTC_unixTime
 1098 0070 00000000 		.word	RTC_currentTimeDate
 1099              		.cfi_endproc
 1100              	.LFE31:
 1101              		.size	RTC_SetDateAndTime, .-RTC_SetDateAndTime
 1102              		.section	.text.RTC_SetUnixTime,"ax",%progbits
 1103              		.align	2
 1104              		.global	RTC_SetUnixTime
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	RTC_SetUnixTime, %function
 1108              	RTC_SetUnixTime:
 1109              	.LFB32:
 267:.\Generated_Source\PSoC4/RTC.c **** 
 268:.\Generated_Source\PSoC4/RTC.c **** 
 269:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 270:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetUnixTime
 271:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 272:.\Generated_Source\PSoC4/RTC.c **** *
 273:.\Generated_Source\PSoC4/RTC.c **** * \brief
 274:.\Generated_Source\PSoC4/RTC.c **** * Sets the time in the Unix/Epoch time format - the number of seconds elapsed 
 275:.\Generated_Source\PSoC4/RTC.c **** *  from January 1, 1970 UTC 00:00 hrs.
 276:.\Generated_Source\PSoC4/RTC.c **** *
 277:.\Generated_Source\PSoC4/RTC.c **** * \param
 278:.\Generated_Source\PSoC4/RTC.c **** *  time The time value in the Unix time/Epoch time format.
 279:.\Generated_Source\PSoC4/RTC.c **** *
 280:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/RTC.c **** void RTC_SetUnixTime(uint64 unixTime)
 282:.\Generated_Source\PSoC4/RTC.c **** {
 1110              		.loc 2 282 0
 1111              		.cfi_startproc
 1112 0000 90B5     		push	{r4, r7, lr}
 1113              		.cfi_def_cfa_offset 12
 1114              		.cfi_offset 4, -12
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 89B0     		sub	sp, sp, #36
 1118              		.cfi_def_cfa_offset 48
 1119 0004 02AF     		add	r7, sp, #8
 1120              		.cfi_def_cfa 7, 40
 1121 0006 3860     		str	r0, [r7]
 1122 0008 7960     		str	r1, [r7, #4]
 283:.\Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpDateTime;
 284:.\Generated_Source\PSoC4/RTC.c **** 
 285:.\Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = unixTime;
 1123              		.loc 2 285 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 47


 1124 000a 094A     		ldr	r2, .L49
 1125 000c 3B68     		ldr	r3, [r7]
 1126 000e 7C68     		ldr	r4, [r7, #4]
 1127 0010 1360     		str	r3, [r2]
 1128 0012 5460     		str	r4, [r2, #4]
 286:.\Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&tmpDateTime, unixTime, (uint32)RTC_24_HOURS_FORMAT);
 1129              		.loc 2 286 0
 1130 0014 0823     		mov	r3, #8
 1131 0016 F918     		add	r1, r7, r3
 1132 0018 3B68     		ldr	r3, [r7]
 1133 001a 7C68     		ldr	r4, [r7, #4]
 1134 001c 0022     		mov	r2, #0
 1135 001e 0092     		str	r2, [sp]
 1136 0020 081C     		mov	r0, r1
 1137 0022 1A1C     		mov	r2, r3
 1138 0024 231C     		mov	r3, r4
 1139 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 287:.\Generated_Source\PSoC4/RTC.c **** 
 288:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 289:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 290:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 291:.\Generated_Source\PSoC4/RTC.c **** 
 292:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 293:.\Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 294:.\Generated_Source\PSoC4/RTC.c ****         {
 295:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 296:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 297:.\Generated_Source\PSoC4/RTC.c ****         }
 298:.\Generated_Source\PSoC4/RTC.c ****         else
 299:.\Generated_Source\PSoC4/RTC.c ****         {
 300:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 301:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 302:.\Generated_Source\PSoC4/RTC.c ****         }
 303:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 304:.\Generated_Source\PSoC4/RTC.c **** }
 1140              		.loc 2 304 0
 1141 002a BD46     		mov	sp, r7
 1142 002c 07B0     		add	sp, sp, #28
 1143              		@ sp needed
 1144 002e 90BD     		pop	{r4, r7, pc}
 1145              	.L50:
 1146              		.align	2
 1147              	.L49:
 1148 0030 00000000 		.word	RTC_unixTime
 1149              		.cfi_endproc
 1150              	.LFE32:
 1151              		.size	RTC_SetUnixTime, .-RTC_SetUnixTime
 1152              		.section	.text.RTC_GetUnixTime,"ax",%progbits
 1153              		.align	2
 1154              		.global	RTC_GetUnixTime
 1155              		.code	16
 1156              		.thumb_func
 1157              		.type	RTC_GetUnixTime, %function
 1158              	RTC_GetUnixTime:
 1159              	.LFB33:
 305:.\Generated_Source\PSoC4/RTC.c **** 
 306:.\Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 48


 307:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 308:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetUnixTime
 309:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 310:.\Generated_Source\PSoC4/RTC.c **** *
 311:.\Generated_Source\PSoC4/RTC.c **** * \brief
 312:.\Generated_Source\PSoC4/RTC.c **** *  Returns the time in the Unix/Epoch time format - the number of seconds 
 313:.\Generated_Source\PSoC4/RTC.c **** * elapsed from January 1, 1970 UTC 00:00 hrs.
 314:.\Generated_Source\PSoC4/RTC.c **** *
 315:.\Generated_Source\PSoC4/RTC.c **** * \return time The time value in the Unix time/Epoch time format.
 316:.\Generated_Source\PSoC4/RTC.c **** *
 317:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 318:.\Generated_Source\PSoC4/RTC.c **** uint64 RTC_GetUnixTime(void)
 319:.\Generated_Source\PSoC4/RTC.c **** {
 1160              		.loc 2 319 0
 1161              		.cfi_startproc
 1162 0000 90B5     		push	{r4, r7, lr}
 1163              		.cfi_def_cfa_offset 12
 1164              		.cfi_offset 4, -12
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 320:.\Generated_Source\PSoC4/RTC.c ****     return (RTC_unixTime);
 1169              		.loc 2 320 0
 1170 0004 034B     		ldr	r3, .L53
 1171 0006 5C68     		ldr	r4, [r3, #4]
 1172 0008 1B68     		ldr	r3, [r3]
 321:.\Generated_Source\PSoC4/RTC.c **** }
 1173              		.loc 2 321 0
 1174 000a 181C     		mov	r0, r3
 1175 000c 211C     		mov	r1, r4
 1176 000e BD46     		mov	sp, r7
 1177              		@ sp needed
 1178 0010 90BD     		pop	{r4, r7, pc}
 1179              	.L54:
 1180 0012 C046     		.align	2
 1181              	.L53:
 1182 0014 00000000 		.word	RTC_unixTime
 1183              		.cfi_endproc
 1184              	.LFE33:
 1185              		.size	RTC_GetUnixTime, .-RTC_GetUnixTime
 1186              		.section	.text.RTC_SetPeriod,"ax",%progbits
 1187              		.align	2
 1188              		.global	RTC_SetPeriod
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	RTC_SetPeriod, %function
 1192              	RTC_SetPeriod:
 1193              	.LFB34:
 322:.\Generated_Source\PSoC4/RTC.c **** 
 323:.\Generated_Source\PSoC4/RTC.c **** 
 324:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 325:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 326:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 327:.\Generated_Source\PSoC4/RTC.c **** *
 328:.\Generated_Source\PSoC4/RTC.c **** * \brief
 329:.\Generated_Source\PSoC4/RTC.c **** *  Sets the RTC time update API period.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 49


 330:.\Generated_Source\PSoC4/RTC.c **** *
 331:.\Generated_Source\PSoC4/RTC.c **** *  The user needs to pass the period as
 332:.\Generated_Source\PSoC4/RTC.c **** *  a number of ticks and also a reference number of ticks taken by the same clock
 333:.\Generated_Source\PSoC4/RTC.c **** *  source for one second. For instance, for a 32 kHz clock source and RTC
 334:.\Generated_Source\PSoC4/RTC.c **** *  period of 100 ms, the "ticks" value is 3200 and the "refOneSecTicks" value
 335:.\Generated_Source\PSoC4/RTC.c **** *  is 32000. This value is used to increment the time every time
 336:.\Generated_Source\PSoC4/RTC.c **** *  RTC_Update() API is called.
 337:.\Generated_Source\PSoC4/RTC.c **** *
 338:.\Generated_Source\PSoC4/RTC.c **** * \param
 339:.\Generated_Source\PSoC4/RTC.c **** *  ticks The clock period taken as a number of ticks.
 340:.\Generated_Source\PSoC4/RTC.c **** *
 341:.\Generated_Source\PSoC4/RTC.c **** * \param
 342:.\Generated_Source\PSoC4/RTC.c **** * refOneSecTicks The reference number of ticks taken by the same clock source
 343:.\Generated_Source\PSoC4/RTC.c **** *  for one second (the input clock frequency in Hz).
 344:.\Generated_Source\PSoC4/RTC.c **** *
 345:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC4/RTC.c **** void RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks)
 347:.\Generated_Source\PSoC4/RTC.c **** {
 1194              		.loc 2 347 0
 1195              		.cfi_startproc
 1196 0000 80B5     		push	{r7, lr}
 1197              		.cfi_def_cfa_offset 8
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 82B0     		sub	sp, sp, #8
 1201              		.cfi_def_cfa_offset 16
 1202 0004 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 1204 0006 7860     		str	r0, [r7, #4]
 1205 0008 3960     		str	r1, [r7]
 348:.\Generated_Source\PSoC4/RTC.c ****     RTC_updateTimePeriod = ticks;
 1206              		.loc 2 348 0
 1207 000a 044B     		ldr	r3, .L56
 1208 000c 7A68     		ldr	r2, [r7, #4]
 1209 000e 1A60     		str	r2, [r3]
 349:.\Generated_Source\PSoC4/RTC.c ****     RTC_tickRefOneSec    = refOneSecTicks;
 1210              		.loc 2 349 0
 1211 0010 034B     		ldr	r3, .L56+4
 1212 0012 3A68     		ldr	r2, [r7]
 1213 0014 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/RTC.c **** }
 1214              		.loc 2 350 0
 1215 0016 BD46     		mov	sp, r7
 1216 0018 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 001a 80BD     		pop	{r7, pc}
 1219              	.L57:
 1220              		.align	2
 1221              	.L56:
 1222 001c 00000000 		.word	RTC_updateTimePeriod
 1223 0020 04000000 		.word	RTC_tickRefOneSec
 1224              		.cfi_endproc
 1225              	.LFE34:
 1226              		.size	RTC_SetPeriod, .-RTC_SetPeriod
 1227              		.section	.text.RTC_GetPeriod,"ax",%progbits
 1228              		.align	2
 1229              		.global	RTC_GetPeriod
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 50


 1230              		.code	16
 1231              		.thumb_func
 1232              		.type	RTC_GetPeriod, %function
 1233              	RTC_GetPeriod:
 1234              	.LFB35:
 351:.\Generated_Source\PSoC4/RTC.c **** 
 352:.\Generated_Source\PSoC4/RTC.c **** 
 353:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 354:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 355:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 356:.\Generated_Source\PSoC4/RTC.c **** *
 357:.\Generated_Source\PSoC4/RTC.c **** * \brief
 358:.\Generated_Source\PSoC4/RTC.c **** *  Gets the RTC time update API period.
 359:.\Generated_Source\PSoC4/RTC.c **** *
 360:.\Generated_Source\PSoC4/RTC.c **** * \return period The clock period taken as a number of ticks.
 361:.\Generated_Source\PSoC4/RTC.c **** *
 362:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetPeriod(void)
 364:.\Generated_Source\PSoC4/RTC.c **** {
 1235              		.loc 2 364 0
 1236              		.cfi_startproc
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 365:.\Generated_Source\PSoC4/RTC.c ****     return(RTC_updateTimePeriod);
 1243              		.loc 2 365 0
 1244 0004 024B     		ldr	r3, .L60
 1245 0006 1B68     		ldr	r3, [r3]
 366:.\Generated_Source\PSoC4/RTC.c **** }
 1246              		.loc 2 366 0
 1247 0008 181C     		mov	r0, r3
 1248 000a BD46     		mov	sp, r7
 1249              		@ sp needed
 1250 000c 80BD     		pop	{r7, pc}
 1251              	.L61:
 1252 000e C046     		.align	2
 1253              	.L60:
 1254 0010 00000000 		.word	RTC_updateTimePeriod
 1255              		.cfi_endproc
 1256              	.LFE35:
 1257              		.size	RTC_GetPeriod, .-RTC_GetPeriod
 1258              		.section	.text.RTC_GetRefOneSec,"ax",%progbits
 1259              		.align	2
 1260              		.global	RTC_GetRefOneSec
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	RTC_GetRefOneSec, %function
 1264              	RTC_GetRefOneSec:
 1265              	.LFB36:
 367:.\Generated_Source\PSoC4/RTC.c **** 
 368:.\Generated_Source\PSoC4/RTC.c **** 
 369:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 370:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetRefOneSec
 371:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 51


 372:.\Generated_Source\PSoC4/RTC.c **** * \brief
 373:.\Generated_Source\PSoC4/RTC.c **** * Gets the RTC time update API period.
 374:.\Generated_Source\PSoC4/RTC.c **** *
 375:.\Generated_Source\PSoC4/RTC.c **** * \return
 376:.\Generated_Source\PSoC4/RTC.c **** * period The reference number of ticks taken by the RTC clock source for one
 377:.\Generated_Source\PSoC4/RTC.c **** * second.
 378:.\Generated_Source\PSoC4/RTC.c **** *
 379:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetRefOneSec(void)
 381:.\Generated_Source\PSoC4/RTC.c **** {
 1266              		.loc 2 381 0
 1267              		.cfi_startproc
 1268 0000 80B5     		push	{r7, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 382:.\Generated_Source\PSoC4/RTC.c ****     return(RTC_tickRefOneSec);
 1274              		.loc 2 382 0
 1275 0004 024B     		ldr	r3, .L64
 1276 0006 1B68     		ldr	r3, [r3]
 383:.\Generated_Source\PSoC4/RTC.c **** }
 1277              		.loc 2 383 0
 1278 0008 181C     		mov	r0, r3
 1279 000a BD46     		mov	sp, r7
 1280              		@ sp needed
 1281 000c 80BD     		pop	{r7, pc}
 1282              	.L65:
 1283 000e C046     		.align	2
 1284              	.L64:
 1285 0010 04000000 		.word	RTC_tickRefOneSec
 1286              		.cfi_endproc
 1287              	.LFE36:
 1288              		.size	RTC_GetRefOneSec, .-RTC_GetRefOneSec
 1289              		.section	.text.RTC_GetDateAndTime,"ax",%progbits
 1290              		.align	2
 1291              		.global	RTC_GetDateAndTime
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	RTC_GetDateAndTime, %function
 1295              	RTC_GetDateAndTime:
 1296              	.LFB37:
 384:.\Generated_Source\PSoC4/RTC.c **** 
 385:.\Generated_Source\PSoC4/RTC.c **** 
 386:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 387:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDateAndTime
 388:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 389:.\Generated_Source\PSoC4/RTC.c **** *
 390:.\Generated_Source\PSoC4/RTC.c **** * Reads the current time and date.
 391:.\Generated_Source\PSoC4/RTC.c **** *
 392:.\Generated_Source\PSoC4/RTC.c **** * \param dateTime The pointer to the RTC_date_time structure to which time and 
 393:.\Generated_Source\PSoC4/RTC.c **** * date is returned.
 394:.\Generated_Source\PSoC4/RTC.c **** *
 395:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 396:.\Generated_Source\PSoC4/RTC.c **** void RTC_GetDateAndTime(RTC_DATE_TIME* dateTime)
 397:.\Generated_Source\PSoC4/RTC.c **** {
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 52


 1297              		.loc 2 397 0
 1298              		.cfi_startproc
 1299 0000 90B5     		push	{r4, r7, lr}
 1300              		.cfi_def_cfa_offset 12
 1301              		.cfi_offset 4, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 85B0     		sub	sp, sp, #20
 1305              		.cfi_def_cfa_offset 32
 1306 0004 02AF     		add	r7, sp, #8
 1307              		.cfi_def_cfa 7, 24
 1308 0006 7860     		str	r0, [r7, #4]
 398:.\Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(dateTime, (RTC_unixTime  + RTC_dstTimeOffset),
 1309              		.loc 2 398 0
 1310 0008 0A4B     		ldr	r3, .L67
 1311 000a 1B68     		ldr	r3, [r3]
 1312 000c 191C     		mov	r1, r3
 1313 000e 0023     		mov	r3, #0
 1314 0010 1A1C     		mov	r2, r3
 1315 0012 094B     		ldr	r3, .L67+4
 1316 0014 5C68     		ldr	r4, [r3, #4]
 1317 0016 1B68     		ldr	r3, [r3]
 1318 0018 5B18     		add	r3, r3, r1
 1319 001a 5441     		adc	r4, r4, r2
 1320 001c 7968     		ldr	r1, [r7, #4]
 1321 001e 0022     		mov	r2, #0
 1322 0020 0092     		str	r2, [sp]
 1323 0022 081C     		mov	r0, r1
 1324 0024 1A1C     		mov	r2, r3
 1325 0026 231C     		mov	r3, r4
 1326 0028 FFF7FEFF 		bl	RTC_UnixToDateTime
 399:.\Generated_Source\PSoC4/RTC.c ****                                                                             RTC_INITIAL_TIME_FORMAT
 400:.\Generated_Source\PSoC4/RTC.c **** }
 1327              		.loc 2 400 0
 1328 002c BD46     		mov	sp, r7
 1329 002e 03B0     		add	sp, sp, #12
 1330              		@ sp needed
 1331 0030 90BD     		pop	{r4, r7, pc}
 1332              	.L68:
 1333 0032 C046     		.align	2
 1334              	.L67:
 1335 0034 08000000 		.word	RTC_dstTimeOffset
 1336 0038 00000000 		.word	RTC_unixTime
 1337              		.cfi_endproc
 1338              	.LFE37:
 1339              		.size	RTC_GetDateAndTime, .-RTC_GetDateAndTime
 1340              		.section	.text.RTC_GetTime,"ax",%progbits
 1341              		.align	2
 1342              		.global	RTC_GetTime
 1343              		.code	16
 1344              		.thumb_func
 1345              		.type	RTC_GetTime, %function
 1346              	RTC_GetTime:
 1347              	.LFB38:
 401:.\Generated_Source\PSoC4/RTC.c **** 
 402:.\Generated_Source\PSoC4/RTC.c **** 
 403:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 53


 404:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetTime
 405:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 406:.\Generated_Source\PSoC4/RTC.c **** * \brief
 407:.\Generated_Source\PSoC4/RTC.c **** * Reads the current time.
 408:.\Generated_Source\PSoC4/RTC.c **** *
 409:.\Generated_Source\PSoC4/RTC.c **** * \return
 410:.\Generated_Source\PSoC4/RTC.c **** * date The value of date in the user selected format. The date value is 
 411:.\Generated_Source\PSoC4/RTC.c **** * available in the BCD format.
 412:.\Generated_Source\PSoC4/RTC.c **** *
 413:.\Generated_Source\PSoC4/RTC.c **** * \warning
 414:.\Generated_Source\PSoC4/RTC.c **** *  Using RTC_GetTime and RTC_GetDate API separately might result
 415:.\Generated_Source\PSoC4/RTC.c **** *  in errors when the time wraps around the end of the day. To avoid this,
 416:.\Generated_Source\PSoC4/RTC.c **** *  use RTC_GetDateAndTime API.
 417:.\Generated_Source\PSoC4/RTC.c **** *
 418:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetTime(void)
 420:.\Generated_Source\PSoC4/RTC.c **** {
 1348              		.loc 2 420 0
 1349              		.cfi_startproc
 1350 0000 90B5     		push	{r4, r7, lr}
 1351              		.cfi_def_cfa_offset 12
 1352              		.cfi_offset 4, -12
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355 0002 83B0     		sub	sp, sp, #12
 1356              		.cfi_def_cfa_offset 24
 1357 0004 02AF     		add	r7, sp, #8
 1358              		.cfi_def_cfa 7, 16
 421:.\Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1359              		.loc 2 421 0
 1360 0006 0C4B     		ldr	r3, .L71
 1361 0008 1B68     		ldr	r3, [r3]
 1362 000a 191C     		mov	r1, r3
 1363 000c 0023     		mov	r3, #0
 1364 000e 1A1C     		mov	r2, r3
 1365 0010 0A4B     		ldr	r3, .L71+4
 1366 0012 5C68     		ldr	r4, [r3, #4]
 1367 0014 1B68     		ldr	r3, [r3]
 1368 0016 5B18     		add	r3, r3, r1
 1369 0018 5441     		adc	r4, r4, r2
 1370 001a 0949     		ldr	r1, .L71+8
 1371 001c 0022     		mov	r2, #0
 1372 001e 0092     		str	r2, [sp]
 1373 0020 081C     		mov	r0, r1
 1374 0022 1A1C     		mov	r2, r3
 1375 0024 231C     		mov	r3, r4
 1376 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 422:.\Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 423:.\Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 424:.\Generated_Source\PSoC4/RTC.c **** 
 425:.\Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.time);
 1377              		.loc 2 425 0
 1378 002a 054B     		ldr	r3, .L71+8
 1379 002c 1B68     		ldr	r3, [r3]
 426:.\Generated_Source\PSoC4/RTC.c **** }
 1380              		.loc 2 426 0
 1381 002e 181C     		mov	r0, r3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 54


 1382 0030 BD46     		mov	sp, r7
 1383 0032 01B0     		add	sp, sp, #4
 1384              		@ sp needed
 1385 0034 90BD     		pop	{r4, r7, pc}
 1386              	.L72:
 1387 0036 C046     		.align	2
 1388              	.L71:
 1389 0038 08000000 		.word	RTC_dstTimeOffset
 1390 003c 00000000 		.word	RTC_unixTime
 1391 0040 00000000 		.word	RTC_currentTimeDate
 1392              		.cfi_endproc
 1393              	.LFE38:
 1394              		.size	RTC_GetTime, .-RTC_GetTime
 1395              		.section	.text.RTC_GetDate,"ax",%progbits
 1396              		.align	2
 1397              		.global	RTC_GetDate
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	RTC_GetDate, %function
 1401              	RTC_GetDate:
 1402              	.LFB39:
 427:.\Generated_Source\PSoC4/RTC.c **** 
 428:.\Generated_Source\PSoC4/RTC.c **** 
 429:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 430:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDate
 431:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 432:.\Generated_Source\PSoC4/RTC.c **** *
 433:.\Generated_Source\PSoC4/RTC.c **** * \brief Reads the current time.
 434:.\Generated_Source\PSoC4/RTC.c **** *
 435:.\Generated_Source\PSoC4/RTC.c **** * \return
 436:.\Generated_Source\PSoC4/RTC.c **** * time The time value in the format selected by the user (12/24 hr);
 437:.\Generated_Source\PSoC4/RTC.c **** * The time value is available in the BCD format.
 438:.\Generated_Source\PSoC4/RTC.c **** *
 439:.\Generated_Source\PSoC4/RTC.c **** * \note
 440:.\Generated_Source\PSoC4/RTC.c **** *  Using RTC_GetTime and RTC_GetDate API separately
 441:.\Generated_Source\PSoC4/RTC.c **** *  might result in errors when the time wraps around the end of the day. To
 442:.\Generated_Source\PSoC4/RTC.c **** *  avoid this, use RTC_GetDateAndTime API.
 443:.\Generated_Source\PSoC4/RTC.c **** *
 444:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 445:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetDate(void)
 446:.\Generated_Source\PSoC4/RTC.c **** {
 1403              		.loc 2 446 0
 1404              		.cfi_startproc
 1405 0000 90B5     		push	{r4, r7, lr}
 1406              		.cfi_def_cfa_offset 12
 1407              		.cfi_offset 4, -12
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 83B0     		sub	sp, sp, #12
 1411              		.cfi_def_cfa_offset 24
 1412 0004 02AF     		add	r7, sp, #8
 1413              		.cfi_def_cfa 7, 16
 447:.\Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1414              		.loc 2 447 0
 1415 0006 0C4B     		ldr	r3, .L75
 1416 0008 1B68     		ldr	r3, [r3]
 1417 000a 191C     		mov	r1, r3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 55


 1418 000c 0023     		mov	r3, #0
 1419 000e 1A1C     		mov	r2, r3
 1420 0010 0A4B     		ldr	r3, .L75+4
 1421 0012 5C68     		ldr	r4, [r3, #4]
 1422 0014 1B68     		ldr	r3, [r3]
 1423 0016 5B18     		add	r3, r3, r1
 1424 0018 5441     		adc	r4, r4, r2
 1425 001a 0949     		ldr	r1, .L75+8
 1426 001c 0022     		mov	r2, #0
 1427 001e 0092     		str	r2, [sp]
 1428 0020 081C     		mov	r0, r1
 1429 0022 1A1C     		mov	r2, r3
 1430 0024 231C     		mov	r3, r4
 1431 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 448:.\Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 449:.\Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 450:.\Generated_Source\PSoC4/RTC.c **** 
 451:.\Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.date);
 1432              		.loc 2 451 0
 1433 002a 054B     		ldr	r3, .L75+8
 1434 002c 5B68     		ldr	r3, [r3, #4]
 452:.\Generated_Source\PSoC4/RTC.c **** }
 1435              		.loc 2 452 0
 1436 002e 181C     		mov	r0, r3
 1437 0030 BD46     		mov	sp, r7
 1438 0032 01B0     		add	sp, sp, #4
 1439              		@ sp needed
 1440 0034 90BD     		pop	{r4, r7, pc}
 1441              	.L76:
 1442 0036 C046     		.align	2
 1443              	.L75:
 1444 0038 08000000 		.word	RTC_dstTimeOffset
 1445 003c 00000000 		.word	RTC_unixTime
 1446 0040 00000000 		.word	RTC_currentTimeDate
 1447              		.cfi_endproc
 1448              	.LFE39:
 1449              		.size	RTC_GetDate, .-RTC_GetDate
 1450              		.section	.text.RTC_ReadStatus,"ax",%progbits
 1451              		.align	2
 1452              		.global	RTC_ReadStatus
 1453              		.code	16
 1454              		.thumb_func
 1455              		.type	RTC_ReadStatus, %function
 1456              	RTC_ReadStatus:
 1457              	.LFB40:
 453:.\Generated_Source\PSoC4/RTC.c **** 
 454:.\Generated_Source\PSoC4/RTC.c **** 
 455:.\Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
 456:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmDateAndTime
 458:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 459:.\Generated_Source\PSoC4/RTC.c ****     *
 460:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 461:.\Generated_Source\PSoC4/RTC.c ****     *  Writes the time and date values as the current alarm time and date.
 462:.\Generated_Source\PSoC4/RTC.c ****     *
 463:.\Generated_Source\PSoC4/RTC.c ****     * \param
 464:.\Generated_Source\PSoC4/RTC.c ****     *  alarmTime The pointer to the RTC_date_time global structure where
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 56


 465:.\Generated_Source\PSoC4/RTC.c ****     *  new values of the alarm time and date are stored.
 466:.\Generated_Source\PSoC4/RTC.c ****     *
 467:.\Generated_Source\PSoC4/RTC.c ****     * \note
 468:.\Generated_Source\PSoC4/RTC.c ****     *  Invalid time entries are written with "00:00:00:00" for the 24-hour format and
 469:.\Generated_Source\PSoC4/RTC.c ****     *  "AM 12:00:00:00" for the 12-hour format. Invalid date entries are written with
 470:.\Generated_Source\PSoC4/RTC.c ****     *  a date equivalent to 01-JAN-2000.
 471:.\Generated_Source\PSoC4/RTC.c ****     *
 472:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 473:.\Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime)
 474:.\Generated_Source\PSoC4/RTC.c ****     {
 475:.\Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgTimeDate = *alarmTime;
 476:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(alarmTime, (uint8)RTC_alarmCfgMask);
 477:.\Generated_Source\PSoC4/RTC.c ****     }
 478:.\Generated_Source\PSoC4/RTC.c **** 
 479:.\Generated_Source\PSoC4/RTC.c **** 
 480:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmDateAndTime
 482:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 483:.\Generated_Source\PSoC4/RTC.c ****     *
 484:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 485:.\Generated_Source\PSoC4/RTC.c ****     *  Reads the current alarm time and date.
 486:.\Generated_Source\PSoC4/RTC.c ****     *
 487:.\Generated_Source\PSoC4/RTC.c ****     * \param
 488:.\Generated_Source\PSoC4/RTC.c ****     *  alarmTimeDate The pointer to the RTC_date_time structure to which
 489:.\Generated_Source\PSoC4/RTC.c ****     *  the alarm date and time are returned.
 490:.\Generated_Source\PSoC4/RTC.c ****     *
 491:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 492:.\Generated_Source\PSoC4/RTC.c ****     void RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate)
 493:.\Generated_Source\PSoC4/RTC.c ****     {
 494:.\Generated_Source\PSoC4/RTC.c ****         *alarmTimeDate = RTC_alarmCfgTimeDate;
 495:.\Generated_Source\PSoC4/RTC.c ****     }
 496:.\Generated_Source\PSoC4/RTC.c **** 
 497:.\Generated_Source\PSoC4/RTC.c **** 
 498:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 499:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmMask
 500:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 501:.\Generated_Source\PSoC4/RTC.c ****     *
 502:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 503:.\Generated_Source\PSoC4/RTC.c ****     *  Writes the Alarm Mask software register with one bit per time/date entry.
 504:.\Generated_Source\PSoC4/RTC.c ****     *  The alarm is true when all masked time/date values match the Alarm values.
 505:.\Generated_Source\PSoC4/RTC.c ****     *  Generated only if the alarm functionality is enabled.
 506:.\Generated_Source\PSoC4/RTC.c ****     *
 507:.\Generated_Source\PSoC4/RTC.c ****     * \param
 508:.\Generated_Source\PSoC4/RTC.c ****     *  mask The Alarm Mask software register value. The values shown below can be
 509:.\Generated_Source\PSoC4/RTC.c ****     *  OR'ed and passed as an argument as well.
 510:.\Generated_Source\PSoC4/RTC.c ****     * \param
 511:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_SEC_MASK The second alarm mask allows
 512:.\Generated_Source\PSoC4/RTC.c ****     *  matching the alarm second register with the current second register.
 513:.\Generated_Source\PSoC4/RTC.c ****     * \param
 514:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_MIN_MASK The minute alarm mask allows matching the
 515:.\Generated_Source\PSoC4/RTC.c ****     *  alarm minute register with the current minute register.
 516:.\Generated_Source\PSoC4/RTC.c ****     * \param
 517:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_HOUR_MASK The hour alarm mask allows
 518:.\Generated_Source\PSoC4/RTC.c ****     * matching the alarm hour register with the current hour register.
 519:.\Generated_Source\PSoC4/RTC.c ****     * \param
 520:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFWEEK_MASK The day of the week alarm mask 
 521:.\Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the week register with the current day of
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 57


 522:.\Generated_Source\PSoC4/RTC.c ****     * the week register.
 523:.\Generated_Source\PSoC4/RTC.c ****     * \param
 524:.\Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_DAYOFMONTH_MASK The day of the month alarm mask
 525:.\Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the month register with the current day 
 526:.\Generated_Source\PSoC4/RTC.c ****     * of the month register.
 527:.\Generated_Source\PSoC4/RTC.c ****     * \param
 528:.\Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_MONTH_MASK The month alarm mask allows matching 
 529:.\Generated_Source\PSoC4/RTC.c ****     * the alarm month register with the current month register.
 530:.\Generated_Source\PSoC4/RTC.c ****     * \param
 531:.\Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_YEAR_MASK The year alarm mask allows matching the
 532:.\Generated_Source\PSoC4/RTC.c ****     *  alarm year register with the current year register.
 533:.\Generated_Source\PSoC4/RTC.c ****     *
 534:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 535:.\Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmMask(uint32 mask)
 536:.\Generated_Source\PSoC4/RTC.c ****     {
 537:.\Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgMask = (uint8)mask;
 538:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate, (uint8)mask);
 539:.\Generated_Source\PSoC4/RTC.c ****     }
 540:.\Generated_Source\PSoC4/RTC.c **** 
 541:.\Generated_Source\PSoC4/RTC.c **** 
 542:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 543:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmMask
 544:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 545:.\Generated_Source\PSoC4/RTC.c ****     *
 546:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 547:.\Generated_Source\PSoC4/RTC.c ****     *  Reads the Alarm Mask software register. Generated only if the alarm 
 548:.\Generated_Source\PSoC4/RTC.c ****     * functionality is enabled.
 549:.\Generated_Source\PSoC4/RTC.c ****     *
 550:.\Generated_Source\PSoC4/RTC.c ****     * \return
 551:.\Generated_Source\PSoC4/RTC.c ****     *  The Alarm Mask value with each bit representing the status of the alarm 
 552:.\Generated_Source\PSoC4/RTC.c ****     * time/date match enable.
 553:.\Generated_Source\PSoC4/RTC.c ****     *
 554:.\Generated_Source\PSoC4/RTC.c ****     * \return
 555:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_SEC_MASK - The second alarm mask allows matching the
 556:.\Generated_Source\PSoC4/RTC.c ****     * alarm second register with the current second register.
 557:.\Generated_Source\PSoC4/RTC.c ****     *
 558:.\Generated_Source\PSoC4/RTC.c ****     * \return
 559:.\Generated_Source\PSoC4/RTC.c ****     * RTC_ALARM_MIN_MASK - The minute alarm mask allows matching the 
 560:.\Generated_Source\PSoC4/RTC.c ****     * alarm minute register with the current minute register.
 561:.\Generated_Source\PSoC4/RTC.c ****     *
 562:.\Generated_Source\PSoC4/RTC.c ****     * \return
 563:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_HOUR_MASK - The hour alarm mask allows matching the 
 564:.\Generated_Source\PSoC4/RTC.c ****     * alarm hour register with the current hour register.
 565:.\Generated_Source\PSoC4/RTC.c ****     *
 566:.\Generated_Source\PSoC4/RTC.c ****     * \return
 567:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFWEEK_MASK - The day of the week alarm mask allows
 568:.\Generated_Source\PSoC4/RTC.c ****     * matching the alarm day of the week register with the current day of the 
 569:.\Generated_Source\PSoC4/RTC.c ****     * week register.
 570:.\Generated_Source\PSoC4/RTC.c ****     *
 571:.\Generated_Source\PSoC4/RTC.c ****     * \return
 572:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_DAYOFMONTH_MASK - The day of the month alarm mask 
 573:.\Generated_Source\PSoC4/RTC.c ****     * allows matching the alarm day of the month register with the current day of 
 574:.\Generated_Source\PSoC4/RTC.c ****     * the month register.
 575:.\Generated_Source\PSoC4/RTC.c ****     *
 576:.\Generated_Source\PSoC4/RTC.c ****     * \return
 577:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_MONTH_MASK - The month alarm mask allows matching 
 578:.\Generated_Source\PSoC4/RTC.c ****     * the alarm month register with the current month register.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 58


 579:.\Generated_Source\PSoC4/RTC.c ****     *
 580:.\Generated_Source\PSoC4/RTC.c ****     * \return
 581:.\Generated_Source\PSoC4/RTC.c ****     *  RTC_ALARM_YEAR_MASK - The year alarm mask allows matching the
 582:.\Generated_Source\PSoC4/RTC.c ****     * alarm year register with the current year register.
 583:.\Generated_Source\PSoC4/RTC.c ****     *
 584:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 585:.\Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmMask(void)
 586:.\Generated_Source\PSoC4/RTC.c ****     {
 587:.\Generated_Source\PSoC4/RTC.c ****         return((uint32)RTC_alarmCfgMask);
 588:.\Generated_Source\PSoC4/RTC.c ****     }
 589:.\Generated_Source\PSoC4/RTC.c **** 
 590:.\Generated_Source\PSoC4/RTC.c **** 
 591:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 592:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmStatus
 593:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 594:.\Generated_Source\PSoC4/RTC.c ****     *
 595:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 596:.\Generated_Source\PSoC4/RTC.c ****     *  Returns the alarm status of RTC.
 597:.\Generated_Source\PSoC4/RTC.c ****     *
 598:.\Generated_Source\PSoC4/RTC.c ****     * \return
 599:.\Generated_Source\PSoC4/RTC.c ****     *  The Alarm active status. This bit is high when the current time and date match the alarm
 600:.\Generated_Source\PSoC4/RTC.c ****     *  time and date.
 601:.\Generated_Source\PSoC4/RTC.c ****     *
 602:.\Generated_Source\PSoC4/RTC.c ****     * \return
 603:.\Generated_Source\PSoC4/RTC.c ****     *  0 - The Alarm status is not active.
 604:.\Generated_Source\PSoC4/RTC.c ****     * \return
 605:.\Generated_Source\PSoC4/RTC.c ****     *  1 - The Alarm status is active.
 606:.\Generated_Source\PSoC4/RTC.c ****     *
 607:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 608:.\Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmStatus(void)
 609:.\Generated_Source\PSoC4/RTC.c ****     {
 610:.\Generated_Source\PSoC4/RTC.c ****         return((0uL != (RTC_currentTimeDate.status & (1uL << RTC_STATUS_ALARM_OFFSET))) ? 1uL : 0uL
 611:.\Generated_Source\PSoC4/RTC.c ****     }
 612:.\Generated_Source\PSoC4/RTC.c **** 
 613:.\Generated_Source\PSoC4/RTC.c **** 
 614:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 615:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ClearAlarmStatus
 616:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 617:.\Generated_Source\PSoC4/RTC.c ****     *
 618:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 619:.\Generated_Source\PSoC4/RTC.c ****     *  Clears the alarm status of RTC.
 620:.\Generated_Source\PSoC4/RTC.c ****     *
 621:.\Generated_Source\PSoC4/RTC.c ****     * \note
 622:.\Generated_Source\PSoC4/RTC.c ****     * The Alarm active (AA) flag clears after read. This bit will be set in the next
 623:.\Generated_Source\PSoC4/RTC.c ****     * alarm match event only. If Alarm is set on only minutes and the alarm
 624:.\Generated_Source\PSoC4/RTC.c ****     * minutes is 20 minutes - the alarm triggers once every 20th minute of
 625:.\Generated_Source\PSoC4/RTC.c ****     * every hour.
 626:.\Generated_Source\PSoC4/RTC.c ****     *
 627:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 628:.\Generated_Source\PSoC4/RTC.c ****     void RTC_ClearAlarmStatus(void)
 629:.\Generated_Source\PSoC4/RTC.c ****     {
 630:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= (~(1uL << RTC_STATUS_ALARM_OFFSET));
 631:.\Generated_Source\PSoC4/RTC.c ****         RTC_alarmCurStatus = 0u;
 632:.\Generated_Source\PSoC4/RTC.c ****     }
 633:.\Generated_Source\PSoC4/RTC.c **** 
 634:.\Generated_Source\PSoC4/RTC.c **** 
 635:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 59


 636:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmHandler
 637:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 638:.\Generated_Source\PSoC4/RTC.c ****     *
 639:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 640:.\Generated_Source\PSoC4/RTC.c ****     *  This API sets the function to be called when the alarm goes off / triggers.
 641:.\Generated_Source\PSoC4/RTC.c ****     *  This API is generated only if the alarm functionality is enabled in the
 642:.\Generated_Source\PSoC4/RTC.c ****     *  customizer.
 643:.\Generated_Source\PSoC4/RTC.c ****     *
 644:.\Generated_Source\PSoC4/RTC.c ****     * \param
 645:.\Generated_Source\PSoC4/RTC.c ****     *  CallbackFunction The callback function address.
 646:.\Generated_Source\PSoC4/RTC.c ****     *
 647:.\Generated_Source\PSoC4/RTC.c ****     * \return
 648:.\Generated_Source\PSoC4/RTC.c ****     *  A previous callback function address.
 649:.\Generated_Source\PSoC4/RTC.c ****     *
 650:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 651:.\Generated_Source\PSoC4/RTC.c ****     void* RTC_SetAlarmHandler(void (*CallbackFunction)(void))
 652:.\Generated_Source\PSoC4/RTC.c ****     {
 653:.\Generated_Source\PSoC4/RTC.c ****         void (*tmpCallbackPtr)(void);
 654:.\Generated_Source\PSoC4/RTC.c **** 
 655:.\Generated_Source\PSoC4/RTC.c ****         tmpCallbackPtr = RTC_alarmCallbackPtr;
 656:.\Generated_Source\PSoC4/RTC.c ****         RTC_alarmCallbackPtr = CallbackFunction;
 657:.\Generated_Source\PSoC4/RTC.c **** 
 658:.\Generated_Source\PSoC4/RTC.c ****         return((void*)tmpCallbackPtr);
 659:.\Generated_Source\PSoC4/RTC.c ****     }
 660:.\Generated_Source\PSoC4/RTC.c **** 
 661:.\Generated_Source\PSoC4/RTC.c **** 
 662:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 663:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetNexAlarmTime
 664:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 665:.\Generated_Source\PSoC4/RTC.c ****     *
 666:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 667:.\Generated_Source\PSoC4/RTC.c ****     *  This is an internal function that calculates the time of the next alarm
 668:.\Generated_Source\PSoC4/RTC.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 669:.\Generated_Source\PSoC4/RTC.c ****     *
 670:.\Generated_Source\PSoC4/RTC.c ****     * \param
 671:.\Generated_Source\PSoC4/RTC.c ****     *  curUnixTime The current time value in the UNIX format.
 672:.\Generated_Source\PSoC4/RTC.c ****     *
 673:.\Generated_Source\PSoC4/RTC.c ****     * \param
 674:.\Generated_Source\PSoC4/RTC.c ****     *  alarmCfgMask The current Alarm Config Mask.
 675:.\Generated_Source\PSoC4/RTC.c ****     *
 676:.\Generated_Source\PSoC4/RTC.c ****     * \return Returns time of the next alarm in the UNIX format.
 677:.\Generated_Source\PSoC4/RTC.c ****     *
 678:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 679:.\Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask)
 680:.\Generated_Source\PSoC4/RTC.c ****     {
 681:.\Generated_Source\PSoC4/RTC.c ****         uint32 prevVal;
 682:.\Generated_Source\PSoC4/RTC.c ****         uint32 nextVal;
 683:.\Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 684:.\Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 685:.\Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 686:.\Generated_Source\PSoC4/RTC.c **** 
 687:.\Generated_Source\PSoC4/RTC.c ****         carryFlag = 1u;
 688:.\Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, curUnixTime, (uint32)RTC_24_HOURS_FORMAT);
 689:.\Generated_Source\PSoC4/RTC.c **** 
 690:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Second value of next alarm time based on current time and Alarm Config Mask. 
 691:.\Generated_Source\PSoC4/RTC.c ****         if(0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 692:.\Generated_Source\PSoC4/RTC.c ****         {
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 60


 693:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetSecond(curDateTime.time);
 694:.\Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 695:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetSecond(curDateTime.time, nextVal);
 696:.\Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 697:.\Generated_Source\PSoC4/RTC.c ****         }
 698:.\Generated_Source\PSoC4/RTC.c **** 
 699:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Minute value of next alarm time based on current time and Alarm Config Mask. 
 700:.\Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK)))
 701:.\Generated_Source\PSoC4/RTC.c ****         {
 702:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMinutes(curDateTime.time);
 703:.\Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 704:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetMinutes(curDateTime.time, nextVal);
 705:.\Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 706:.\Generated_Source\PSoC4/RTC.c ****         }
 707:.\Generated_Source\PSoC4/RTC.c **** 
 708:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Hour value of next alarm time based on current time and Alarm Config Mask. */
 709:.\Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK)))
 710:.\Generated_Source\PSoC4/RTC.c ****         {
 711:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetHours(curDateTime.time);
 712:.\Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextHour(prevVal);
 713:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetHours(curDateTime.time, nextVal);
 714:.\Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 715:.\Generated_Source\PSoC4/RTC.c ****         }
 716:.\Generated_Source\PSoC4/RTC.c **** 
 717:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of next alarm time based on current time and Alarm Config Mask. */
 718:.\Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK)))
 719:.\Generated_Source\PSoC4/RTC.c ****         {
 720:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetDay(curDateTime.date);
 721:.\Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 722:.\Generated_Source\PSoC4/RTC.c ****             {
 723:.\Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 724:.\Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 725:.\Generated_Source\PSoC4/RTC.c ****                 nextVal = prevVal + RTC_DAYS_PER_WEEK;
 726:.\Generated_Source\PSoC4/RTC.c ****                 nextVal = (nextVal > daysInMonth) ? (nextVal - daysInMonth) : nextVal;
 727:.\Generated_Source\PSoC4/RTC.c ****             }
 728:.\Generated_Source\PSoC4/RTC.c ****             else
 729:.\Generated_Source\PSoC4/RTC.c ****             {
 730:.\Generated_Source\PSoC4/RTC.c ****                 nextVal = RTC_GetNextDay(RTC_GetYear(curDateTime.date),
 731:.\Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetMonth(curDateTime.date),
 732:.\Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetDay(curDateTime.date),
 733:.\Generated_Source\PSoC4/RTC.c ****                                                       (~((uint32)alarmCfgMask)));
 734:.\Generated_Source\PSoC4/RTC.c ****             }
 735:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetDay(curDateTime.date, nextVal);
 736:.\Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 737:.\Generated_Source\PSoC4/RTC.c ****         }
 738:.\Generated_Source\PSoC4/RTC.c **** 
 739:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of next alarm time based on current time and Alarm Config Mask. *
 740:.\Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK)))
 741:.\Generated_Source\PSoC4/RTC.c ****         {
 742:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMonth(curDateTime.date);
 743:.\Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMonth(prevVal);
 744:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetMonth(curDateTime.date, nextVal);
 745:.\Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 746:.\Generated_Source\PSoC4/RTC.c ****         }
 747:.\Generated_Source\PSoC4/RTC.c **** 
 748:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of next alarm time based on current time and Alarm Config Mask. */
 749:.\Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_YEAR_MASK)))
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 61


 750:.\Generated_Source\PSoC4/RTC.c ****         {
 751:.\Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetYear(curDateTime.date);
 752:.\Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextYear(prevVal);
 753:.\Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetYear(curDateTime.date, nextVal);
 754:.\Generated_Source\PSoC4/RTC.c ****         }
 755:.\Generated_Source\PSoC4/RTC.c **** 
 756:.\Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(curDateTime.date, curDateTime.time));
 757:.\Generated_Source\PSoC4/RTC.c ****     }
 758:.\Generated_Source\PSoC4/RTC.c **** 
 759:.\Generated_Source\PSoC4/RTC.c **** 
 760:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 761:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ConstructUnixAlarmTime
 762:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 763:.\Generated_Source\PSoC4/RTC.c ****     *
 764:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 765:.\Generated_Source\PSoC4/RTC.c ****     *  This is an internal function that calculates the time of the first alarm
 766:.\Generated_Source\PSoC4/RTC.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 767:.\Generated_Source\PSoC4/RTC.c ****     *
 768:.\Generated_Source\PSoC4/RTC.c ****     * \param
 769:.\Generated_Source\PSoC4/RTC.c ****     *  alarmTime Desired alarm time in the regular time format.
 770:.\Generated_Source\PSoC4/RTC.c ****     *
 771:.\Generated_Source\PSoC4/RTC.c ****     * \param
 772:.\Generated_Source\PSoC4/RTC.c ****     *  alarmCfgMask The current Alarm Config Mask.
 773:.\Generated_Source\PSoC4/RTC.c ****     *
 774:.\Generated_Source\PSoC4/RTC.c ****     * \return
 775:.\Generated_Source\PSoC4/RTC.c ****     *  time of the first alarm in the UNIX format.
 776:.\Generated_Source\PSoC4/RTC.c ****     *
 777:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/RTC.c ****     uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask)
 779:.\Generated_Source\PSoC4/RTC.c ****     {
 780:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpCurVal;
 781:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpNextVal;
 782:.\Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 783:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmDate;
 784:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmTime;
 785:.\Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 786:.\Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 787:.\Generated_Source\PSoC4/RTC.c **** 
 788:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate = 0u;
 789:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = 0u;
 790:.\Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, RTC_unixTime, (uint32)RTC_24_HOURS_FORMAT);
 791:.\Generated_Source\PSoC4/RTC.c **** 
 792:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Seconds value of first Alarm based on current time and Alarm Config Mask. */
 793:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal =  RTC_GetSecond(curDateTime.time);
 794:.\Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetSecond(alarmTime->time);
 795:.\Generated_Source\PSoC4/RTC.c ****         carryFlag = (tmpCurVal > tmpNextVal) ? 1u : 0u;
 796:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 797:.\Generated_Source\PSoC4/RTC.c ****         {
 798:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? 0u : tmpCurVal;
 799:.\Generated_Source\PSoC4/RTC.c ****         }
 800:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = RTC_SetSecond(tmpAlarmTime, tmpNextVal);
 801:.\Generated_Source\PSoC4/RTC.c **** 
 802:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Minutes value of first Alarm based on current time and Alarm Config Mask. */
 803:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMinutes(curDateTime.time);
 804:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK))
 805:.\Generated_Source\PSoC4/RTC.c ****         {
 806:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMinSec(tmpCurVal) : tmpCurVal;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 62


 807:.\Generated_Source\PSoC4/RTC.c ****         }
 808:.\Generated_Source\PSoC4/RTC.c ****         else
 809:.\Generated_Source\PSoC4/RTC.c ****         {
 810:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMinutes(alarmTime->time);
 811:.\Generated_Source\PSoC4/RTC.c ****         }
 812:.\Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 813:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetMinutes(tmpAlarmTime, tmpNextVal);
 814:.\Generated_Source\PSoC4/RTC.c **** 
 815:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Hours value of first Alarm based on current time and Alarm Config Mask. */
 816:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetHours(curDateTime.time);
 817:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK))
 818:.\Generated_Source\PSoC4/RTC.c ****         {
 819:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextHour(tmpCurVal) : tmpCurVal;
 820:.\Generated_Source\PSoC4/RTC.c ****         }
 821:.\Generated_Source\PSoC4/RTC.c ****         else
 822:.\Generated_Source\PSoC4/RTC.c ****         {
 823:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetHours(alarmTime->time);
 824:.\Generated_Source\PSoC4/RTC.c ****             if((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(alarmTime->time))
 825:.\Generated_Source\PSoC4/RTC.c ****             {
 826:.\Generated_Source\PSoC4/RTC.c ****                 if((uint32)RTC_AM != RTC_GetAmPm(alarmTime->time))
 827:.\Generated_Source\PSoC4/RTC.c ****                 {
 828:.\Generated_Source\PSoC4/RTC.c ****                     tmpNextVal += RTC_HOURS_PER_HALF_DAY;
 829:.\Generated_Source\PSoC4/RTC.c ****                 }
 830:.\Generated_Source\PSoC4/RTC.c ****             }
 831:.\Generated_Source\PSoC4/RTC.c ****         }
 832:.\Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 833:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetHours(tmpAlarmTime, tmpNextVal);
 834:.\Generated_Source\PSoC4/RTC.c **** 
 835:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of first Alarm based on current time and Alarm Config Mask. */
 836:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetDay(curDateTime.date);
 837:.\Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetDay(alarmTime->date);
 838:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK))
 839:.\Generated_Source\PSoC4/RTC.c ****         {
 840:.\Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 841:.\Generated_Source\PSoC4/RTC.c ****             {
 842:.\Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 843:.\Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 844:.\Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (curDateTime.dayOfWeek <= alarmTime->dayOfWeek) ? (alarmTime->dayOfWee
 845:.\Generated_Source\PSoC4/RTC.c ****                                 ((RTC_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWeek
 846:.\Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = tmpCurVal + tmpNextVal;
 847:.\Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (tmpNextVal > daysInMonth) ? (tmpNextVal - daysInMonth) : tmpNextVal;
 848:.\Generated_Source\PSoC4/RTC.c ****             }
 849:.\Generated_Source\PSoC4/RTC.c ****             else
 850:.\Generated_Source\PSoC4/RTC.c ****             {
 851:.\Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (0u == carryFlag) ? tmpCurVal : RTC_GetNextDay(RTC_GetYear(curDateTime
 852:.\Generated_Source\PSoC4/RTC.c ****                                                               RTC_GetMonth(curDateTime.date),
 853:.\Generated_Source\PSoC4/RTC.c ****                                                                tmpCurVal,
 854:.\Generated_Source\PSoC4/RTC.c ****                                                               RTC_ALARM_DAYOFMONTH_MASK);
 855:.\Generated_Source\PSoC4/RTC.c ****             }
 856:.\Generated_Source\PSoC4/RTC.c ****         }
 857:.\Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 858:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetDay(tmpAlarmDate, tmpNextVal);
 859:.\Generated_Source\PSoC4/RTC.c **** 
 860:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of first Alarm based on current time and Alarm Config Mask. */
 861:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMonth(curDateTime.date);
 862:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 863:.\Generated_Source\PSoC4/RTC.c ****         {
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 63


 864:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMonth(tmpCurVal) : tmpCurVal;
 865:.\Generated_Source\PSoC4/RTC.c ****         }
 866:.\Generated_Source\PSoC4/RTC.c ****         else
 867:.\Generated_Source\PSoC4/RTC.c ****         {
 868:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMonth(alarmTime->date);
 869:.\Generated_Source\PSoC4/RTC.c ****         }
 870:.\Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 871:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetMonth(tmpAlarmDate, tmpNextVal);
 872:.\Generated_Source\PSoC4/RTC.c **** 
 873:.\Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of first Alarm based on current time and Alarm Config Mask. */
 874:.\Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetYear(curDateTime.date);
 875:.\Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 876:.\Generated_Source\PSoC4/RTC.c ****         {
 877:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextYear(tmpCurVal) : tmpCurVal;
 878:.\Generated_Source\PSoC4/RTC.c ****         }
 879:.\Generated_Source\PSoC4/RTC.c ****         else
 880:.\Generated_Source\PSoC4/RTC.c ****         {
 881:.\Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetYear(alarmTime->date);
 882:.\Generated_Source\PSoC4/RTC.c ****         }
 883:.\Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetYear(tmpAlarmDate, tmpNextVal);
 884:.\Generated_Source\PSoC4/RTC.c **** 
 885:.\Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(tmpAlarmDate, tmpAlarmTime));
 886:.\Generated_Source\PSoC4/RTC.c ****     }
 887:.\Generated_Source\PSoC4/RTC.c **** #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
 888:.\Generated_Source\PSoC4/RTC.c **** 
 889:.\Generated_Source\PSoC4/RTC.c **** 
 890:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 891:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ReadStatus
 892:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 893:.\Generated_Source\PSoC4/RTC.c **** *
 894:.\Generated_Source\PSoC4/RTC.c **** * \brief
 895:.\Generated_Source\PSoC4/RTC.c **** * Reads the Status software register, which has flags for DST (DST),
 896:.\Generated_Source\PSoC4/RTC.c **** * Leap Year (LY), AM/PM (AM_PM).
 897:.\Generated_Source\PSoC4/RTC.c **** *
 898:.\Generated_Source\PSoC4/RTC.c **** * \return
 899:.\Generated_Source\PSoC4/RTC.c **** * The values shown below are OR'ed and returned if more than one status
 900:.\Generated_Source\PSoC4/RTC.c **** * bits are set.
 901:.\Generated_Source\PSoC4/RTC.c **** *
 902:.\Generated_Source\PSoC4/RTC.c **** * \return
 903:.\Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_DST - Status of Daylight Saving Time. This bit
 904:.\Generated_Source\PSoC4/RTC.c **** * goes high when the current time and date match the DST time and date and the 
 905:.\Generated_Source\PSoC4/RTC.c **** * time is incremented. This bit goes low after the DST interval and the time is 
 906:.\Generated_Source\PSoC4/RTC.c **** * decremented.
 907:.\Generated_Source\PSoC4/RTC.c **** *
 908:.\Generated_Source\PSoC4/RTC.c **** * \return
 909:.\Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_LY - Status of Leap Year. This bit goes high when the 
 910:.\Generated_Source\PSoC4/RTC.c **** * current year is a leap year.
 911:.\Generated_Source\PSoC4/RTC.c **** *
 912:.\Generated_Source\PSoC4/RTC.c **** * \return
 913:.\Generated_Source\PSoC4/RTC.c **** * RTC_STATUS_AM_PM - Status of Current Time. This bit is low from 
 914:.\Generated_Source\PSoC4/RTC.c **** * midnight to noon and high from noon to midnight.
 915:.\Generated_Source\PSoC4/RTC.c **** *
 916:.\Generated_Source\PSoC4/RTC.c **** * \note
 917:.\Generated_Source\PSoC4/RTC.c **** * Reading the status without sync with the date and time read may cause an
 918:.\Generated_Source\PSoC4/RTC.c **** * error due to a roll-over at AM/PM, the end of a year, the end of a day;
 919:.\Generated_Source\PSoC4/RTC.c **** * RTC_GetDateAndTime() API is used to obtain the status and
 920:.\Generated_Source\PSoC4/RTC.c **** * the status member of the returned structure can be checked with the masks.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 64


 921:.\Generated_Source\PSoC4/RTC.c **** *
 922:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 923:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_ReadStatus(void)
 924:.\Generated_Source\PSoC4/RTC.c **** {
 1458              		.loc 2 924 0
 1459              		.cfi_startproc
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 86B0     		sub	sp, sp, #24
 1465              		.cfi_def_cfa_offset 32
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 925:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 926:.\Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpTimeDate;
 927:.\Generated_Source\PSoC4/RTC.c **** 
 928:.\Generated_Source\PSoC4/RTC.c ****     RTC_GetDateAndTime(&tmpTimeDate);
 1468              		.loc 2 928 0
 1469 0006 3B1D     		add	r3, r7, #4
 1470 0008 181C     		mov	r0, r3
 1471 000a FFF7FEFF 		bl	RTC_GetDateAndTime
 929:.\Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(tmpTimeDate.date);
 1472              		.loc 2 929 0
 1473 000e 3B1D     		add	r3, r7, #4
 1474 0010 5B68     		ldr	r3, [r3, #4]
 1475 0012 181C     		mov	r0, r3
 1476 0014 FFF7FEFF 		bl	RTC_GetYear
 1477 0018 031C     		mov	r3, r0
 1478 001a 7B61     		str	r3, [r7, #20]
 930:.\Generated_Source\PSoC4/RTC.c **** 
 931:.\Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_LeapYear(tmpYear))
 1479              		.loc 2 931 0
 1480 001c 7B69     		ldr	r3, [r7, #20]
 1481 001e 181C     		mov	r0, r3
 1482 0020 FFF7FEFF 		bl	RTC_LeapYear
 1483 0024 031E     		sub	r3, r0, #0
 1484 0026 06D0     		beq	.L78
 932:.\Generated_Source\PSoC4/RTC.c ****     {
 933:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_LY_OFFSET);
 1485              		.loc 2 933 0
 1486 0028 144B     		ldr	r3, .L83
 1487 002a DB68     		ldr	r3, [r3, #12]
 1488 002c 0822     		mov	r2, #8
 1489 002e 1A43     		orr	r2, r3
 1490 0030 124B     		ldr	r3, .L83
 1491 0032 DA60     		str	r2, [r3, #12]
 1492 0034 06E0     		b	.L79
 1493              	.L78:
 934:.\Generated_Source\PSoC4/RTC.c ****     }
 935:.\Generated_Source\PSoC4/RTC.c ****     else
 936:.\Generated_Source\PSoC4/RTC.c ****     {
 937:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_LY_OFFSET);
 1494              		.loc 2 937 0
 1495 0036 114B     		ldr	r3, .L83
 1496 0038 DB68     		ldr	r3, [r3, #12]
 1497 003a 0822     		mov	r2, #8
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 65


 1498 003c 9343     		bic	r3, r2
 1499 003e 1A1C     		mov	r2, r3
 1500 0040 0E4B     		ldr	r3, .L83
 1501 0042 DA60     		str	r2, [r3, #12]
 1502              	.L79:
 938:.\Generated_Source\PSoC4/RTC.c ****     }
 939:.\Generated_Source\PSoC4/RTC.c **** 
 940:.\Generated_Source\PSoC4/RTC.c **** 
 941:.\Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_GetAmPm(tmpTimeDate.time))
 1503              		.loc 2 941 0
 1504 0044 3B1D     		add	r3, r7, #4
 1505 0046 1B68     		ldr	r3, [r3]
 1506 0048 181C     		mov	r0, r3
 1507 004a FFF7FEFF 		bl	RTC_GetAmPm
 1508 004e 031E     		sub	r3, r0, #0
 1509 0050 06D0     		beq	.L80
 942:.\Generated_Source\PSoC4/RTC.c ****     {
 943:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_AM_PM_OFFSET);
 1510              		.loc 2 943 0
 1511 0052 0A4B     		ldr	r3, .L83
 1512 0054 DB68     		ldr	r3, [r3, #12]
 1513 0056 1022     		mov	r2, #16
 1514 0058 1A43     		orr	r2, r3
 1515 005a 084B     		ldr	r3, .L83
 1516 005c DA60     		str	r2, [r3, #12]
 1517 005e 06E0     		b	.L81
 1518              	.L80:
 944:.\Generated_Source\PSoC4/RTC.c ****     }
 945:.\Generated_Source\PSoC4/RTC.c ****     else
 946:.\Generated_Source\PSoC4/RTC.c ****     {
 947:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_AM_PM_OFFSET);
 1519              		.loc 2 947 0
 1520 0060 064B     		ldr	r3, .L83
 1521 0062 DB68     		ldr	r3, [r3, #12]
 1522 0064 1022     		mov	r2, #16
 1523 0066 9343     		bic	r3, r2
 1524 0068 1A1C     		mov	r2, r3
 1525 006a 044B     		ldr	r3, .L83
 1526 006c DA60     		str	r2, [r3, #12]
 1527              	.L81:
 948:.\Generated_Source\PSoC4/RTC.c ****     }
 949:.\Generated_Source\PSoC4/RTC.c **** 
 950:.\Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.status);
 1528              		.loc 2 950 0
 1529 006e 034B     		ldr	r3, .L83
 1530 0070 DB68     		ldr	r3, [r3, #12]
 951:.\Generated_Source\PSoC4/RTC.c **** }
 1531              		.loc 2 951 0
 1532 0072 181C     		mov	r0, r3
 1533 0074 BD46     		mov	sp, r7
 1534 0076 06B0     		add	sp, sp, #24
 1535              		@ sp needed
 1536 0078 80BD     		pop	{r7, pc}
 1537              	.L84:
 1538 007a C046     		.align	2
 1539              	.L83:
 1540 007c 00000000 		.word	RTC_currentTimeDate
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 66


 1541              		.cfi_endproc
 1542              	.LFE40:
 1543              		.size	RTC_ReadStatus, .-RTC_ReadStatus
 1544              		.section	.text.RTC_ConvertBCDToDec,"ax",%progbits
 1545              		.align	2
 1546              		.global	RTC_ConvertBCDToDec
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	RTC_ConvertBCDToDec, %function
 1550              	RTC_ConvertBCDToDec:
 1551              	.LFB41:
 952:.\Generated_Source\PSoC4/RTC.c **** 
 953:.\Generated_Source\PSoC4/RTC.c **** 
 954:.\Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
 955:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 956:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStartTime
 957:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 958:.\Generated_Source\PSoC4/RTC.c ****     *
 959:.\Generated_Source\PSoC4/RTC.c ****     * \brief
 960:.\Generated_Source\PSoC4/RTC.c ****     *  Stores the DST Start time.
 961:.\Generated_Source\PSoC4/RTC.c ****     *
 962:.\Generated_Source\PSoC4/RTC.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
 963:.\Generated_Source\PSoC4/RTC.c ****     *  For a relative date, the user needs to provide a valid day of a week, a 
 964:.\Generated_Source\PSoC4/RTC.c ****     *  week of a month and a month in the dstStartTime structure.
 965:.\Generated_Source\PSoC4/RTC.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in
 966:.\Generated_Source\PSoC4/RTC.c ****     *  the dstStartTime structure. The hour value is optional and if invalid
 967:.\Generated_Source\PSoC4/RTC.c ****     *  taken as 00 hrs. Invalid entries are not stored and the DST start date
 968:.\Generated_Source\PSoC4/RTC.c ****     *  retains a previous value or no value at all.
 969:.\Generated_Source\PSoC4/RTC.c ****     *
 970:.\Generated_Source\PSoC4/RTC.c ****     * \param
 971:.\Generated_Source\PSoC4/RTC.c ****     *  dstStartTime The DST Start time register value.
 972:.\Generated_Source\PSoC4/RTC.c ****     *
 973:.\Generated_Source\PSoC4/RTC.c ****     * \param
 974:.\Generated_Source\PSoC4/RTC.c ****     *  type Defines the DST operation mode <br>
 975:.\Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
 976:.\Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
 977:.\Generated_Source\PSoC4/RTC.c ****     *
 978:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 979:.\Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 980:.\Generated_Source\PSoC4/RTC.c ****                                                 RTC_DST_DATETYPE_ENUM type)
 981:.\Generated_Source\PSoC4/RTC.c ****     {
 982:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.timeFormat    = (uint8)type;
 983:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.hour          = dstStartTime->hour;
 984:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfWeek     = dstStartTime->dayOfWeek;
 985:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.weekOfMonth   = dstStartTime->weekOfMonth;
 986:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfMonth    = dstStartTime->dayOfMonth;
 987:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.month         = dstStartTime->month;
 988:.\Generated_Source\PSoC4/RTC.c **** 
 989:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 990:.\Generated_Source\PSoC4/RTC.c **** 
 991:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 992:.\Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 993:.\Generated_Source\PSoC4/RTC.c ****         {
 994:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 995:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 996:.\Generated_Source\PSoC4/RTC.c ****         }
 997:.\Generated_Source\PSoC4/RTC.c ****         else
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 67


 998:.\Generated_Source\PSoC4/RTC.c ****         {
 999:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1000:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
1001:.\Generated_Source\PSoC4/RTC.c ****         }
1002:.\Generated_Source\PSoC4/RTC.c ****     }
1003:.\Generated_Source\PSoC4/RTC.c **** 
1004:.\Generated_Source\PSoC4/RTC.c **** 
1005:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
1006:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStopTime
1007:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
1008:.\Generated_Source\PSoC4/RTC.c ****     *
1009:.\Generated_Source\PSoC4/RTC.c ****     * \brief
1010:.\Generated_Source\PSoC4/RTC.c ****     *  Stores the DST Stop time.
1011:.\Generated_Source\PSoC4/RTC.c ****     * 
1012:.\Generated_Source\PSoC4/RTC.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
1013:.\Generated_Source\PSoC4/RTC.c ****     *  For a relative date, the user needs to provide a valid day of a week, a week 
1014:.\Generated_Source\PSoC4/RTC.c ****     *  of a month and a month in the dstStopTime structure.
1015:.\Generated_Source\PSoC4/RTC.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in the
1016:.\Generated_Source\PSoC4/RTC.c ****     *  dstSoptTime structure. The hour value is optional and if invalid taken
1017:.\Generated_Source\PSoC4/RTC.c ****     *  as 00 hrs. Invalid entries are not stored and the DST start date retains
1018:.\Generated_Source\PSoC4/RTC.c ****     *  a previous value or no value at all.
1019:.\Generated_Source\PSoC4/RTC.c ****     *
1020:.\Generated_Source\PSoC4/RTC.c ****     * \param
1021:.\Generated_Source\PSoC4/RTC.c ****     *  dstStopTime DST Stop time register values.
1022:.\Generated_Source\PSoC4/RTC.c ****     *
1023:.\Generated_Source\PSoC4/RTC.c ****     * \param
1024:.\Generated_Source\PSoC4/RTC.c ****     *  type Defines the DST operation mode <br>
1025:.\Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
1026:.\Generated_Source\PSoC4/RTC.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
1027:.\Generated_Source\PSoC4/RTC.c ****     *
1028:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
1030:.\Generated_Source\PSoC4/RTC.c ****                                                RTC_DST_DATETYPE_ENUM type)
1031:.\Generated_Source\PSoC4/RTC.c ****     {
1032:.\Generated_Source\PSoC4/RTC.c **** 
1033:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.timeFormat  = (uint8)type;
1034:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.hour           = dstStopTime->hour;
1035:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfWeek      = dstStopTime->dayOfWeek;
1036:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.weekOfMonth = dstStopTime->weekOfMonth;
1037:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfMonth     = dstStopTime->dayOfMonth;
1038:.\Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.month         = dstStopTime->month;
1039:.\Generated_Source\PSoC4/RTC.c **** 
1040:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
1041:.\Generated_Source\PSoC4/RTC.c **** 
1042:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
1043:.\Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
1044:.\Generated_Source\PSoC4/RTC.c ****         {
1045:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
1046:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
1047:.\Generated_Source\PSoC4/RTC.c ****         }
1048:.\Generated_Source\PSoC4/RTC.c ****         else
1049:.\Generated_Source\PSoC4/RTC.c ****         {
1050:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1051:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
1052:.\Generated_Source\PSoC4/RTC.c ****         }
1053:.\Generated_Source\PSoC4/RTC.c ****     }
1054:.\Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 68


1055:.\Generated_Source\PSoC4/RTC.c **** 
1056:.\Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
1057:.\Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetDstUnixTime
1058:.\Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
1059:.\Generated_Source\PSoC4/RTC.c ****     *
1060:.\Generated_Source\PSoC4/RTC.c ****     * \brief
1061:.\Generated_Source\PSoC4/RTC.c ****     *  Calculates the DST Start/Stop time in the UNIX format.
1062:.\Generated_Source\PSoC4/RTC.c ****     *
1063:.\Generated_Source\PSoC4/RTC.c ****     * \param
1064:.\Generated_Source\PSoC4/RTC.c ****     *  dstTime The DST Start/Stop time in the regular time format.
1065:.\Generated_Source\PSoC4/RTC.c ****     *
1066:.\Generated_Source\PSoC4/RTC.c ****     * \return
1067:.\Generated_Source\PSoC4/RTC.c ****     *  The DST Start/Stop time in the UNIX format.
1068:.\Generated_Source\PSoC4/RTC.c ****     *
1069:.\Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime)
1071:.\Generated_Source\PSoC4/RTC.c ****     {
1072:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpYear;
1073:.\Generated_Source\PSoC4/RTC.c ****         uint32 tmpDate;
1074:.\Generated_Source\PSoC4/RTC.c ****         uint64 dstUnixTime;
1075:.\Generated_Source\PSoC4/RTC.c **** 
1076:.\Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME tmpTimeDate;
1077:.\Generated_Source\PSoC4/RTC.c **** 
1078:.\Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&tmpTimeDate, RTC_unixTime, RTC_INITIAL_TIME_FORMAT);
1079:.\Generated_Source\PSoC4/RTC.c ****         tmpYear = RTC_GetYear(tmpTimeDate.date);
1080:.\Generated_Source\PSoC4/RTC.c **** 
1081:.\Generated_Source\PSoC4/RTC.c ****         if(dstTime->timeFormat == (uint8)RTC_DST_DATE_FIXED)
1082:.\Generated_Source\PSoC4/RTC.c ****         {
1083:.\Generated_Source\PSoC4/RTC.c ****             tmpDate =     RTC_ConstructDate(dstTime->month, dstTime->dayOfMonth, tmpYear);
1084:.\Generated_Source\PSoC4/RTC.c ****         }
1085:.\Generated_Source\PSoC4/RTC.c ****         else
1086:.\Generated_Source\PSoC4/RTC.c ****         {
1087:.\Generated_Source\PSoC4/RTC.c ****             tmpDate = RTC_RelativeToFixed(dstTime->dayOfWeek, dstTime->weekOfMonth, dstTime->month,
1088:.\Generated_Source\PSoC4/RTC.c ****         }
1089:.\Generated_Source\PSoC4/RTC.c **** 
1090:.\Generated_Source\PSoC4/RTC.c ****         tmpTimeDate.time = RTC_ConstructTime((uint32)RTC_24_HOURS_FORMAT, 0u, dstTime->hour, 0u, 0u
1091:.\Generated_Source\PSoC4/RTC.c ****         dstUnixTime = RTC_DateTimeToUnix(tmpDate, tmpTimeDate.time);
1092:.\Generated_Source\PSoC4/RTC.c **** 
1093:.\Generated_Source\PSoC4/RTC.c ****         return(dstUnixTime);
1094:.\Generated_Source\PSoC4/RTC.c ****     }
1095:.\Generated_Source\PSoC4/RTC.c **** 
1096:.\Generated_Source\PSoC4/RTC.c **** 
1097:.\Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1098:.\Generated_Source\PSoC4/RTC.c **** 
1099:.\Generated_Source\PSoC4/RTC.c **** 
1100:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1101:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertBCDToDec
1102:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1103:.\Generated_Source\PSoC4/RTC.c **** *
1104:.\Generated_Source\PSoC4/RTC.c **** * \brief
1105:.\Generated_Source\PSoC4/RTC.c **** *  Converts a 4-byte BCD number into a 4-byte hexadecimal number. Each byte is
1106:.\Generated_Source\PSoC4/RTC.c **** *  converted individually and returned as an individual byte in the 32-bit
1107:.\Generated_Source\PSoC4/RTC.c **** *  variable.
1108:.\Generated_Source\PSoC4/RTC.c **** *
1109:.\Generated_Source\PSoC4/RTC.c **** * \param
1110:.\Generated_Source\PSoC4/RTC.c **** *  bcdNum A 4-byte BCD number. Each byte represents BCD.
1111:.\Generated_Source\PSoC4/RTC.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 the in BCD format.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 69


1112:.\Generated_Source\PSoC4/RTC.c **** *
1113:.\Generated_Source\PSoC4/RTC.c **** * \return
1114:.\Generated_Source\PSoC4/RTC.c **** *  decNum A 4-byte hexadecimal equivalent number of the BCD number.
1115:.\Generated_Source\PSoC4/RTC.c **** *  BCD number 0x11223344 -> returned hexadecimal number 0x0B16212C.
1116:.\Generated_Source\PSoC4/RTC.c **** *
1117:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1118:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum)
1119:.\Generated_Source\PSoC4/RTC.c **** {
 1552              		.loc 2 1119 0
 1553              		.cfi_startproc
 1554 0000 80B5     		push	{r7, lr}
 1555              		.cfi_def_cfa_offset 8
 1556              		.cfi_offset 7, -8
 1557              		.cfi_offset 14, -4
 1558 0002 86B0     		sub	sp, sp, #24
 1559              		.cfi_def_cfa_offset 32
 1560 0004 00AF     		add	r7, sp, #0
 1561              		.cfi_def_cfa_register 7
 1562 0006 7860     		str	r0, [r7, #4]
1120:.\Generated_Source\PSoC4/RTC.c ****     uint32 i;
1121:.\Generated_Source\PSoC4/RTC.c ****     uint32 mult;
1122:.\Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1123:.\Generated_Source\PSoC4/RTC.c **** 
1124:.\Generated_Source\PSoC4/RTC.c ****     mult   = 1u;
 1563              		.loc 2 1124 0
 1564 0008 0123     		mov	r3, #1
 1565 000a 3B61     		str	r3, [r7, #16]
1125:.\Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1566              		.loc 2 1125 0
 1567 000c 0023     		mov	r3, #0
 1568 000e FB60     		str	r3, [r7, #12]
1126:.\Generated_Source\PSoC4/RTC.c **** 
1127:.\Generated_Source\PSoC4/RTC.c ****     for(i = 0u; i < 16u; i++)
 1569              		.loc 2 1127 0
 1570 0010 0023     		mov	r3, #0
 1571 0012 7B61     		str	r3, [r7, #20]
 1572 0014 13E0     		b	.L86
 1573              	.L87:
1128:.\Generated_Source\PSoC4/RTC.c ****     {
1129:.\Generated_Source\PSoC4/RTC.c ****         retVal += (bcdNum & RTC_BCD_ONE_DIGIT_MASK) * mult;
 1574              		.loc 2 1129 0 discriminator 3
 1575 0016 7B68     		ldr	r3, [r7, #4]
 1576 0018 0F22     		mov	r2, #15
 1577 001a 1340     		and	r3, r2
 1578 001c 3A69     		ldr	r2, [r7, #16]
 1579 001e 5343     		mul	r3, r2
 1580 0020 FA68     		ldr	r2, [r7, #12]
 1581 0022 D318     		add	r3, r2, r3
 1582 0024 FB60     		str	r3, [r7, #12]
1130:.\Generated_Source\PSoC4/RTC.c ****         bcdNum >>= RTC_BCD_NUMBER_SIZE;
 1583              		.loc 2 1130 0 discriminator 3
 1584 0026 7B68     		ldr	r3, [r7, #4]
 1585 0028 1B09     		lsr	r3, r3, #4
 1586 002a 7B60     		str	r3, [r7, #4]
1131:.\Generated_Source\PSoC4/RTC.c ****         mult *= 10u;
 1587              		.loc 2 1131 0 discriminator 3
 1588 002c 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 70


 1589 002e 131C     		mov	r3, r2
 1590 0030 9B00     		lsl	r3, r3, #2
 1591 0032 9B18     		add	r3, r3, r2
 1592 0034 5B00     		lsl	r3, r3, #1
 1593 0036 3B61     		str	r3, [r7, #16]
1127:.\Generated_Source\PSoC4/RTC.c ****     {
 1594              		.loc 2 1127 0 discriminator 3
 1595 0038 7B69     		ldr	r3, [r7, #20]
 1596 003a 0133     		add	r3, r3, #1
 1597 003c 7B61     		str	r3, [r7, #20]
 1598              	.L86:
1127:.\Generated_Source\PSoC4/RTC.c ****     {
 1599              		.loc 2 1127 0 is_stmt 0 discriminator 1
 1600 003e 7B69     		ldr	r3, [r7, #20]
 1601 0040 0F2B     		cmp	r3, #15
 1602 0042 E8D9     		bls	.L87
1132:.\Generated_Source\PSoC4/RTC.c ****     }
1133:.\Generated_Source\PSoC4/RTC.c **** 
1134:.\Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1603              		.loc 2 1134 0 is_stmt 1
 1604 0044 FB68     		ldr	r3, [r7, #12]
1135:.\Generated_Source\PSoC4/RTC.c **** }
 1605              		.loc 2 1135 0
 1606 0046 181C     		mov	r0, r3
 1607 0048 BD46     		mov	sp, r7
 1608 004a 06B0     		add	sp, sp, #24
 1609              		@ sp needed
 1610 004c 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE41:
 1613              		.size	RTC_ConvertBCDToDec, .-RTC_ConvertBCDToDec
 1614 004e C046     		.section	.text.RTC_ConvertDecToBCD,"ax",%progbits
 1615              		.align	2
 1616              		.global	RTC_ConvertDecToBCD
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	RTC_ConvertDecToBCD, %function
 1620              	RTC_ConvertDecToBCD:
 1621              	.LFB42:
1136:.\Generated_Source\PSoC4/RTC.c **** 
1137:.\Generated_Source\PSoC4/RTC.c **** 
1138:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertDecToBCD
1140:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1141:.\Generated_Source\PSoC4/RTC.c **** *
1142:.\Generated_Source\PSoC4/RTC.c **** * \brief
1143:.\Generated_Source\PSoC4/RTC.c **** *  Converts a 4-byte hexadecimal number into a 4-byte BCD number. Each byte
1144:.\Generated_Source\PSoC4/RTC.c **** *  is converted individually and returned as an individual byte in the 32-bit
1145:.\Generated_Source\PSoC4/RTC.c **** *  variable.
1146:.\Generated_Source\PSoC4/RTC.c **** *
1147:.\Generated_Source\PSoC4/RTC.c **** * \param 
1148:.\Generated_Source\PSoC4/RTC.c **** *  decNum A 4-byte hexadecimal number. Each byte is represented in hex.
1149:.\Generated_Source\PSoC4/RTC.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 in the hex format.
1150:.\Generated_Source\PSoC4/RTC.c **** *
1151:.\Generated_Source\PSoC4/RTC.c **** * \return
1152:.\Generated_Source\PSoC4/RTC.c **** *  bcdNum - A 4-byte BCD equivalent of the passed hexadecimal number. Hexadecimal
1153:.\Generated_Source\PSoC4/RTC.c **** *  number 0x11223344 -> returned BCD number 0x17345168.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 71


1154:.\Generated_Source\PSoC4/RTC.c **** *
1155:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1156:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertDecToBCD(uint32 decNum)
1157:.\Generated_Source\PSoC4/RTC.c **** {
 1622              		.loc 2 1157 0
 1623              		.cfi_startproc
 1624 0000 80B5     		push	{r7, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
 1628 0002 86B0     		sub	sp, sp, #24
 1629              		.cfi_def_cfa_offset 32
 1630 0004 00AF     		add	r7, sp, #0
 1631              		.cfi_def_cfa_register 7
 1632 0006 7860     		str	r0, [r7, #4]
1158:.\Generated_Source\PSoC4/RTC.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1160:.\Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1161:.\Generated_Source\PSoC4/RTC.c **** 
1162:.\Generated_Source\PSoC4/RTC.c ****     shift  = 0u;
 1633              		.loc 2 1162 0
 1634 0008 0023     		mov	r3, #0
 1635 000a 7B61     		str	r3, [r7, #20]
1163:.\Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1636              		.loc 2 1163 0
 1637 000c 0023     		mov	r3, #0
 1638 000e FB60     		str	r3, [r7, #12]
1164:.\Generated_Source\PSoC4/RTC.c ****     tmpVal = decNum;
 1639              		.loc 2 1164 0
 1640 0010 7B68     		ldr	r3, [r7, #4]
 1641 0012 3B61     		str	r3, [r7, #16]
 1642              	.L90:
1165:.\Generated_Source\PSoC4/RTC.c **** 
1166:.\Generated_Source\PSoC4/RTC.c ****     do
1167:.\Generated_Source\PSoC4/RTC.c ****     {
1168:.\Generated_Source\PSoC4/RTC.c ****         retVal |= ((tmpVal % 10u) << shift);
 1643              		.loc 2 1168 0 discriminator 1
 1644 0014 3B69     		ldr	r3, [r7, #16]
 1645 0016 181C     		mov	r0, r3
 1646 0018 0A21     		mov	r1, #10
 1647 001a FFF7FEFF 		bl	__aeabi_uidivmod
 1648 001e 0B1C     		mov	r3, r1
 1649 0020 1A1C     		mov	r2, r3
 1650 0022 7B69     		ldr	r3, [r7, #20]
 1651 0024 9A40     		lsl	r2, r2, r3
 1652 0026 131C     		mov	r3, r2
 1653 0028 FA68     		ldr	r2, [r7, #12]
 1654 002a 1343     		orr	r3, r2
 1655 002c FB60     		str	r3, [r7, #12]
1169:.\Generated_Source\PSoC4/RTC.c ****         tmpVal /= 10u;
 1656              		.loc 2 1169 0 discriminator 1
 1657 002e 3B69     		ldr	r3, [r7, #16]
 1658 0030 181C     		mov	r0, r3
 1659 0032 0A21     		mov	r1, #10
 1660 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1661 0038 031C     		mov	r3, r0
 1662 003a 3B61     		str	r3, [r7, #16]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 72


1170:.\Generated_Source\PSoC4/RTC.c ****         shift  += RTC_BCD_NUMBER_SIZE;
 1663              		.loc 2 1170 0 discriminator 1
 1664 003c 7B69     		ldr	r3, [r7, #20]
 1665 003e 0433     		add	r3, r3, #4
 1666 0040 7B61     		str	r3, [r7, #20]
1171:.\Generated_Source\PSoC4/RTC.c ****     }
1172:.\Generated_Source\PSoC4/RTC.c ****     while(tmpVal >= 10u);
 1667              		.loc 2 1172 0 discriminator 1
 1668 0042 3B69     		ldr	r3, [r7, #16]
 1669 0044 092B     		cmp	r3, #9
 1670 0046 E5D8     		bhi	.L90
1173:.\Generated_Source\PSoC4/RTC.c **** 
1174:.\Generated_Source\PSoC4/RTC.c ****     retVal |= (tmpVal << shift);
 1671              		.loc 2 1174 0
 1672 0048 7B69     		ldr	r3, [r7, #20]
 1673 004a 3A69     		ldr	r2, [r7, #16]
 1674 004c 9A40     		lsl	r2, r2, r3
 1675 004e 131C     		mov	r3, r2
 1676 0050 FA68     		ldr	r2, [r7, #12]
 1677 0052 1343     		orr	r3, r2
 1678 0054 FB60     		str	r3, [r7, #12]
1175:.\Generated_Source\PSoC4/RTC.c **** 
1176:.\Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1679              		.loc 2 1176 0
 1680 0056 FB68     		ldr	r3, [r7, #12]
1177:.\Generated_Source\PSoC4/RTC.c **** }
 1681              		.loc 2 1177 0
 1682 0058 181C     		mov	r0, r3
 1683 005a BD46     		mov	sp, r7
 1684 005c 06B0     		add	sp, sp, #24
 1685              		@ sp needed
 1686 005e 80BD     		pop	{r7, pc}
 1687              		.cfi_endproc
 1688              	.LFE42:
 1689              		.size	RTC_ConvertDecToBCD, .-RTC_ConvertDecToBCD
 1690              		.section	.text.RTC_Update,"ax",%progbits
 1691              		.align	2
 1692              		.global	RTC_Update
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	RTC_Update, %function
 1696              	RTC_Update:
 1697              	.LFB43:
1178:.\Generated_Source\PSoC4/RTC.c **** 
1179:.\Generated_Source\PSoC4/RTC.c **** 
1180:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1181:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Update
1182:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1183:.\Generated_Source\PSoC4/RTC.c **** *
1184:.\Generated_Source\PSoC4/RTC.c **** * \brief
1185:.\Generated_Source\PSoC4/RTC.c **** *  This API updates the time registers and performs alarm/DST check.
1186:.\Generated_Source\PSoC4/RTC.c **** *
1187:.\Generated_Source\PSoC4/RTC.c **** *  This function increments the time/date registers by an input clock period.
1188:.\Generated_Source\PSoC4/RTC.c **** *  The period is set by RTC_SetPeriod() API or WDT period selected for RTC
1189:.\Generated_Source\PSoC4/RTC.c **** *  in the clocks configuration window (low frequency clocks tab) interface
1190:.\Generated_Source\PSoC4/RTC.c **** *  every time it is called.
1191:.\Generated_Source\PSoC4/RTC.c **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 73


1192:.\Generated_Source\PSoC4/RTC.c **** *  API is automatically mapped to the WDT's callback slot and period if the
1193:.\Generated_Source\PSoC4/RTC.c **** *  configuration is as follows: 1) Option "Implement RTC update manually" in
1194:.\Generated_Source\PSoC4/RTC.c **** *  the customizer is unchecked 2) One of WDTs is selected in the "Use for RTC"
1195:.\Generated_Source\PSoC4/RTC.c **** *  panel of the low frequency clocks tab 3) Option "Implementation by IDE" is
1196:.\Generated_Source\PSoC4/RTC.c **** *  selected in the "Timer (WDT) ISR" panel.
1197:.\Generated_Source\PSoC4/RTC.c **** *
1198:.\Generated_Source\PSoC4/RTC.c **** *  If option "Implement RTC update manually" is checked in the customizer or
1199:.\Generated_Source\PSoC4/RTC.c **** *  option "None" is selected in the "Use for RTC" panel,it is the user's
1200:.\Generated_Source\PSoC4/RTC.c **** *  responsibility: 1) to call this API from the clock ISR to be
1201:.\Generated_Source\PSoC4/RTC.c **** *  used as the RTC's input 2) set the period of the RTC through
1202:.\Generated_Source\PSoC4/RTC.c **** *  RTC_SetPeriod() API.
1203:.\Generated_Source\PSoC4/RTC.c **** *
1204:.\Generated_Source\PSoC4/RTC.c **** * \note Updates the Unix time register, updates the alarm and DST status.
1205:.\Generated_Source\PSoC4/RTC.c **** *
1206:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1207:.\Generated_Source\PSoC4/RTC.c **** void RTC_Update(void)
1208:.\Generated_Source\PSoC4/RTC.c **** {
 1698              		.loc 2 1208 0
 1699              		.cfi_startproc
 1700 0000 90B5     		push	{r4, r7, lr}
 1701              		.cfi_def_cfa_offset 12
 1702              		.cfi_offset 4, -12
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 00AF     		add	r7, sp, #0
 1706              		.cfi_def_cfa_register 7
1209:.\Generated_Source\PSoC4/RTC.c ****     static volatile uint32 RTC_currentTickNumber;
1210:.\Generated_Source\PSoC4/RTC.c ****     RTC_currentTickNumber += RTC_updateTimePeriod;
 1707              		.loc 2 1210 0
 1708 0004 0D4B     		ldr	r3, .L94
 1709 0006 1A68     		ldr	r2, [r3]
 1710 0008 0D4B     		ldr	r3, .L94+4
 1711 000a 1B68     		ldr	r3, [r3]
 1712 000c D218     		add	r2, r2, r3
 1713 000e 0B4B     		ldr	r3, .L94
 1714 0010 1A60     		str	r2, [r3]
1211:.\Generated_Source\PSoC4/RTC.c **** 
1212:.\Generated_Source\PSoC4/RTC.c ****     if(RTC_currentTickNumber >= RTC_tickRefOneSec)
 1715              		.loc 2 1212 0
 1716 0012 0A4B     		ldr	r3, .L94
 1717 0014 1A68     		ldr	r2, [r3]
 1718 0016 0B4B     		ldr	r3, .L94+8
 1719 0018 1B68     		ldr	r3, [r3]
 1720 001a 9A42     		cmp	r2, r3
 1721 001c 0CD3     		bcc	.L92
1213:.\Generated_Source\PSoC4/RTC.c ****     {
1214:.\Generated_Source\PSoC4/RTC.c ****         RTC_unixTime++;
 1722              		.loc 2 1214 0
 1723 001e 0A4B     		ldr	r3, .L94+12
 1724 0020 5C68     		ldr	r4, [r3, #4]
 1725 0022 1B68     		ldr	r3, [r3]
 1726 0024 0121     		mov	r1, #1
 1727 0026 0022     		mov	r2, #0
 1728 0028 5B18     		add	r3, r3, r1
 1729 002a 5441     		adc	r4, r4, r2
 1730 002c 064A     		ldr	r2, .L94+12
 1731 002e 1360     		str	r3, [r2]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 74


 1732 0030 5460     		str	r4, [r2, #4]
1215:.\Generated_Source\PSoC4/RTC.c ****         RTC_currentTickNumber = 0u;
 1733              		.loc 2 1215 0
 1734 0032 024B     		ldr	r3, .L94
 1735 0034 0022     		mov	r2, #0
 1736 0036 1A60     		str	r2, [r3]
 1737              	.L92:
1216:.\Generated_Source\PSoC4/RTC.c **** 
1217:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
1218:.\Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == RTC_unixTimeDstStart)
1219:.\Generated_Source\PSoC4/RTC.c ****         {
1220:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
1221:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
1222:.\Generated_Source\PSoC4/RTC.c ****         }
1223:.\Generated_Source\PSoC4/RTC.c **** 
1224:.\Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == (RTC_unixTimeDstStop  - RTC_dstTimeOffset))
1225:.\Generated_Source\PSoC4/RTC.c ****         {
1226:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1227:.\Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0u;
1228:.\Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
1229:.\Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
1230:.\Generated_Source\PSoC4/RTC.c ****         }
1231:.\Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1232:.\Generated_Source\PSoC4/RTC.c **** 
1233:.\Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
1234:.\Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime + RTC_dstTimeOffset) == RTC_unixTimeAlarm)
1235:.\Generated_Source\PSoC4/RTC.c ****         {
1236:.\Generated_Source\PSoC4/RTC.c ****             RTC_currentTimeDate.status |= (1uL << RTC_STATUS_ALARM_OFFSET);
1237:.\Generated_Source\PSoC4/RTC.c ****             RTC_alarmCurStatus = RTC_alarmCfgMask;
1238:.\Generated_Source\PSoC4/RTC.c ****             if (RTC_alarmCallbackPtr != (void *) 0)
1239:.\Generated_Source\PSoC4/RTC.c ****             {
1240:.\Generated_Source\PSoC4/RTC.c ****                 RTC_alarmCallbackPtr();
1241:.\Generated_Source\PSoC4/RTC.c ****             }
1242:.\Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeAlarm = RTC_GetNexAlarmTime(RTC_unixTime + RTC_dstTimeOffset,
1243:.\Generated_Source\PSoC4/RTC.c ****                                                                                                   (
1244:.\Generated_Source\PSoC4/RTC.c ****         }
1245:.\Generated_Source\PSoC4/RTC.c ****     #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
1246:.\Generated_Source\PSoC4/RTC.c ****     }
1247:.\Generated_Source\PSoC4/RTC.c **** }
 1738              		.loc 2 1247 0
 1739 0038 BD46     		mov	sp, r7
 1740              		@ sp needed
 1741 003a 90BD     		pop	{r4, r7, pc}
 1742              	.L95:
 1743              		.align	2
 1744              	.L94:
 1745 003c 0C000000 		.word	RTC_currentTickNumber.5088
 1746 0040 00000000 		.word	RTC_updateTimePeriod
 1747 0044 04000000 		.word	RTC_tickRefOneSec
 1748 0048 00000000 		.word	RTC_unixTime
 1749              		.cfi_endproc
 1750              	.LFE43:
 1751              		.size	RTC_Update, .-RTC_Update
 1752              		.section	.text.RTC_DateTimeToUnix,"ax",%progbits
 1753              		.align	2
 1754              		.global	RTC_DateTimeToUnix
 1755              		.code	16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 75


 1756              		.thumb_func
 1757              		.type	RTC_DateTimeToUnix, %function
 1758              	RTC_DateTimeToUnix:
 1759              	.LFB44:
1248:.\Generated_Source\PSoC4/RTC.c **** 
1249:.\Generated_Source\PSoC4/RTC.c **** 
1250:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1251:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DateTimeToUnix
1252:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1253:.\Generated_Source\PSoC4/RTC.c **** *
1254:.\Generated_Source\PSoC4/RTC.c **** * \brief
1255:.\Generated_Source\PSoC4/RTC.c **** *  This is an internal function to convert the date and time from
1256:.\Generated_Source\PSoC4/RTC.c **** *  the regular time format into the UNIX time format.
1257:.\Generated_Source\PSoC4/RTC.c **** *
1258:.\Generated_Source\PSoC4/RTC.c **** * \param
1259:.\Generated_Source\PSoC4/RTC.c **** *  inputDate The date in the selected in the customizer "date format".
1260:.\Generated_Source\PSoC4/RTC.c **** * \param
1261:.\Generated_Source\PSoC4/RTC.c **** *  inputTime The time in the defined "time format".
1262:.\Generated_Source\PSoC4/RTC.c **** *
1263:.\Generated_Source\PSoC4/RTC.c **** * \return Returns the date and time in the UNIX format.
1264:.\Generated_Source\PSoC4/RTC.c **** *
1265:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1266:.\Generated_Source\PSoC4/RTC.c **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime)
1267:.\Generated_Source\PSoC4/RTC.c **** {
 1760              		.loc 2 1267 0
 1761              		.cfi_startproc
 1762 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1763              		.cfi_def_cfa_offset 20
 1764              		.cfi_offset 4, -20
 1765              		.cfi_offset 5, -16
 1766              		.cfi_offset 6, -12
 1767              		.cfi_offset 7, -8
 1768              		.cfi_offset 14, -4
 1769 0002 91B0     		sub	sp, sp, #68
 1770              		.cfi_def_cfa_offset 88
 1771 0004 00AF     		add	r7, sp, #0
 1772              		.cfi_def_cfa_register 7
 1773 0006 7862     		str	r0, [r7, #36]
 1774 0008 3962     		str	r1, [r7, #32]
1268:.\Generated_Source\PSoC4/RTC.c ****     uint32 i;
1269:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1270:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1271:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1272:.\Generated_Source\PSoC4/RTC.c ****     uint64 unixTime;
1273:.\Generated_Source\PSoC4/RTC.c **** 
1274:.\Generated_Source\PSoC4/RTC.c ****     unixTime = 0u;
 1775              		.loc 2 1274 0
 1776 000a 0023     		mov	r3, #0
 1777 000c 0024     		mov	r4, #0
 1778 000e 3B63     		str	r3, [r7, #48]
 1779 0010 7C63     		str	r4, [r7, #52]
1275:.\Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(inputDate);
 1780              		.loc 2 1275 0
 1781 0012 7B6A     		ldr	r3, [r7, #36]
 1782 0014 181C     		mov	r0, r3
 1783 0016 FFF7FEFF 		bl	RTC_GetYear
 1784 001a 031C     		mov	r3, r0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 76


 1785 001c FB62     		str	r3, [r7, #44]
1276:.\Generated_Source\PSoC4/RTC.c **** 
1277:.\Generated_Source\PSoC4/RTC.c ****     /* Calculate seconds from epoch start up to (but not including) current year. */
1278:.\Generated_Source\PSoC4/RTC.c ****     for(i = RTC_YEAR_0; i < tmpYear; i++)
 1786              		.loc 2 1278 0
 1787 001e 564B     		ldr	r3, .L104
 1788 0020 FB63     		str	r3, [r7, #60]
 1789 0022 19E0     		b	.L97
 1790              	.L100:
1279:.\Generated_Source\PSoC4/RTC.c ****     {
1280:.\Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(i))
 1791              		.loc 2 1280 0
 1792 0024 FB6B     		ldr	r3, [r7, #60]
 1793 0026 181C     		mov	r0, r3
 1794 0028 FFF7FEFF 		bl	RTC_LeapYear
 1795 002c 031E     		sub	r3, r0, #0
 1796 002e 08D0     		beq	.L98
1281:.\Generated_Source\PSoC4/RTC.c ****         {
1282:.\Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_LEAP_YEAR;
 1797              		.loc 2 1282 0
 1798 0030 3B6B     		ldr	r3, [r7, #48]
 1799 0032 7C6B     		ldr	r4, [r7, #52]
 1800 0034 5149     		ldr	r1, .L104+4
 1801 0036 0022     		mov	r2, #0
 1802 0038 5B18     		add	r3, r3, r1
 1803 003a 5441     		adc	r4, r4, r2
 1804 003c 3B63     		str	r3, [r7, #48]
 1805 003e 7C63     		str	r4, [r7, #52]
 1806 0040 07E0     		b	.L99
 1807              	.L98:
1283:.\Generated_Source\PSoC4/RTC.c ****         }
1284:.\Generated_Source\PSoC4/RTC.c ****         else
1285:.\Generated_Source\PSoC4/RTC.c ****         {
1286:.\Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_NONLEAP_YEAR;
 1808              		.loc 2 1286 0
 1809 0042 3B6B     		ldr	r3, [r7, #48]
 1810 0044 7C6B     		ldr	r4, [r7, #52]
 1811 0046 4E49     		ldr	r1, .L104+8
 1812 0048 0022     		mov	r2, #0
 1813 004a 5B18     		add	r3, r3, r1
 1814 004c 5441     		adc	r4, r4, r2
 1815 004e 3B63     		str	r3, [r7, #48]
 1816 0050 7C63     		str	r4, [r7, #52]
 1817              	.L99:
1278:.\Generated_Source\PSoC4/RTC.c ****     {
 1818              		.loc 2 1278 0 discriminator 2
 1819 0052 FB6B     		ldr	r3, [r7, #60]
 1820 0054 0133     		add	r3, r3, #1
 1821 0056 FB63     		str	r3, [r7, #60]
 1822              	.L97:
1278:.\Generated_Source\PSoC4/RTC.c ****     {
 1823              		.loc 2 1278 0 is_stmt 0 discriminator 1
 1824 0058 FA6B     		ldr	r2, [r7, #60]
 1825 005a FB6A     		ldr	r3, [r7, #44]
 1826 005c 9A42     		cmp	r2, r3
 1827 005e E1D3     		bcc	.L100
1287:.\Generated_Source\PSoC4/RTC.c ****         }
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 77


1288:.\Generated_Source\PSoC4/RTC.c ****     }
1289:.\Generated_Source\PSoC4/RTC.c **** 
1290:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds had elapsed in this year prior to the current month. */
1291:.\Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 1828              		.loc 2 1291 0 is_stmt 1
 1829 0060 7B6A     		ldr	r3, [r7, #36]
 1830 0062 181C     		mov	r0, r3
 1831 0064 FFF7FEFF 		bl	RTC_GetMonth
 1832 0068 031C     		mov	r3, r0
 1833 006a BB62     		str	r3, [r7, #40]
1292:.\Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_daysBeforeMonthTbl[tmpMonth - 1u];
 1834              		.loc 2 1292 0
 1835 006c BB6A     		ldr	r3, [r7, #40]
 1836 006e 5A1E     		sub	r2, r3, #1
 1837 0070 444B     		ldr	r3, .L104+12
 1838 0072 5200     		lsl	r2, r2, #1
 1839 0074 D35A     		ldrh	r3, [r2, r3]
 1840 0076 BB63     		str	r3, [r7, #56]
1293:.\Generated_Source\PSoC4/RTC.c **** 
1294:.\Generated_Source\PSoC4/RTC.c ****     if((tmpMonth > 2u) && (0u != RTC_LeapYear(tmpYear)))
 1841              		.loc 2 1294 0
 1842 0078 BB6A     		ldr	r3, [r7, #40]
 1843 007a 022B     		cmp	r3, #2
 1844 007c 08D9     		bls	.L101
 1845              		.loc 2 1294 0 is_stmt 0 discriminator 1
 1846 007e FB6A     		ldr	r3, [r7, #44]
 1847 0080 181C     		mov	r0, r3
 1848 0082 FFF7FEFF 		bl	RTC_LeapYear
 1849 0086 031E     		sub	r3, r0, #0
 1850 0088 02D0     		beq	.L101
1295:.\Generated_Source\PSoC4/RTC.c ****     {
1296:.\Generated_Source\PSoC4/RTC.c ****         tmpVal++;
 1851              		.loc 2 1296 0 is_stmt 1
 1852 008a BB6B     		ldr	r3, [r7, #56]
 1853 008c 0133     		add	r3, r3, #1
 1854 008e BB63     		str	r3, [r7, #56]
 1855              	.L101:
1297:.\Generated_Source\PSoC4/RTC.c ****     }
1298:.\Generated_Source\PSoC4/RTC.c **** 
1299:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds are in current month days prior to today. */
1300:.\Generated_Source\PSoC4/RTC.c ****     unixTime += tmpVal * RTC_SECONDS_PER_DAY;
 1856              		.loc 2 1300 0
 1857 0090 BB6B     		ldr	r3, [r7, #56]
 1858 0092 3D4A     		ldr	r2, .L104+16
 1859 0094 5343     		mul	r3, r2
 1860 0096 BB61     		str	r3, [r7, #24]
 1861 0098 0023     		mov	r3, #0
 1862 009a FB61     		str	r3, [r7, #28]
 1863 009c 3B6B     		ldr	r3, [r7, #48]
 1864 009e 7C6B     		ldr	r4, [r7, #52]
 1865 00a0 B969     		ldr	r1, [r7, #24]
 1866 00a2 FA69     		ldr	r2, [r7, #28]
 1867 00a4 5B18     		add	r3, r3, r1
 1868 00a6 5441     		adc	r4, r4, r2
 1869 00a8 3B63     		str	r3, [r7, #48]
 1870 00aa 7C63     		str	r4, [r7, #52]
1301:.\Generated_Source\PSoC4/RTC.c ****     unixTime += (RTC_GetDay(inputDate) - 1u) * RTC_SECONDS_PER_DAY;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 78


 1871              		.loc 2 1301 0
 1872 00ac 7B6A     		ldr	r3, [r7, #36]
 1873 00ae 181C     		mov	r0, r3
 1874 00b0 FFF7FEFF 		bl	RTC_GetDay
 1875 00b4 021C     		mov	r2, r0
 1876 00b6 344B     		ldr	r3, .L104+16
 1877 00b8 5343     		mul	r3, r2
 1878 00ba 344A     		ldr	r2, .L104+20
 1879 00bc 9446     		mov	ip, r2
 1880 00be 6344     		add	r3, r3, ip
 1881 00c0 3B61     		str	r3, [r7, #16]
 1882 00c2 0023     		mov	r3, #0
 1883 00c4 7B61     		str	r3, [r7, #20]
 1884 00c6 3B6B     		ldr	r3, [r7, #48]
 1885 00c8 7C6B     		ldr	r4, [r7, #52]
 1886 00ca 3969     		ldr	r1, [r7, #16]
 1887 00cc 7A69     		ldr	r2, [r7, #20]
 1888 00ce 5B18     		add	r3, r3, r1
 1889 00d0 5441     		adc	r4, r4, r2
 1890 00d2 3B63     		str	r3, [r7, #48]
 1891 00d4 7C63     		str	r4, [r7, #52]
1302:.\Generated_Source\PSoC4/RTC.c **** 
1303:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current hour. */
1304:.\Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_GetHours(inputTime);
 1892              		.loc 2 1304 0
 1893 00d6 3B6A     		ldr	r3, [r7, #32]
 1894 00d8 181C     		mov	r0, r3
 1895 00da FFF7FEFF 		bl	RTC_GetHours
 1896 00de 031C     		mov	r3, r0
 1897 00e0 BB63     		str	r3, [r7, #56]
1305:.\Generated_Source\PSoC4/RTC.c ****     if(((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(inputTime)) &&
 1898              		.loc 2 1305 0
 1899 00e2 3B6A     		ldr	r3, [r7, #32]
 1900 00e4 181C     		mov	r0, r3
 1901 00e6 FFF7FEFF 		bl	RTC_GetTimeFormat
 1902 00ea 031E     		sub	r3, r0, #0
 1903 00ec 0BD0     		beq	.L102
1306:.\Generated_Source\PSoC4/RTC.c ****        ((uint32)RTC_AM != RTC_GetAmPm(inputTime)) && (tmpVal < 12u))
 1904              		.loc 2 1306 0 discriminator 1
 1905 00ee 3B6A     		ldr	r3, [r7, #32]
 1906 00f0 181C     		mov	r0, r3
 1907 00f2 FFF7FEFF 		bl	RTC_GetAmPm
 1908 00f6 031E     		sub	r3, r0, #0
1305:.\Generated_Source\PSoC4/RTC.c ****     if(((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(inputTime)) &&
 1909              		.loc 2 1305 0 discriminator 1
 1910 00f8 05D0     		beq	.L102
 1911              		.loc 2 1306 0
 1912 00fa BB6B     		ldr	r3, [r7, #56]
 1913 00fc 0B2B     		cmp	r3, #11
 1914 00fe 02D8     		bhi	.L102
1307:.\Generated_Source\PSoC4/RTC.c ****     {
1308:.\Generated_Source\PSoC4/RTC.c ****         tmpVal += RTC_HOURS_PER_HALF_DAY;
 1915              		.loc 2 1308 0
 1916 0100 BB6B     		ldr	r3, [r7, #56]
 1917 0102 0C33     		add	r3, r3, #12
 1918 0104 BB63     		str	r3, [r7, #56]
 1919              	.L102:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 79


1309:.\Generated_Source\PSoC4/RTC.c ****     }
1310:.\Generated_Source\PSoC4/RTC.c ****     unixTime += tmpVal * RTC_SECONDS_PER_HOUR;
 1920              		.loc 2 1310 0
 1921 0106 BB6B     		ldr	r3, [r7, #56]
 1922 0108 E122     		mov	r2, #225
 1923 010a 1201     		lsl	r2, r2, #4
 1924 010c 5343     		mul	r3, r2
 1925 010e BB60     		str	r3, [r7, #8]
 1926 0110 0023     		mov	r3, #0
 1927 0112 FB60     		str	r3, [r7, #12]
 1928 0114 3B6B     		ldr	r3, [r7, #48]
 1929 0116 7C6B     		ldr	r4, [r7, #52]
 1930 0118 B968     		ldr	r1, [r7, #8]
 1931 011a FA68     		ldr	r2, [r7, #12]
 1932 011c 5B18     		add	r3, r3, r1
 1933 011e 5441     		adc	r4, r4, r2
 1934 0120 3B63     		str	r3, [r7, #48]
 1935 0122 7C63     		str	r4, [r7, #52]
1311:.\Generated_Source\PSoC4/RTC.c **** 
1312:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current minute. */
1313:.\Generated_Source\PSoC4/RTC.c ****     unixTime += RTC_GetMinutes(inputTime) * RTC_SECONDS_PER_MINUTE;
 1936              		.loc 2 1313 0
 1937 0124 3B6A     		ldr	r3, [r7, #32]
 1938 0126 181C     		mov	r0, r3
 1939 0128 FFF7FEFF 		bl	RTC_GetMinutes
 1940 012c 021C     		mov	r2, r0
 1941 012e 131C     		mov	r3, r2
 1942 0130 1B01     		lsl	r3, r3, #4
 1943 0132 9B1A     		sub	r3, r3, r2
 1944 0134 9B00     		lsl	r3, r3, #2
 1945 0136 3B60     		str	r3, [r7]
 1946 0138 0023     		mov	r3, #0
 1947 013a 7B60     		str	r3, [r7, #4]
 1948 013c 3B6B     		ldr	r3, [r7, #48]
 1949 013e 7C6B     		ldr	r4, [r7, #52]
 1950 0140 3968     		ldr	r1, [r7]
 1951 0142 7A68     		ldr	r2, [r7, #4]
 1952 0144 5B18     		add	r3, r3, r1
 1953 0146 5441     		adc	r4, r4, r2
 1954 0148 3B63     		str	r3, [r7, #48]
 1955 014a 7C63     		str	r4, [r7, #52]
1314:.\Generated_Source\PSoC4/RTC.c **** 
1315:.\Generated_Source\PSoC4/RTC.c ****     /* Add remaining seconds of current minute. */
1316:.\Generated_Source\PSoC4/RTC.c ****     unixTime += RTC_GetSecond(inputTime);
 1956              		.loc 2 1316 0
 1957 014c 3B6A     		ldr	r3, [r7, #32]
 1958 014e 181C     		mov	r0, r3
 1959 0150 FFF7FEFF 		bl	RTC_GetSecond
 1960 0154 031C     		mov	r3, r0
 1961 0156 1D1C     		mov	r5, r3
 1962 0158 0023     		mov	r3, #0
 1963 015a 1E1C     		mov	r6, r3
 1964 015c 3B6B     		ldr	r3, [r7, #48]
 1965 015e 7C6B     		ldr	r4, [r7, #52]
 1966 0160 5B19     		add	r3, r3, r5
 1967 0162 7441     		adc	r4, r4, r6
 1968 0164 3B63     		str	r3, [r7, #48]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 80


 1969 0166 7C63     		str	r4, [r7, #52]
1317:.\Generated_Source\PSoC4/RTC.c **** 
1318:.\Generated_Source\PSoC4/RTC.c ****     return(unixTime);
 1970              		.loc 2 1318 0
 1971 0168 3B6B     		ldr	r3, [r7, #48]
 1972 016a 7C6B     		ldr	r4, [r7, #52]
1319:.\Generated_Source\PSoC4/RTC.c **** }
 1973              		.loc 2 1319 0
 1974 016c 181C     		mov	r0, r3
 1975 016e 211C     		mov	r1, r4
 1976 0170 BD46     		mov	sp, r7
 1977 0172 11B0     		add	sp, sp, #68
 1978              		@ sp needed
 1979 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 1980              	.L105:
 1981 0176 C046     		.align	2
 1982              	.L104:
 1983 0178 B2070000 		.word	1970
 1984 017c 0085E201 		.word	31622400
 1985 0180 8033E101 		.word	31536000
 1986 0184 00000000 		.word	RTC_daysBeforeMonthTbl
 1987 0188 80510100 		.word	86400
 1988 018c 80AEFEFF 		.word	-86400
 1989              		.cfi_endproc
 1990              	.LFE44:
 1991              		.size	RTC_DateTimeToUnix, .-RTC_DateTimeToUnix
 1992              		.global	__aeabi_uldivmod
 1993              		.section	.text.RTC_UnixToDateTime,"ax",%progbits
 1994              		.align	2
 1995              		.global	RTC_UnixToDateTime
 1996              		.code	16
 1997              		.thumb_func
 1998              		.type	RTC_UnixToDateTime, %function
 1999              	RTC_UnixToDateTime:
 2000              	.LFB45:
1320:.\Generated_Source\PSoC4/RTC.c **** 
1321:.\Generated_Source\PSoC4/RTC.c **** 
1322:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1323:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_UnixToDateTime
1324:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1325:.\Generated_Source\PSoC4/RTC.c **** *
1326:.\Generated_Source\PSoC4/RTC.c **** * \brief
1327:.\Generated_Source\PSoC4/RTC.c **** *  This is an internal function to convert the date and time from
1328:.\Generated_Source\PSoC4/RTC.c **** *  the UNIX time format into the regular time format.
1329:.\Generated_Source\PSoC4/RTC.c **** *
1330:.\Generated_Source\PSoC4/RTC.c **** * \param dayOfWeek A day of a week <br>
1331:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SUNDAY <br>
1332:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_MONDAY <br>
1333:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_TUESDAY <br>
1334:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_WEDNESDAY <br>
1335:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_THURSDAY <br>
1336:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FRIDAY <br>
1337:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SATURDAY <br>
1338:.\Generated_Source\PSoC4/RTC.c **** *
1339:.\Generated_Source\PSoC4/RTC.c **** * \param weekOfMonth A week of a month <br>
1340:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FIRST <br>
1341:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SECOND <br>
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 81


1342:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_THIRD <br>
1343:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FOURTH <br>
1344:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_LAST <br>
1345:.\Generated_Source\PSoC4/RTC.c **** *
1346:.\Generated_Source\PSoC4/RTC.c **** * \param month A month of a year <br>
1347:.\Generated_Source\PSoC4/RTC.c **** *                   RTC_JANUARY <br>
1348:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_FEBRUARY <br>
1349:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_MARCH <br>
1350:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_APRIL <br>
1351:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_MAY <br>
1352:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_JUNE <br>
1353:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_JULY <br>
1354:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_AUGUST <br>
1355:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_SEPTEMBER <br>
1356:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_OCTOBER <br>
1357:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_NOVEMBER <br>
1358:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_DECEMBER <br>
1359:.\Generated_Source\PSoC4/RTC.c **** *
1360:.\Generated_Source\PSoC4/RTC.c **** * \param year A year value.
1361:.\Generated_Source\PSoC4/RTC.c **** *
1362:.\Generated_Source\PSoC4/RTC.c **** * \return A date in the "date format".
1363:.\Generated_Source\PSoC4/RTC.c **** *
1364:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/RTC.c **** void RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat)
1366:.\Generated_Source\PSoC4/RTC.c **** {
 2001              		.loc 2 1366 0
 2002              		.cfi_startproc
 2003 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2004              		.cfi_def_cfa_offset 20
 2005              		.cfi_offset 4, -20
 2006              		.cfi_offset 5, -16
 2007              		.cfi_offset 6, -12
 2008              		.cfi_offset 7, -8
 2009              		.cfi_offset 14, -4
 2010 0002 A1B0     		sub	sp, sp, #132
 2011              		.cfi_def_cfa_offset 152
 2012 0004 02AF     		add	r7, sp, #8
 2013              		.cfi_def_cfa 7, 144
 2014 0006 7865     		str	r0, [r7, #84]
 2015 0008 BA64     		str	r2, [r7, #72]
 2016 000a FB64     		str	r3, [r7, #76]
1367:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpMinute;
1368:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpHour;
1369:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpAmPmState;
1370:.\Generated_Source\PSoC4/RTC.c **** 
1371:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
1372:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1373:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1374:.\Generated_Source\PSoC4/RTC.c **** 
1375:.\Generated_Source\PSoC4/RTC.c ****     uint32 tmpVar;
1376:.\Generated_Source\PSoC4/RTC.c **** 
1377:.\Generated_Source\PSoC4/RTC.c ****     tmpAmPmState = 0u;
 2017              		.loc 2 1377 0
 2018 000c 0023     		mov	r3, #0
 2019 000e 3B67     		str	r3, [r7, #112]
1378:.\Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_YEAR_0;
 2020              		.loc 2 1378 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 82


 2021 0010 A14B     		ldr	r3, .L136
 2022 0012 BB66     		str	r3, [r7, #104]
1379:.\Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
 2023              		.loc 2 1379 0
 2024 0014 A14B     		ldr	r3, .L136+4
 2025 0016 7B66     		str	r3, [r7, #100]
1380:.\Generated_Source\PSoC4/RTC.c **** 
1381:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current year value. Variable tmpYear
1382:.\Generated_Source\PSoC4/RTC.c ****     *  increments while it contains value greater than number
1383:.\Generated_Source\PSoC4/RTC.c ****     *  of seconds in current year.
1384:.\Generated_Source\PSoC4/RTC.c ****     */
1385:.\Generated_Source\PSoC4/RTC.c ****     while(unixTime > tmpVar)
 2026              		.loc 2 1385 0
 2027 0018 19E0     		b	.L107
 2028              	.L109:
1386:.\Generated_Source\PSoC4/RTC.c ****     {
1387:.\Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2029              		.loc 2 1387 0
 2030 001a 7B6E     		ldr	r3, [r7, #100]
 2031 001c BB60     		str	r3, [r7, #8]
 2032 001e 0023     		mov	r3, #0
 2033 0020 FB60     		str	r3, [r7, #12]
 2034 0022 BB6C     		ldr	r3, [r7, #72]
 2035 0024 FC6C     		ldr	r4, [r7, #76]
 2036 0026 B968     		ldr	r1, [r7, #8]
 2037 0028 FA68     		ldr	r2, [r7, #12]
 2038 002a 5B1A     		sub	r3, r3, r1
 2039 002c 9441     		sbc	r4, r4, r2
 2040 002e BB64     		str	r3, [r7, #72]
 2041 0030 FC64     		str	r4, [r7, #76]
1388:.\Generated_Source\PSoC4/RTC.c ****         tmpYear++;
 2042              		.loc 2 1388 0
 2043 0032 BB6E     		ldr	r3, [r7, #104]
 2044 0034 0133     		add	r3, r3, #1
 2045 0036 BB66     		str	r3, [r7, #104]
1389:.\Generated_Source\PSoC4/RTC.c **** 
1390:.\Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(tmpYear))
 2046              		.loc 2 1390 0
 2047 0038 BB6E     		ldr	r3, [r7, #104]
 2048 003a 181C     		mov	r0, r3
 2049 003c FFF7FEFF 		bl	RTC_LeapYear
 2050 0040 031E     		sub	r3, r0, #0
 2051 0042 02D0     		beq	.L108
1391:.\Generated_Source\PSoC4/RTC.c ****         {
1392:.\Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_LEAP_YEAR;
 2052              		.loc 2 1392 0
 2053 0044 964B     		ldr	r3, .L136+8
 2054 0046 7B66     		str	r3, [r7, #100]
 2055 0048 01E0     		b	.L107
 2056              	.L108:
1393:.\Generated_Source\PSoC4/RTC.c ****         }
1394:.\Generated_Source\PSoC4/RTC.c ****         else
1395:.\Generated_Source\PSoC4/RTC.c ****         {
1396:.\Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
 2057              		.loc 2 1396 0
 2058 004a 944B     		ldr	r3, .L136+4
 2059 004c 7B66     		str	r3, [r7, #100]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 83


 2060              	.L107:
1385:.\Generated_Source\PSoC4/RTC.c ****     {
 2061              		.loc 2 1385 0
 2062 004e 7B6E     		ldr	r3, [r7, #100]
 2063 0050 1D1C     		mov	r5, r3
 2064 0052 0023     		mov	r3, #0
 2065 0054 1E1C     		mov	r6, r3
 2066 0056 FB6C     		ldr	r3, [r7, #76]
 2067 0058 B342     		cmp	r3, r6
 2068 005a DED8     		bhi	.L109
 2069 005c FB6C     		ldr	r3, [r7, #76]
 2070 005e B342     		cmp	r3, r6
 2071 0060 02D1     		bne	.L130
 2072 0062 BB6C     		ldr	r3, [r7, #72]
 2073 0064 AB42     		cmp	r3, r5
 2074 0066 D8D8     		bhi	.L109
 2075              	.L130:
1397:.\Generated_Source\PSoC4/RTC.c ****         }
1398:.\Generated_Source\PSoC4/RTC.c **** 
1399:.\Generated_Source\PSoC4/RTC.c ****     }
1400:.\Generated_Source\PSoC4/RTC.c **** 
1401:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current month value. tmpMonth variable increments
1402:.\Generated_Source\PSoC4/RTC.c ****      * while unixTime variable value is greater than time
1403:.\Generated_Source\PSoC4/RTC.c ****      * interval from beginning of current year to beginning of
1404:.\Generated_Source\PSoC4/RTC.c ****      * current month
1405:.\Generated_Source\PSoC4/RTC.c ****     */
1406:.\Generated_Source\PSoC4/RTC.c ****     tmpMonth = (uint32)RTC_JANUARY;
 2076              		.loc 2 1406 0
 2077 0068 0123     		mov	r3, #1
 2078 006a FB66     		str	r3, [r7, #108]
1407:.\Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2079              		.loc 2 1407 0
 2080 006c FA6E     		ldr	r2, [r7, #108]
 2081 006e BB6E     		ldr	r3, [r7, #104]
 2082 0070 101C     		mov	r0, r2
 2083 0072 191C     		mov	r1, r3
 2084 0074 FFF7FEFF 		bl	RTC_DaysInMonth
 2085 0078 021C     		mov	r2, r0
 2086 007a 8A4B     		ldr	r3, .L136+12
 2087 007c 5343     		mul	r3, r2
 2088 007e 7B66     		str	r3, [r7, #100]
1408:.\Generated_Source\PSoC4/RTC.c **** 
1409:.\Generated_Source\PSoC4/RTC.c ****     while(unixTime >= tmpVar)
 2089              		.loc 2 1409 0
 2090 0080 18E0     		b	.L111
 2091              	.L112:
1410:.\Generated_Source\PSoC4/RTC.c ****     {
1411:.\Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2092              		.loc 2 1411 0
 2093 0082 7B6E     		ldr	r3, [r7, #100]
 2094 0084 3B60     		str	r3, [r7]
 2095 0086 0023     		mov	r3, #0
 2096 0088 7B60     		str	r3, [r7, #4]
 2097 008a BB6C     		ldr	r3, [r7, #72]
 2098 008c FC6C     		ldr	r4, [r7, #76]
 2099 008e 3968     		ldr	r1, [r7]
 2100 0090 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 84


 2101 0092 5B1A     		sub	r3, r3, r1
 2102 0094 9441     		sbc	r4, r4, r2
 2103 0096 BB64     		str	r3, [r7, #72]
 2104 0098 FC64     		str	r4, [r7, #76]
1412:.\Generated_Source\PSoC4/RTC.c ****         tmpMonth++;
 2105              		.loc 2 1412 0
 2106 009a FB6E     		ldr	r3, [r7, #108]
 2107 009c 0133     		add	r3, r3, #1
 2108 009e FB66     		str	r3, [r7, #108]
1413:.\Generated_Source\PSoC4/RTC.c ****         tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2109              		.loc 2 1413 0
 2110 00a0 FA6E     		ldr	r2, [r7, #108]
 2111 00a2 BB6E     		ldr	r3, [r7, #104]
 2112 00a4 101C     		mov	r0, r2
 2113 00a6 191C     		mov	r1, r3
 2114 00a8 FFF7FEFF 		bl	RTC_DaysInMonth
 2115 00ac 021C     		mov	r2, r0
 2116 00ae 7D4B     		ldr	r3, .L136+12
 2117 00b0 5343     		mul	r3, r2
 2118 00b2 7B66     		str	r3, [r7, #100]
 2119              	.L111:
1409:.\Generated_Source\PSoC4/RTC.c ****     {
 2120              		.loc 2 1409 0
 2121 00b4 7B6E     		ldr	r3, [r7, #100]
 2122 00b6 3B64     		str	r3, [r7, #64]
 2123 00b8 0023     		mov	r3, #0
 2124 00ba 7B64     		str	r3, [r7, #68]
 2125 00bc FB6C     		ldr	r3, [r7, #76]
 2126 00be 7A6C     		ldr	r2, [r7, #68]
 2127 00c0 9342     		cmp	r3, r2
 2128 00c2 07D3     		bcc	.L131
 2129 00c4 FB6C     		ldr	r3, [r7, #76]
 2130 00c6 7A6C     		ldr	r2, [r7, #68]
 2131 00c8 9342     		cmp	r3, r2
 2132 00ca DAD1     		bne	.L112
 2133 00cc BB6C     		ldr	r3, [r7, #72]
 2134 00ce 3A6C     		ldr	r2, [r7, #64]
 2135 00d0 9342     		cmp	r3, r2
 2136 00d2 D6D2     		bcs	.L112
 2137              	.L131:
1414:.\Generated_Source\PSoC4/RTC.c ****     }
1415:.\Generated_Source\PSoC4/RTC.c **** 
1416:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current day value. */
1417:.\Generated_Source\PSoC4/RTC.c ****     tmpDay = (unixTime / RTC_SECONDS_PER_DAY);
 2138              		.loc 2 1417 0
 2139 00d4 BB6C     		ldr	r3, [r7, #72]
 2140 00d6 FC6C     		ldr	r4, [r7, #76]
 2141 00d8 181C     		mov	r0, r3
 2142 00da 211C     		mov	r1, r4
 2143 00dc 714A     		ldr	r2, .L136+12
 2144 00de 0023     		mov	r3, #0
 2145 00e0 FFF7FEFF 		bl	__aeabi_uldivmod
 2146 00e4 031C     		mov	r3, r0
 2147 00e6 0C1C     		mov	r4, r1
 2148 00e8 3B66     		str	r3, [r7, #96]
1418:.\Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpDay * RTC_SECONDS_PER_DAY;
 2149              		.loc 2 1418 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 85


 2150 00ea 3A6E     		ldr	r2, [r7, #96]
 2151 00ec 6D4B     		ldr	r3, .L136+12
 2152 00ee 5343     		mul	r3, r2
 2153 00f0 7B66     		str	r3, [r7, #100]
1419:.\Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2154              		.loc 2 1419 0
 2155 00f2 7B6E     		ldr	r3, [r7, #100]
 2156 00f4 BB63     		str	r3, [r7, #56]
 2157 00f6 0023     		mov	r3, #0
 2158 00f8 FB63     		str	r3, [r7, #60]
 2159 00fa FB6C     		ldr	r3, [r7, #76]
 2160 00fc FA6B     		ldr	r2, [r7, #60]
 2161 00fe 9342     		cmp	r3, r2
 2162 0100 0CD3     		bcc	.L114
 2163 0102 FB6C     		ldr	r3, [r7, #76]
 2164 0104 FA6B     		ldr	r2, [r7, #60]
 2165 0106 9342     		cmp	r3, r2
 2166 0108 03D1     		bne	.L132
 2167 010a BB6C     		ldr	r3, [r7, #72]
 2168 010c BA6B     		ldr	r2, [r7, #56]
 2169 010e 9342     		cmp	r3, r2
 2170 0110 04D3     		bcc	.L114
 2171              	.L132:
 2172              		.loc 2 1419 0 is_stmt 0 discriminator 1
 2173 0112 7B6E     		ldr	r3, [r7, #100]
 2174 0114 3B62     		str	r3, [r7, #32]
 2175 0116 0023     		mov	r3, #0
 2176 0118 7B62     		str	r3, [r7, #36]
 2177 011a 03E0     		b	.L116
 2178              	.L114:
 2179              		.loc 2 1419 0 discriminator 2
 2180 011c 0023     		mov	r3, #0
 2181 011e 0024     		mov	r4, #0
 2182 0120 3B62     		str	r3, [r7, #32]
 2183 0122 7C62     		str	r4, [r7, #36]
 2184              	.L116:
 2185              		.loc 2 1419 0 discriminator 4
 2186 0124 BB6C     		ldr	r3, [r7, #72]
 2187 0126 FC6C     		ldr	r4, [r7, #76]
 2188 0128 396A     		ldr	r1, [r7, #32]
 2189 012a 7A6A     		ldr	r2, [r7, #36]
 2190 012c 5B1A     		sub	r3, r3, r1
 2191 012e 9441     		sbc	r4, r4, r2
 2192 0130 BB64     		str	r3, [r7, #72]
 2193 0132 FC64     		str	r4, [r7, #76]
1420:.\Generated_Source\PSoC4/RTC.c ****     tmpDay += 1u;
 2194              		.loc 2 1420 0 is_stmt 1 discriminator 4
 2195 0134 3B6E     		ldr	r3, [r7, #96]
 2196 0136 0133     		add	r3, r3, #1
 2197 0138 3B66     		str	r3, [r7, #96]
1421:.\Generated_Source\PSoC4/RTC.c **** 
1422:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current hour value. If function works in 12-Hour mode,
1423:.\Generated_Source\PSoC4/RTC.c ****      * it converts time to 12-Hours mode and calculates AmPm status */
1424:.\Generated_Source\PSoC4/RTC.c ****     tmpHour = unixTime / RTC_SECONDS_PER_HOUR;
 2198              		.loc 2 1424 0 discriminator 4
 2199 013a BB6C     		ldr	r3, [r7, #72]
 2200 013c FC6C     		ldr	r4, [r7, #76]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 86


 2201 013e 181C     		mov	r0, r3
 2202 0140 211C     		mov	r1, r4
 2203 0142 E122     		mov	r2, #225
 2204 0144 1201     		lsl	r2, r2, #4
 2205 0146 0023     		mov	r3, #0
 2206 0148 FFF7FEFF 		bl	__aeabi_uldivmod
 2207 014c 031C     		mov	r3, r0
 2208 014e 0C1C     		mov	r4, r1
 2209 0150 7B67     		str	r3, [r7, #116]
1425:.\Generated_Source\PSoC4/RTC.c ****     tmpVar  = tmpHour * RTC_SECONDS_PER_HOUR;
 2210              		.loc 2 1425 0 discriminator 4
 2211 0152 7B6F     		ldr	r3, [r7, #116]
 2212 0154 E122     		mov	r2, #225
 2213 0156 1201     		lsl	r2, r2, #4
 2214 0158 5343     		mul	r3, r2
 2215 015a 7B66     		str	r3, [r7, #100]
1426:.\Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_24_HOURS_FORMAT != timeFormat)
 2216              		.loc 2 1426 0 discriminator 4
 2217 015c 9023     		mov	r3, #144
 2218 015e FB18     		add	r3, r7, r3
 2219 0160 1B68     		ldr	r3, [r3]
 2220 0162 002B     		cmp	r3, #0
 2221 0164 1DD0     		beq	.L117
1427:.\Generated_Source\PSoC4/RTC.c ****     {
1428:.\Generated_Source\PSoC4/RTC.c ****         if(unixTime > RTC_UNIX_TIME_PM)
 2222              		.loc 2 1428 0
 2223 0166 FB6C     		ldr	r3, [r7, #76]
 2224 0168 002B     		cmp	r3, #0
 2225 016a 06D1     		bne	.L133
 2226 016c FB6C     		ldr	r3, [r7, #76]
 2227 016e 002B     		cmp	r3, #0
 2228 0170 0ED1     		bne	.L118
 2229 0172 BB6C     		ldr	r3, [r7, #72]
 2230 0174 4C4A     		ldr	r2, .L136+16
 2231 0176 9342     		cmp	r3, r2
 2232 0178 0AD9     		bls	.L118
 2233              	.L133:
1429:.\Generated_Source\PSoC4/RTC.c ****         {
1430:.\Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_PM;
 2234              		.loc 2 1430 0
 2235 017a 0123     		mov	r3, #1
 2236 017c 3B67     		str	r3, [r7, #112]
1431:.\Generated_Source\PSoC4/RTC.c ****             tmpHour = (tmpHour > 12u) ? (tmpHour - 12u) : tmpHour;
 2237              		.loc 2 1431 0
 2238 017e 7B6F     		ldr	r3, [r7, #116]
 2239 0180 0C2B     		cmp	r3, #12
 2240 0182 02D9     		bls	.L120
 2241              		.loc 2 1431 0 is_stmt 0 discriminator 1
 2242 0184 7B6F     		ldr	r3, [r7, #116]
 2243 0186 0C3B     		sub	r3, r3, #12
 2244 0188 00E0     		b	.L121
 2245              	.L120:
 2246              		.loc 2 1431 0 discriminator 2
 2247 018a 7B6F     		ldr	r3, [r7, #116]
 2248              	.L121:
 2249              		.loc 2 1431 0 discriminator 4
 2250 018c 7B67     		str	r3, [r7, #116]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 87


 2251 018e 08E0     		b	.L117
 2252              	.L118:
1432:.\Generated_Source\PSoC4/RTC.c ****         }
1433:.\Generated_Source\PSoC4/RTC.c ****         else
1434:.\Generated_Source\PSoC4/RTC.c ****         {
1435:.\Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_AM;
 2253              		.loc 2 1435 0 is_stmt 1
 2254 0190 0023     		mov	r3, #0
 2255 0192 3B67     		str	r3, [r7, #112]
1436:.\Generated_Source\PSoC4/RTC.c ****             tmpHour = (0u != tmpHour) ? tmpHour : 12u;
 2256              		.loc 2 1436 0
 2257 0194 7B6F     		ldr	r3, [r7, #116]
 2258 0196 002B     		cmp	r3, #0
 2259 0198 01D0     		beq	.L122
 2260              		.loc 2 1436 0 is_stmt 0 discriminator 1
 2261 019a 7B6F     		ldr	r3, [r7, #116]
 2262 019c 00E0     		b	.L123
 2263              	.L122:
 2264              		.loc 2 1436 0 discriminator 2
 2265 019e 0C23     		mov	r3, #12
 2266              	.L123:
 2267              		.loc 2 1436 0 discriminator 4
 2268 01a0 7B67     		str	r3, [r7, #116]
 2269              	.L117:
1437:.\Generated_Source\PSoC4/RTC.c ****         }
1438:.\Generated_Source\PSoC4/RTC.c ****     }
1439:.\Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2270              		.loc 2 1439 0 is_stmt 1
 2271 01a2 7B6E     		ldr	r3, [r7, #100]
 2272 01a4 3B63     		str	r3, [r7, #48]
 2273 01a6 0023     		mov	r3, #0
 2274 01a8 7B63     		str	r3, [r7, #52]
 2275 01aa FB6C     		ldr	r3, [r7, #76]
 2276 01ac 7A6B     		ldr	r2, [r7, #52]
 2277 01ae 9342     		cmp	r3, r2
 2278 01b0 0CD3     		bcc	.L124
 2279 01b2 FB6C     		ldr	r3, [r7, #76]
 2280 01b4 7A6B     		ldr	r2, [r7, #52]
 2281 01b6 9342     		cmp	r3, r2
 2282 01b8 03D1     		bne	.L134
 2283 01ba BB6C     		ldr	r3, [r7, #72]
 2284 01bc 3A6B     		ldr	r2, [r7, #48]
 2285 01be 9342     		cmp	r3, r2
 2286 01c0 04D3     		bcc	.L124
 2287              	.L134:
 2288              		.loc 2 1439 0 is_stmt 0 discriminator 1
 2289 01c2 7B6E     		ldr	r3, [r7, #100]
 2290 01c4 BB61     		str	r3, [r7, #24]
 2291 01c6 0023     		mov	r3, #0
 2292 01c8 FB61     		str	r3, [r7, #28]
 2293 01ca 03E0     		b	.L126
 2294              	.L124:
 2295              		.loc 2 1439 0 discriminator 2
 2296 01cc 0023     		mov	r3, #0
 2297 01ce 0024     		mov	r4, #0
 2298 01d0 BB61     		str	r3, [r7, #24]
 2299 01d2 FC61     		str	r4, [r7, #28]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 88


 2300              	.L126:
 2301              		.loc 2 1439 0 discriminator 4
 2302 01d4 BB6C     		ldr	r3, [r7, #72]
 2303 01d6 FC6C     		ldr	r4, [r7, #76]
 2304 01d8 B969     		ldr	r1, [r7, #24]
 2305 01da FA69     		ldr	r2, [r7, #28]
 2306 01dc 5B1A     		sub	r3, r3, r1
 2307 01de 9441     		sbc	r4, r4, r2
 2308 01e0 BB64     		str	r3, [r7, #72]
 2309 01e2 FC64     		str	r4, [r7, #76]
1440:.\Generated_Source\PSoC4/RTC.c **** 
1441:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current minute.  */
1442:.\Generated_Source\PSoC4/RTC.c ****     tmpMinute = unixTime / RTC_SECONDS_PER_MINUTE;
 2310              		.loc 2 1442 0 is_stmt 1 discriminator 4
 2311 01e4 BB6C     		ldr	r3, [r7, #72]
 2312 01e6 FC6C     		ldr	r4, [r7, #76]
 2313 01e8 181C     		mov	r0, r3
 2314 01ea 211C     		mov	r1, r4
 2315 01ec 3C22     		mov	r2, #60
 2316 01ee 0023     		mov	r3, #0
 2317 01f0 FFF7FEFF 		bl	__aeabi_uldivmod
 2318 01f4 031C     		mov	r3, r0
 2319 01f6 0C1C     		mov	r4, r1
 2320 01f8 FB65     		str	r3, [r7, #92]
1443:.\Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpMinute * RTC_SECONDS_PER_MINUTE;
 2321              		.loc 2 1443 0 discriminator 4
 2322 01fa FA6D     		ldr	r2, [r7, #92]
 2323 01fc 131C     		mov	r3, r2
 2324 01fe 1B01     		lsl	r3, r3, #4
 2325 0200 9B1A     		sub	r3, r3, r2
 2326 0202 9B00     		lsl	r3, r3, #2
 2327 0204 7B66     		str	r3, [r7, #100]
1444:.\Generated_Source\PSoC4/RTC.c **** 
1445:.\Generated_Source\PSoC4/RTC.c ****     /* Calculates current second. */
1446:.\Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2328              		.loc 2 1446 0 discriminator 4
 2329 0206 7B6E     		ldr	r3, [r7, #100]
 2330 0208 BB62     		str	r3, [r7, #40]
 2331 020a 0023     		mov	r3, #0
 2332 020c FB62     		str	r3, [r7, #44]
 2333 020e FB6C     		ldr	r3, [r7, #76]
 2334 0210 FA6A     		ldr	r2, [r7, #44]
 2335 0212 9342     		cmp	r3, r2
 2336 0214 0CD3     		bcc	.L127
 2337 0216 FB6C     		ldr	r3, [r7, #76]
 2338 0218 FA6A     		ldr	r2, [r7, #44]
 2339 021a 9342     		cmp	r3, r2
 2340 021c 03D1     		bne	.L135
 2341 021e BB6C     		ldr	r3, [r7, #72]
 2342 0220 BA6A     		ldr	r2, [r7, #40]
 2343 0222 9342     		cmp	r3, r2
 2344 0224 04D3     		bcc	.L127
 2345              	.L135:
 2346              		.loc 2 1446 0 is_stmt 0 discriminator 1
 2347 0226 7B6E     		ldr	r3, [r7, #100]
 2348 0228 3B61     		str	r3, [r7, #16]
 2349 022a 0023     		mov	r3, #0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 89


 2350 022c 7B61     		str	r3, [r7, #20]
 2351 022e 03E0     		b	.L129
 2352              	.L127:
 2353              		.loc 2 1446 0 discriminator 2
 2354 0230 0023     		mov	r3, #0
 2355 0232 0024     		mov	r4, #0
 2356 0234 3B61     		str	r3, [r7, #16]
 2357 0236 7C61     		str	r4, [r7, #20]
 2358              	.L129:
 2359              		.loc 2 1446 0 discriminator 4
 2360 0238 BB6C     		ldr	r3, [r7, #72]
 2361 023a FC6C     		ldr	r4, [r7, #76]
 2362 023c 3969     		ldr	r1, [r7, #16]
 2363 023e 7A69     		ldr	r2, [r7, #20]
 2364 0240 5B1A     		sub	r3, r3, r1
 2365 0242 9441     		sbc	r4, r4, r2
 2366 0244 BB64     		str	r3, [r7, #72]
 2367 0246 FC64     		str	r4, [r7, #76]
1447:.\Generated_Source\PSoC4/RTC.c **** 
1448:.\Generated_Source\PSoC4/RTC.c **** 
1449:.\Generated_Source\PSoC4/RTC.c ****     dateTime->date = RTC_ConstructDate(tmpMonth, tmpDay, tmpYear);
 2368              		.loc 2 1449 0 is_stmt 1 discriminator 4
 2369 0248 F96E     		ldr	r1, [r7, #108]
 2370 024a 3A6E     		ldr	r2, [r7, #96]
 2371 024c BB6E     		ldr	r3, [r7, #104]
 2372 024e 081C     		mov	r0, r1
 2373 0250 111C     		mov	r1, r2
 2374 0252 1A1C     		mov	r2, r3
 2375 0254 FFF7FEFF 		bl	RTC_ConstructDate
 2376 0258 021C     		mov	r2, r0
 2377 025a 7B6D     		ldr	r3, [r7, #84]
 2378 025c 5A60     		str	r2, [r3, #4]
1450:.\Generated_Source\PSoC4/RTC.c ****     dateTime->time = RTC_ConstructTime(timeFormat, tmpAmPmState, tmpHour, tmpMinute, unixTime);
 2379              		.loc 2 1450 0 discriminator 4
 2380 025e BB6C     		ldr	r3, [r7, #72]
 2381 0260 9022     		mov	r2, #144
 2382 0262 BA18     		add	r2, r7, r2
 2383 0264 1068     		ldr	r0, [r2]
 2384 0266 396F     		ldr	r1, [r7, #112]
 2385 0268 7A6F     		ldr	r2, [r7, #116]
 2386 026a FC6D     		ldr	r4, [r7, #92]
 2387 026c 0093     		str	r3, [sp]
 2388 026e 231C     		mov	r3, r4
 2389 0270 FFF7FEFF 		bl	RTC_ConstructTime
 2390 0274 021C     		mov	r2, r0
 2391 0276 7B6D     		ldr	r3, [r7, #84]
 2392 0278 1A60     		str	r2, [r3]
1451:.\Generated_Source\PSoC4/RTC.c ****     dateTime->dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 2393              		.loc 2 1451 0 discriminator 4
 2394 027a 396E     		ldr	r1, [r7, #96]
 2395 027c FA6E     		ldr	r2, [r7, #108]
 2396 027e BB6E     		ldr	r3, [r7, #104]
 2397 0280 081C     		mov	r0, r1
 2398 0282 111C     		mov	r1, r2
 2399 0284 1A1C     		mov	r2, r3
 2400 0286 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2401 028a 021C     		mov	r2, r0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 90


 2402 028c 7B6D     		ldr	r3, [r7, #84]
 2403 028e 9A60     		str	r2, [r3, #8]
1452:.\Generated_Source\PSoC4/RTC.c **** }
 2404              		.loc 2 1452 0 discriminator 4
 2405 0290 BD46     		mov	sp, r7
 2406 0292 1FB0     		add	sp, sp, #124
 2407              		@ sp needed
 2408 0294 F0BD     		pop	{r4, r5, r6, r7, pc}
 2409              	.L137:
 2410 0296 C046     		.align	2
 2411              	.L136:
 2412 0298 B2070000 		.word	1970
 2413 029c 8033E101 		.word	31536000
 2414 02a0 0085E201 		.word	31622400
 2415 02a4 80510100 		.word	86400
 2416 02a8 C1A80000 		.word	43201
 2417              		.cfi_endproc
 2418              	.LFE45:
 2419              		.size	RTC_UnixToDateTime, .-RTC_UnixToDateTime
 2420              		.section	.text.RTC_RelativeToFixed,"ax",%progbits
 2421              		.align	2
 2422              		.global	RTC_RelativeToFixed
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	RTC_RelativeToFixed, %function
 2426              	RTC_RelativeToFixed:
 2427              	.LFB46:
1453:.\Generated_Source\PSoC4/RTC.c **** 
1454:.\Generated_Source\PSoC4/RTC.c **** 
1455:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1456:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_RelativeToFixed
1457:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1458:.\Generated_Source\PSoC4/RTC.c **** *
1459:.\Generated_Source\PSoC4/RTC.c **** * \brief
1460:.\Generated_Source\PSoC4/RTC.c **** * This is an internal function to convert a relative date into
1461:.\Generated_Source\PSoC4/RTC.c **** * a fixed date.
1462:.\Generated_Source\PSoC4/RTC.c **** *
1463:.\Generated_Source\PSoC4/RTC.c **** * \param dayOfWeek A day of a week <br>
1464:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SUNDAY <br>
1465:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_MONDAY <br>
1466:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_TUESDAY <br>
1467:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_WEDNESDAY <br>
1468:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_THURSDAY <br>
1469:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FRIDAY <br>
1470:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SATURDAY <br>
1471:.\Generated_Source\PSoC4/RTC.c **** *
1472:.\Generated_Source\PSoC4/RTC.c **** *  \param weekOfMonth A week of a month <br>
1473:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FIRST <br>
1474:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_SECOND <br>
1475:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_THIRD <br>
1476:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FOURTH <br>
1477:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_FIFTH <br>
1478:.\Generated_Source\PSoC4/RTC.c **** *                 RTC_LAST <br>
1479:.\Generated_Source\PSoC4/RTC.c **** *
1480:.\Generated_Source\PSoC4/RTC.c **** * \param month A month of a year <br>
1481:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_JANUARY <br>
1482:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_FEBRUARY <br>
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 91


1483:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_MARCH <br>
1484:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_APRIL <br>
1485:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_MAY <br>
1486:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_JUNE <br>
1487:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_JULY <br>
1488:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_AUGUST <br>
1489:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_SEPTEMBER <br>
1490:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_OCTOBER <br>
1491:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_NOVEMBER <br>
1492:.\Generated_Source\PSoC4/RTC.c **** *                  RTC_DECEMBER <br>
1493:.\Generated_Source\PSoC4/RTC.c **** *
1494:.\Generated_Source\PSoC4/RTC.c **** * \param year A year value.
1495:.\Generated_Source\PSoC4/RTC.c **** *
1496:.\Generated_Source\PSoC4/RTC.c **** * \return A date in the "date format".
1497:.\Generated_Source\PSoC4/RTC.c **** *
1498:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1499:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year)
1500:.\Generated_Source\PSoC4/RTC.c **** {
 2428              		.loc 2 1500 0
 2429              		.cfi_startproc
 2430 0000 80B5     		push	{r7, lr}
 2431              		.cfi_def_cfa_offset 8
 2432              		.cfi_offset 7, -8
 2433              		.cfi_offset 14, -4
 2434 0002 8AB0     		sub	sp, sp, #40
 2435              		.cfi_def_cfa_offset 48
 2436 0004 00AF     		add	r7, sp, #0
 2437              		.cfi_def_cfa_register 7
 2438 0006 F860     		str	r0, [r7, #12]
 2439 0008 B960     		str	r1, [r7, #8]
 2440 000a 7A60     		str	r2, [r7, #4]
 2441 000c 3B60     		str	r3, [r7]
1501:.\Generated_Source\PSoC4/RTC.c ****     uint32 curDay;
1502:.\Generated_Source\PSoC4/RTC.c ****     uint32 curWeek;
1503:.\Generated_Source\PSoC4/RTC.c ****     uint32 daysInMonth;
1504:.\Generated_Source\PSoC4/RTC.c ****     uint32 dayOfMonthTmp;
1505:.\Generated_Source\PSoC4/RTC.c **** 
1506:.\Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1507:.\Generated_Source\PSoC4/RTC.c **** 
1508:.\Generated_Source\PSoC4/RTC.c ****     curDay      = 1u;
 2442              		.loc 2 1508 0
 2443 000e 0123     		mov	r3, #1
 2444 0010 7B62     		str	r3, [r7, #36]
1509:.\Generated_Source\PSoC4/RTC.c ****     curWeek     = (uint32)RTC_FIRST;
 2445              		.loc 2 1509 0
 2446 0012 0123     		mov	r3, #1
 2447 0014 3B62     		str	r3, [r7, #32]
1510:.\Generated_Source\PSoC4/RTC.c ****     daysInMonth = RTC_DaysInMonth(month, year);
 2448              		.loc 2 1510 0
 2449 0016 7A68     		ldr	r2, [r7, #4]
 2450 0018 3B68     		ldr	r3, [r7]
 2451 001a 101C     		mov	r0, r2
 2452 001c 191C     		mov	r1, r3
 2453 001e FFF7FEFF 		bl	RTC_DaysInMonth
 2454 0022 031C     		mov	r3, r0
 2455 0024 BB61     		str	r3, [r7, #24]
1511:.\Generated_Source\PSoC4/RTC.c ****     dayOfMonthTmp = curDay;
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 92


 2456              		.loc 2 1511 0
 2457 0026 7B6A     		ldr	r3, [r7, #36]
 2458 0028 FB61     		str	r3, [r7, #28]
1512:.\Generated_Source\PSoC4/RTC.c **** 
1513:.\Generated_Source\PSoC4/RTC.c ****     while((curWeek <= weekOfMonth) && (curDay <= daysInMonth))
 2459              		.loc 2 1513 0
 2460 002a 13E0     		b	.L139
 2461              	.L142:
1514:.\Generated_Source\PSoC4/RTC.c ****     {
1515:.\Generated_Source\PSoC4/RTC.c ****         if(dayOfWeek == RTC_GetDayOfWeek(curDay, month, year))
 2462              		.loc 2 1515 0
 2463 002c 796A     		ldr	r1, [r7, #36]
 2464 002e 7A68     		ldr	r2, [r7, #4]
 2465 0030 3B68     		ldr	r3, [r7]
 2466 0032 081C     		mov	r0, r1
 2467 0034 111C     		mov	r1, r2
 2468 0036 1A1C     		mov	r2, r3
 2469 0038 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2470 003c 021E     		sub	r2, r0, #0
 2471 003e FB68     		ldr	r3, [r7, #12]
 2472 0040 9A42     		cmp	r2, r3
 2473 0042 04D1     		bne	.L140
1516:.\Generated_Source\PSoC4/RTC.c ****         {
1517:.\Generated_Source\PSoC4/RTC.c ****             dayOfMonthTmp = curDay;
 2474              		.loc 2 1517 0
 2475 0044 7B6A     		ldr	r3, [r7, #36]
 2476 0046 FB61     		str	r3, [r7, #28]
1518:.\Generated_Source\PSoC4/RTC.c ****             curWeek++;
 2477              		.loc 2 1518 0
 2478 0048 3B6A     		ldr	r3, [r7, #32]
 2479 004a 0133     		add	r3, r3, #1
 2480 004c 3B62     		str	r3, [r7, #32]
 2481              	.L140:
1519:.\Generated_Source\PSoC4/RTC.c ****         }
1520:.\Generated_Source\PSoC4/RTC.c ****         curDay++;
 2482              		.loc 2 1520 0
 2483 004e 7B6A     		ldr	r3, [r7, #36]
 2484 0050 0133     		add	r3, r3, #1
 2485 0052 7B62     		str	r3, [r7, #36]
 2486              	.L139:
1513:.\Generated_Source\PSoC4/RTC.c ****     {
 2487              		.loc 2 1513 0
 2488 0054 3A6A     		ldr	r2, [r7, #32]
 2489 0056 BB68     		ldr	r3, [r7, #8]
 2490 0058 9A42     		cmp	r2, r3
 2491 005a 03D8     		bhi	.L141
1513:.\Generated_Source\PSoC4/RTC.c ****     {
 2492              		.loc 2 1513 0 is_stmt 0 discriminator 1
 2493 005c 7A6A     		ldr	r2, [r7, #36]
 2494 005e BB69     		ldr	r3, [r7, #24]
 2495 0060 9A42     		cmp	r2, r3
 2496 0062 E3D9     		bls	.L142
 2497              	.L141:
1521:.\Generated_Source\PSoC4/RTC.c ****     }
1522:.\Generated_Source\PSoC4/RTC.c **** 
1523:.\Generated_Source\PSoC4/RTC.c ****     retVal = RTC_ConstructDate(month, dayOfMonthTmp, year);
 2498              		.loc 2 1523 0 is_stmt 1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 93


 2499 0064 7968     		ldr	r1, [r7, #4]
 2500 0066 FA69     		ldr	r2, [r7, #28]
 2501 0068 3B68     		ldr	r3, [r7]
 2502 006a 081C     		mov	r0, r1
 2503 006c 111C     		mov	r1, r2
 2504 006e 1A1C     		mov	r2, r3
 2505 0070 FFF7FEFF 		bl	RTC_ConstructDate
 2506 0074 031C     		mov	r3, r0
 2507 0076 7B61     		str	r3, [r7, #20]
1524:.\Generated_Source\PSoC4/RTC.c **** 
1525:.\Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2508              		.loc 2 1525 0
 2509 0078 7B69     		ldr	r3, [r7, #20]
1526:.\Generated_Source\PSoC4/RTC.c **** }
 2510              		.loc 2 1526 0
 2511 007a 181C     		mov	r0, r3
 2512 007c BD46     		mov	sp, r7
 2513 007e 0AB0     		add	sp, sp, #40
 2514              		@ sp needed
 2515 0080 80BD     		pop	{r7, pc}
 2516              		.cfi_endproc
 2517              	.LFE46:
 2518              		.size	RTC_RelativeToFixed, .-RTC_RelativeToFixed
 2519 0082 C046     		.section	.text.RTC_DaysInMonth,"ax",%progbits
 2520              		.align	2
 2521              		.global	RTC_DaysInMonth
 2522              		.code	16
 2523              		.thumb_func
 2524              		.type	RTC_DaysInMonth, %function
 2525              	RTC_DaysInMonth:
 2526              	.LFB47:
1527:.\Generated_Source\PSoC4/RTC.c **** 
1528:.\Generated_Source\PSoC4/RTC.c **** 
1529:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1530:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DaysInMonth
1531:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1532:.\Generated_Source\PSoC4/RTC.c **** *
1533:.\Generated_Source\PSoC4/RTC.c **** * \brief
1534:.\Generated_Source\PSoC4/RTC.c **** *  Returns a number of days in a month passed through the parameters.
1535:.\Generated_Source\PSoC4/RTC.c **** *
1536:.\Generated_Source\PSoC4/RTC.c **** * \param
1537:.\Generated_Source\PSoC4/RTC.c **** *  month A month of a year
1538:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JANUARY
1539:.\Generated_Source\PSoC4/RTC.c **** *  RTC_FEBRUARY
1540:.\Generated_Source\PSoC4/RTC.c **** *  RTC_MARCH
1541:.\Generated_Source\PSoC4/RTC.c **** *  RTC_APRIL
1542:.\Generated_Source\PSoC4/RTC.c **** *  RTC_MAY
1543:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JUNE
1544:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JULY
1545:.\Generated_Source\PSoC4/RTC.c **** *  RTC_AUGUST
1546:.\Generated_Source\PSoC4/RTC.c **** *  RTC_SEPTEMBER
1547:.\Generated_Source\PSoC4/RTC.c **** *  RTC_OCTOBER
1548:.\Generated_Source\PSoC4/RTC.c **** *  RTC_NOVEMBER
1549:.\Generated_Source\PSoC4/RTC.c **** *  RTC_DECEMBER
1550:.\Generated_Source\PSoC4/RTC.c **** *
1551:.\Generated_Source\PSoC4/RTC.c **** * \param
1552:.\Generated_Source\PSoC4/RTC.c **** * year A year value.
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 94


1553:.\Generated_Source\PSoC4/RTC.c **** *
1554:.\Generated_Source\PSoC4/RTC.c **** * \return
1555:.\Generated_Source\PSoC4/RTC.c **** *  A number of days in a month in the year passed through the parameters.
1556:.\Generated_Source\PSoC4/RTC.c **** *
1557:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1558:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_DaysInMonth(uint32 month, uint32 year)
1559:.\Generated_Source\PSoC4/RTC.c **** {
 2527              		.loc 2 1559 0
 2528              		.cfi_startproc
 2529 0000 80B5     		push	{r7, lr}
 2530              		.cfi_def_cfa_offset 8
 2531              		.cfi_offset 7, -8
 2532              		.cfi_offset 14, -4
 2533 0002 84B0     		sub	sp, sp, #16
 2534              		.cfi_def_cfa_offset 24
 2535 0004 00AF     		add	r7, sp, #0
 2536              		.cfi_def_cfa_register 7
 2537 0006 7860     		str	r0, [r7, #4]
 2538 0008 3960     		str	r1, [r7]
1560:.\Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1561:.\Generated_Source\PSoC4/RTC.c **** 
1562:.\Generated_Source\PSoC4/RTC.c ****     retVal = RTC_daysInMonthTbl[month - 1u];
 2539              		.loc 2 1562 0
 2540 000a 7B68     		ldr	r3, [r7, #4]
 2541 000c 013B     		sub	r3, r3, #1
 2542 000e 0A4A     		ldr	r2, .L147
 2543 0010 D35C     		ldrb	r3, [r2, r3]
 2544 0012 FB60     		str	r3, [r7, #12]
1563:.\Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_FEBRUARY == month)
 2545              		.loc 2 1563 0
 2546 0014 7B68     		ldr	r3, [r7, #4]
 2547 0016 022B     		cmp	r3, #2
 2548 0018 08D1     		bne	.L145
1564:.\Generated_Source\PSoC4/RTC.c ****     {
1565:.\Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(year))
 2549              		.loc 2 1565 0
 2550 001a 3B68     		ldr	r3, [r7]
 2551 001c 181C     		mov	r0, r3
 2552 001e FFF7FEFF 		bl	RTC_LeapYear
 2553 0022 031E     		sub	r3, r0, #0
 2554 0024 02D0     		beq	.L145
1566:.\Generated_Source\PSoC4/RTC.c ****         {
1567:.\Generated_Source\PSoC4/RTC.c ****             retVal++;
 2555              		.loc 2 1567 0
 2556 0026 FB68     		ldr	r3, [r7, #12]
 2557 0028 0133     		add	r3, r3, #1
 2558 002a FB60     		str	r3, [r7, #12]
 2559              	.L145:
1568:.\Generated_Source\PSoC4/RTC.c ****         }
1569:.\Generated_Source\PSoC4/RTC.c ****     }
1570:.\Generated_Source\PSoC4/RTC.c **** 
1571:.\Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2560              		.loc 2 1571 0
 2561 002c FB68     		ldr	r3, [r7, #12]
1572:.\Generated_Source\PSoC4/RTC.c **** }
 2562              		.loc 2 1572 0
 2563 002e 181C     		mov	r0, r3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 95


 2564 0030 BD46     		mov	sp, r7
 2565 0032 04B0     		add	sp, sp, #16
 2566              		@ sp needed
 2567 0034 80BD     		pop	{r7, pc}
 2568              	.L148:
 2569 0036 C046     		.align	2
 2570              	.L147:
 2571 0038 00000000 		.word	RTC_daysInMonthTbl
 2572              		.cfi_endproc
 2573              	.LFE47:
 2574              		.size	RTC_DaysInMonth, .-RTC_DaysInMonth
 2575              		.section	.text.RTC_DaysBeforeMonth,"ax",%progbits
 2576              		.align	2
 2577              		.global	RTC_DaysBeforeMonth
 2578              		.code	16
 2579              		.thumb_func
 2580              		.type	RTC_DaysBeforeMonth, %function
 2581              	RTC_DaysBeforeMonth:
 2582              	.LFB48:
1573:.\Generated_Source\PSoC4/RTC.c **** 
1574:.\Generated_Source\PSoC4/RTC.c **** 
1575:.\Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1576:.\Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DaysBeforeMonth
1577:.\Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1578:.\Generated_Source\PSoC4/RTC.c **** *
1579:.\Generated_Source\PSoC4/RTC.c **** * \brief
1580:.\Generated_Source\PSoC4/RTC.c **** *  Calculates how many days elapsed from the beginning of the year to the
1581:.\Generated_Source\PSoC4/RTC.c **** *  beginning of the current month.
1582:.\Generated_Source\PSoC4/RTC.c **** *
1583:.\Generated_Source\PSoC4/RTC.c **** * \param
1584:.\Generated_Source\PSoC4/RTC.c **** *  month A month of a year
1585:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JANUARY
1586:.\Generated_Source\PSoC4/RTC.c **** *  RTC_FEBRUARY
1587:.\Generated_Source\PSoC4/RTC.c **** *  RTC_MARCH
1588:.\Generated_Source\PSoC4/RTC.c **** *  RTC_APRIL
1589:.\Generated_Source\PSoC4/RTC.c **** *  RTC_MAY
1590:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JUNE
1591:.\Generated_Source\PSoC4/RTC.c **** *  RTC_JULY
1592:.\Generated_Source\PSoC4/RTC.c **** *  RTC_AUGUST
1593:.\Generated_Source\PSoC4/RTC.c **** *  RTC_SEPTEMBER
1594:.\Generated_Source\PSoC4/RTC.c **** *  RTC_OCTOBER
1595:.\Generated_Source\PSoC4/RTC.c **** *  RTC_NOVEMBER
1596:.\Generated_Source\PSoC4/RTC.c **** *  RTC_DECEMBER
1597:.\Generated_Source\PSoC4/RTC.c **** *
1598:.\Generated_Source\PSoC4/RTC.c **** * \param
1599:.\Generated_Source\PSoC4/RTC.c **** * year A year value.
1600:.\Generated_Source\PSoC4/RTC.c **** *
1601:.\Generated_Source\PSoC4/RTC.c **** * \return
1602:.\Generated_Source\PSoC4/RTC.c **** *  A number of days elapsed from the beginning of the year to the
1603:.\Generated_Source\PSoC4/RTC.c **** *  beginning of the current month passed through the parameters.
1604:.\Generated_Source\PSoC4/RTC.c **** *
1605:.\Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1606:.\Generated_Source\PSoC4/RTC.c **** uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year)
1607:.\Generated_Source\PSoC4/RTC.c **** {
 2583              		.loc 2 1607 0
 2584              		.cfi_startproc
 2585 0000 80B5     		push	{r7, lr}
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 96


 2586              		.cfi_def_cfa_offset 8
 2587              		.cfi_offset 7, -8
 2588              		.cfi_offset 14, -4
 2589 0002 84B0     		sub	sp, sp, #16
 2590              		.cfi_def_cfa_offset 24
 2591 0004 00AF     		add	r7, sp, #0
 2592              		.cfi_def_cfa_register 7
 2593 0006 7860     		str	r0, [r7, #4]
 2594 0008 3960     		str	r1, [r7]
1608:.\Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1609:.\Generated_Source\PSoC4/RTC.c **** 
1610:.\Generated_Source\PSoC4/RTC.c ****     retVal = RTC_daysBeforeMonthTbl[month];
 2595              		.loc 2 1610 0
 2596 000a 0B4B     		ldr	r3, .L152
 2597 000c 7A68     		ldr	r2, [r7, #4]
 2598 000e 5200     		lsl	r2, r2, #1
 2599 0010 D35A     		ldrh	r3, [r2, r3]
 2600 0012 FB60     		str	r3, [r7, #12]
1611:.\Generated_Source\PSoC4/RTC.c ****     if((0u == RTC_LeapYear(year)) && (month > (uint32)RTC_FEBRUARY))
 2601              		.loc 2 1611 0
 2602 0014 3B68     		ldr	r3, [r7]
 2603 0016 181C     		mov	r0, r3
 2604 0018 FFF7FEFF 		bl	RTC_LeapYear
 2605 001c 031E     		sub	r3, r0, #0
 2606 001e 05D1     		bne	.L150
 2607              		.loc 2 1611 0 is_stmt 0 discriminator 1
 2608 0020 7B68     		ldr	r3, [r7, #4]
 2609 0022 022B     		cmp	r3, #2
 2610 0024 02D9     		bls	.L150
1612:.\Generated_Source\PSoC4/RTC.c ****     {
1613:.\Generated_Source\PSoC4/RTC.c ****         retVal++;
 2611              		.loc 2 1613 0 is_stmt 1
 2612 0026 FB68     		ldr	r3, [r7, #12]
 2613 0028 0133     		add	r3, r3, #1
 2614 002a FB60     		str	r3, [r7, #12]
 2615              	.L150:
1614:.\Generated_Source\PSoC4/RTC.c ****     }
1615:.\Generated_Source\PSoC4/RTC.c **** 
1616:.\Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2616              		.loc 2 1616 0
 2617 002c FB68     		ldr	r3, [r7, #12]
1617:.\Generated_Source\PSoC4/RTC.c **** }
 2618              		.loc 2 1617 0
 2619 002e 181C     		mov	r0, r3
 2620 0030 BD46     		mov	sp, r7
 2621 0032 04B0     		add	sp, sp, #16
 2622              		@ sp needed
 2623 0034 80BD     		pop	{r7, pc}
 2624              	.L153:
 2625 0036 C046     		.align	2
 2626              	.L152:
 2627 0038 00000000 		.word	RTC_daysBeforeMonthTbl
 2628              		.cfi_endproc
 2629              	.LFE48:
 2630              		.size	RTC_DaysBeforeMonth, .-RTC_DaysBeforeMonth
 2631              		.bss
 2632              		.align	2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 97


 2633              	RTC_currentTickNumber.5088:
 2634 000c 00000000 		.space	4
 2635              		.text
 2636              	.Letext0:
 2637              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 2638              		.section	.debug_info,"",%progbits
 2639              	.Ldebug_info0:
 2640 0000 480A0000 		.4byte	0xa48
 2641 0004 0400     		.2byte	0x4
 2642 0006 00000000 		.4byte	.Ldebug_abbrev0
 2643 000a 04       		.byte	0x4
 2644 000b 01       		.uleb128 0x1
 2645 000c D9040000 		.4byte	.LASF101
 2646 0010 01       		.byte	0x1
 2647 0011 39030000 		.4byte	.LASF102
 2648 0015 80050000 		.4byte	.LASF103
 2649 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2650 001d 00000000 		.4byte	0
 2651 0021 00000000 		.4byte	.Ldebug_line0
 2652 0025 02       		.uleb128 0x2
 2653 0026 01       		.byte	0x1
 2654 0027 06       		.byte	0x6
 2655 0028 3C010000 		.4byte	.LASF0
 2656 002c 02       		.uleb128 0x2
 2657 002d 01       		.byte	0x1
 2658 002e 08       		.byte	0x8
 2659 002f 8E030000 		.4byte	.LASF1
 2660 0033 02       		.uleb128 0x2
 2661 0034 02       		.byte	0x2
 2662 0035 05       		.byte	0x5
 2663 0036 D3030000 		.4byte	.LASF2
 2664 003a 02       		.uleb128 0x2
 2665 003b 02       		.byte	0x2
 2666 003c 07       		.byte	0x7
 2667 003d A9020000 		.4byte	.LASF3
 2668 0041 02       		.uleb128 0x2
 2669 0042 04       		.byte	0x4
 2670 0043 05       		.byte	0x5
 2671 0044 A2010000 		.4byte	.LASF4
 2672 0048 02       		.uleb128 0x2
 2673 0049 04       		.byte	0x4
 2674 004a 07       		.byte	0x7
 2675 004b 7C020000 		.4byte	.LASF5
 2676 004f 02       		.uleb128 0x2
 2677 0050 08       		.byte	0x8
 2678 0051 05       		.byte	0x5
 2679 0052 2E010000 		.4byte	.LASF6
 2680 0056 02       		.uleb128 0x2
 2681 0057 08       		.byte	0x8
 2682 0058 07       		.byte	0x7
 2683 0059 AD000000 		.4byte	.LASF7
 2684 005d 03       		.uleb128 0x3
 2685 005e 04       		.byte	0x4
 2686 005f 05       		.byte	0x5
 2687 0060 696E7400 		.ascii	"int\000"
 2688 0064 02       		.uleb128 0x2
 2689 0065 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 98


 2690 0066 07       		.byte	0x7
 2691 0067 48020000 		.4byte	.LASF8
 2692 006b 04       		.uleb128 0x4
 2693 006c CE010000 		.4byte	.LASF9
 2694 0070 03       		.byte	0x3
 2695 0071 9801     		.2byte	0x198
 2696 0073 2C000000 		.4byte	0x2c
 2697 0077 04       		.uleb128 0x4
 2698 0078 1D000000 		.4byte	.LASF10
 2699 007c 03       		.byte	0x3
 2700 007d 9901     		.2byte	0x199
 2701 007f 3A000000 		.4byte	0x3a
 2702 0083 04       		.uleb128 0x4
 2703 0084 03020000 		.4byte	.LASF11
 2704 0088 03       		.byte	0x3
 2705 0089 9A01     		.2byte	0x19a
 2706 008b 48000000 		.4byte	0x48
 2707 008f 02       		.uleb128 0x2
 2708 0090 04       		.byte	0x4
 2709 0091 04       		.byte	0x4
 2710 0092 5D030000 		.4byte	.LASF12
 2711 0096 02       		.uleb128 0x2
 2712 0097 08       		.byte	0x8
 2713 0098 04       		.byte	0x4
 2714 0099 EA010000 		.4byte	.LASF13
 2715 009d 04       		.uleb128 0x4
 2716 009e CC030000 		.4byte	.LASF14
 2717 00a2 03       		.byte	0x3
 2718 00a3 A401     		.2byte	0x1a4
 2719 00a5 56000000 		.4byte	0x56
 2720 00a9 02       		.uleb128 0x2
 2721 00aa 01       		.byte	0x1
 2722 00ab 08       		.byte	0x8
 2723 00ac 27040000 		.4byte	.LASF15
 2724 00b0 05       		.uleb128 0x5
 2725 00b1 83000000 		.4byte	0x83
 2726 00b5 02       		.uleb128 0x2
 2727 00b6 04       		.byte	0x4
 2728 00b7 07       		.byte	0x7
 2729 00b8 EC020000 		.4byte	.LASF16
 2730 00bc 06       		.uleb128 0x6
 2731 00bd 10       		.byte	0x10
 2732 00be 01       		.byte	0x1
 2733 00bf 29       		.byte	0x29
 2734 00c0 F5000000 		.4byte	0xf5
 2735 00c4 07       		.uleb128 0x7
 2736 00c5 34030000 		.4byte	.LASF17
 2737 00c9 01       		.byte	0x1
 2738 00ca 2B       		.byte	0x2b
 2739 00cb 83000000 		.4byte	0x83
 2740 00cf 00       		.byte	0
 2741 00d0 07       		.uleb128 0x7
 2742 00d1 BC020000 		.4byte	.LASF18
 2743 00d5 01       		.byte	0x1
 2744 00d6 2C       		.byte	0x2c
 2745 00d7 83000000 		.4byte	0x83
 2746 00db 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 99


 2747 00dc 07       		.uleb128 0x7
 2748 00dd D4020000 		.4byte	.LASF19
 2749 00e1 01       		.byte	0x1
 2750 00e2 2D       		.byte	0x2d
 2751 00e3 83000000 		.4byte	0x83
 2752 00e7 08       		.byte	0x8
 2753 00e8 07       		.uleb128 0x7
 2754 00e9 A4040000 		.4byte	.LASF20
 2755 00ed 01       		.byte	0x1
 2756 00ee 2E       		.byte	0x2e
 2757 00ef 83000000 		.4byte	0x83
 2758 00f3 0C       		.byte	0xc
 2759 00f4 00       		.byte	0
 2760 00f5 08       		.uleb128 0x8
 2761 00f6 0D040000 		.4byte	.LASF21
 2762 00fa 01       		.byte	0x1
 2763 00fb 2F       		.byte	0x2f
 2764 00fc BC000000 		.4byte	0xbc
 2765 0100 09       		.uleb128 0x9
 2766 0101 73050000 		.4byte	.LASF23
 2767 0105 01       		.byte	0x1
 2768 0106 BA01     		.2byte	0x1ba
 2769 0108 83000000 		.4byte	0x83
 2770 010c 00000000 		.4byte	.LFB2
 2771 0110 24000000 		.4byte	.LFE2-.LFB2
 2772 0114 01       		.uleb128 0x1
 2773 0115 9C       		.byte	0x9c
 2774 0116 39010000 		.4byte	0x139
 2775 011a 0A       		.uleb128 0xa
 2776 011b 76617200 		.ascii	"var\000"
 2777 011f 01       		.byte	0x1
 2778 0120 BA01     		.2byte	0x1ba
 2779 0122 83000000 		.4byte	0x83
 2780 0126 02       		.uleb128 0x2
 2781 0127 91       		.byte	0x91
 2782 0128 74       		.sleb128 -12
 2783 0129 0B       		.uleb128 0xb
 2784 012a 2A020000 		.4byte	.LASF22
 2785 012e 01       		.byte	0x1
 2786 012f BA01     		.2byte	0x1ba
 2787 0131 83000000 		.4byte	0x83
 2788 0135 02       		.uleb128 0x2
 2789 0136 91       		.byte	0x91
 2790 0137 70       		.sleb128 -16
 2791 0138 00       		.byte	0
 2792 0139 0C       		.uleb128 0xc
 2793 013a 66000000 		.4byte	.LASF24
 2794 013e 01       		.byte	0x1
 2795 013f D201     		.2byte	0x1d2
 2796 0141 83000000 		.4byte	0x83
 2797 0145 00000000 		.4byte	.LFB3
 2798 0149 42000000 		.4byte	.LFE3-.LFB3
 2799 014d 01       		.uleb128 0x1
 2800 014e 9C       		.byte	0x9c
 2801 014f 72010000 		.4byte	0x172
 2802 0153 0B       		.uleb128 0xb
 2803 0154 81010000 		.4byte	.LASF25
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 100


 2804 0158 01       		.byte	0x1
 2805 0159 D201     		.2byte	0x1d2
 2806 015b 83000000 		.4byte	0x83
 2807 015f 02       		.uleb128 0x2
 2808 0160 91       		.byte	0x91
 2809 0161 6C       		.sleb128 -20
 2810 0162 0D       		.uleb128 0xd
 2811 0163 24000000 		.4byte	.LASF28
 2812 0167 01       		.byte	0x1
 2813 0168 D401     		.2byte	0x1d4
 2814 016a 83000000 		.4byte	0x83
 2815 016e 02       		.uleb128 0x2
 2816 016f 91       		.byte	0x91
 2817 0170 74       		.sleb128 -12
 2818 0171 00       		.byte	0
 2819 0172 09       		.uleb128 0x9
 2820 0173 2B000000 		.4byte	.LASF26
 2821 0177 01       		.byte	0x1
 2822 0178 F101     		.2byte	0x1f1
 2823 017a 83000000 		.4byte	0x83
 2824 017e 00000000 		.4byte	.LFB4
 2825 0182 30000000 		.4byte	.LFE4-.LFB4
 2826 0186 01       		.uleb128 0x1
 2827 0187 9C       		.byte	0x9c
 2828 0188 AB010000 		.4byte	0x1ab
 2829 018c 0B       		.uleb128 0xb
 2830 018d C2030000 		.4byte	.LASF27
 2831 0191 01       		.byte	0x1
 2832 0192 F101     		.2byte	0x1f1
 2833 0194 83000000 		.4byte	0x83
 2834 0198 02       		.uleb128 0x2
 2835 0199 91       		.byte	0x91
 2836 019a 6C       		.sleb128 -20
 2837 019b 0D       		.uleb128 0xd
 2838 019c 24000000 		.4byte	.LASF28
 2839 01a0 01       		.byte	0x1
 2840 01a1 F301     		.2byte	0x1f3
 2841 01a3 83000000 		.4byte	0x83
 2842 01a7 02       		.uleb128 0x2
 2843 01a8 91       		.byte	0x91
 2844 01a9 74       		.sleb128 -12
 2845 01aa 00       		.byte	0
 2846 01ab 09       		.uleb128 0x9
 2847 01ac BF010000 		.4byte	.LASF29
 2848 01b0 01       		.byte	0x1
 2849 01b1 0B02     		.2byte	0x20b
 2850 01b3 83000000 		.4byte	0x83
 2851 01b7 00000000 		.4byte	.LFB5
 2852 01bb 36000000 		.4byte	.LFE5-.LFB5
 2853 01bf 01       		.uleb128 0x1
 2854 01c0 9C       		.byte	0x9c
 2855 01c1 E4010000 		.4byte	0x1e4
 2856 01c5 0B       		.uleb128 0xb
 2857 01c6 C2030000 		.4byte	.LASF27
 2858 01ca 01       		.byte	0x1
 2859 01cb 0B02     		.2byte	0x20b
 2860 01cd 83000000 		.4byte	0x83
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 101


 2861 01d1 02       		.uleb128 0x2
 2862 01d2 91       		.byte	0x91
 2863 01d3 6C       		.sleb128 -20
 2864 01d4 0D       		.uleb128 0xd
 2865 01d5 24000000 		.4byte	.LASF28
 2866 01d9 01       		.byte	0x1
 2867 01da 0D02     		.2byte	0x20d
 2868 01dc 83000000 		.4byte	0x83
 2869 01e0 02       		.uleb128 0x2
 2870 01e1 91       		.byte	0x91
 2871 01e2 74       		.sleb128 -12
 2872 01e3 00       		.byte	0
 2873 01e4 09       		.uleb128 0x9
 2874 01e5 8E020000 		.4byte	.LASF30
 2875 01e9 01       		.byte	0x1
 2876 01ea 2402     		.2byte	0x224
 2877 01ec 83000000 		.4byte	0x83
 2878 01f0 00000000 		.4byte	.LFB6
 2879 01f4 36000000 		.4byte	.LFE6-.LFB6
 2880 01f8 01       		.uleb128 0x1
 2881 01f9 9C       		.byte	0x9c
 2882 01fa 1D020000 		.4byte	0x21d
 2883 01fe 0B       		.uleb128 0xb
 2884 01ff C2030000 		.4byte	.LASF27
 2885 0203 01       		.byte	0x1
 2886 0204 2402     		.2byte	0x224
 2887 0206 83000000 		.4byte	0x83
 2888 020a 02       		.uleb128 0x2
 2889 020b 91       		.byte	0x91
 2890 020c 6C       		.sleb128 -20
 2891 020d 0D       		.uleb128 0xd
 2892 020e 24000000 		.4byte	.LASF28
 2893 0212 01       		.byte	0x1
 2894 0213 2602     		.2byte	0x226
 2895 0215 83000000 		.4byte	0x83
 2896 0219 02       		.uleb128 0x2
 2897 021a 91       		.byte	0x91
 2898 021b 74       		.sleb128 -12
 2899 021c 00       		.byte	0
 2900 021d 0C       		.uleb128 0xc
 2901 021e 8A040000 		.4byte	.LASF31
 2902 0222 01       		.byte	0x1
 2903 0223 3F02     		.2byte	0x23f
 2904 0225 83000000 		.4byte	0x83
 2905 0229 00000000 		.4byte	.LFB7
 2906 022d 20000000 		.4byte	.LFE7-.LFB7
 2907 0231 01       		.uleb128 0x1
 2908 0232 9C       		.byte	0x9c
 2909 0233 47020000 		.4byte	0x247
 2910 0237 0B       		.uleb128 0xb
 2911 0238 C2030000 		.4byte	.LASF27
 2912 023c 01       		.byte	0x1
 2913 023d 3F02     		.2byte	0x23f
 2914 023f 83000000 		.4byte	0x83
 2915 0243 02       		.uleb128 0x2
 2916 0244 91       		.byte	0x91
 2917 0245 74       		.sleb128 -12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 102


 2918 0246 00       		.byte	0
 2919 0247 09       		.uleb128 0x9
 2920 0248 76040000 		.4byte	.LASF32
 2921 024c 01       		.byte	0x1
 2922 024d 5302     		.2byte	0x253
 2923 024f 83000000 		.4byte	0x83
 2924 0253 00000000 		.4byte	.LFB8
 2925 0257 36000000 		.4byte	.LFE8-.LFB8
 2926 025b 01       		.uleb128 0x1
 2927 025c 9C       		.byte	0x9c
 2928 025d 80020000 		.4byte	0x280
 2929 0261 0B       		.uleb128 0xb
 2930 0262 BC020000 		.4byte	.LASF18
 2931 0266 01       		.byte	0x1
 2932 0267 5302     		.2byte	0x253
 2933 0269 83000000 		.4byte	0x83
 2934 026d 02       		.uleb128 0x2
 2935 026e 91       		.byte	0x91
 2936 026f 6C       		.sleb128 -20
 2937 0270 0D       		.uleb128 0xd
 2938 0271 24000000 		.4byte	.LASF28
 2939 0275 01       		.byte	0x1
 2940 0276 5502     		.2byte	0x255
 2941 0278 83000000 		.4byte	0x83
 2942 027c 02       		.uleb128 0x2
 2943 027d 91       		.byte	0x91
 2944 027e 74       		.sleb128 -12
 2945 027f 00       		.byte	0
 2946 0280 09       		.uleb128 0x9
 2947 0281 10000000 		.4byte	.LASF33
 2948 0285 01       		.byte	0x1
 2949 0286 6C02     		.2byte	0x26c
 2950 0288 83000000 		.4byte	0x83
 2951 028c 00000000 		.4byte	.LFB9
 2952 0290 36000000 		.4byte	.LFE9-.LFB9
 2953 0294 01       		.uleb128 0x1
 2954 0295 9C       		.byte	0x9c
 2955 0296 B9020000 		.4byte	0x2b9
 2956 029a 0B       		.uleb128 0xb
 2957 029b BC020000 		.4byte	.LASF18
 2958 029f 01       		.byte	0x1
 2959 02a0 6C02     		.2byte	0x26c
 2960 02a2 83000000 		.4byte	0x83
 2961 02a6 02       		.uleb128 0x2
 2962 02a7 91       		.byte	0x91
 2963 02a8 6C       		.sleb128 -20
 2964 02a9 0D       		.uleb128 0xd
 2965 02aa 24000000 		.4byte	.LASF28
 2966 02ae 01       		.byte	0x1
 2967 02af 6E02     		.2byte	0x26e
 2968 02b1 83000000 		.4byte	0x83
 2969 02b5 02       		.uleb128 0x2
 2970 02b6 91       		.byte	0x91
 2971 02b7 74       		.sleb128 -12
 2972 02b8 00       		.byte	0
 2973 02b9 09       		.uleb128 0x9
 2974 02ba F1010000 		.4byte	.LASF34
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 103


 2975 02be 01       		.byte	0x1
 2976 02bf 8502     		.2byte	0x285
 2977 02c1 83000000 		.4byte	0x83
 2978 02c5 00000000 		.4byte	.LFB10
 2979 02c9 5C000000 		.4byte	.LFE10-.LFB10
 2980 02cd 01       		.uleb128 0x1
 2981 02ce 9C       		.byte	0x9c
 2982 02cf F2020000 		.4byte	0x2f2
 2983 02d3 0B       		.uleb128 0xb
 2984 02d4 BC020000 		.4byte	.LASF18
 2985 02d8 01       		.byte	0x1
 2986 02d9 8502     		.2byte	0x285
 2987 02db 83000000 		.4byte	0x83
 2988 02df 02       		.uleb128 0x2
 2989 02e0 91       		.byte	0x91
 2990 02e1 6C       		.sleb128 -20
 2991 02e2 0D       		.uleb128 0xd
 2992 02e3 24000000 		.4byte	.LASF28
 2993 02e7 01       		.byte	0x1
 2994 02e8 8702     		.2byte	0x287
 2995 02ea 83000000 		.4byte	0x83
 2996 02ee 02       		.uleb128 0x2
 2997 02ef 91       		.byte	0x91
 2998 02f0 74       		.sleb128 -12
 2999 02f1 00       		.byte	0
 3000 02f2 09       		.uleb128 0x9
 3001 02f3 4C000000 		.4byte	.LASF35
 3002 02f7 01       		.byte	0x1
 3003 02f8 0304     		.2byte	0x403
 3004 02fa 83000000 		.4byte	0x83
 3005 02fe 00000000 		.4byte	.LFB24
 3006 0302 20000000 		.4byte	.LFE24-.LFB24
 3007 0306 01       		.uleb128 0x1
 3008 0307 9C       		.byte	0x9c
 3009 0308 1C030000 		.4byte	0x31c
 3010 030c 0B       		.uleb128 0xb
 3011 030d C2030000 		.4byte	.LASF27
 3012 0311 01       		.byte	0x1
 3013 0312 0304     		.2byte	0x403
 3014 0314 83000000 		.4byte	0x83
 3015 0318 02       		.uleb128 0x2
 3016 0319 91       		.byte	0x91
 3017 031a 74       		.sleb128 -12
 3018 031b 00       		.byte	0
 3019 031c 0C       		.uleb128 0xc
 3020 031d B0030000 		.4byte	.LASF36
 3021 0321 01       		.byte	0x1
 3022 0322 2904     		.2byte	0x429
 3023 0324 83000000 		.4byte	0x83
 3024 0328 00000000 		.4byte	.LFB25
 3025 032c A0000000 		.4byte	.LFE25-.LFB25
 3026 0330 01       		.uleb128 0x1
 3027 0331 9C       		.byte	0x9c
 3028 0332 91030000 		.4byte	0x391
 3029 0336 0B       		.uleb128 0xb
 3030 0337 55020000 		.4byte	.LASF37
 3031 033b 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 104


 3032 033c 2904     		.2byte	0x429
 3033 033e 83000000 		.4byte	0x83
 3034 0342 02       		.uleb128 0x2
 3035 0343 91       		.byte	0x91
 3036 0344 6C       		.sleb128 -20
 3037 0345 0B       		.uleb128 0xb
 3038 0346 84030000 		.4byte	.LASF38
 3039 034a 01       		.byte	0x1
 3040 034b 2904     		.2byte	0x429
 3041 034d 83000000 		.4byte	0x83
 3042 0351 02       		.uleb128 0x2
 3043 0352 91       		.byte	0x91
 3044 0353 68       		.sleb128 -24
 3045 0354 0B       		.uleb128 0xb
 3046 0355 58030000 		.4byte	.LASF39
 3047 0359 01       		.byte	0x1
 3048 035a 2904     		.2byte	0x429
 3049 035c 83000000 		.4byte	0x83
 3050 0360 02       		.uleb128 0x2
 3051 0361 91       		.byte	0x91
 3052 0362 64       		.sleb128 -28
 3053 0363 0A       		.uleb128 0xa
 3054 0364 6D696E00 		.ascii	"min\000"
 3055 0368 01       		.byte	0x1
 3056 0369 2904     		.2byte	0x429
 3057 036b 83000000 		.4byte	0x83
 3058 036f 02       		.uleb128 0x2
 3059 0370 91       		.byte	0x91
 3060 0371 60       		.sleb128 -32
 3061 0372 0A       		.uleb128 0xa
 3062 0373 73656300 		.ascii	"sec\000"
 3063 0377 01       		.byte	0x1
 3064 0378 2904     		.2byte	0x429
 3065 037a 83000000 		.4byte	0x83
 3066 037e 02       		.uleb128 0x2
 3067 037f 91       		.byte	0x91
 3068 0380 00       		.sleb128 0
 3069 0381 0D       		.uleb128 0xd
 3070 0382 24000000 		.4byte	.LASF28
 3071 0386 01       		.byte	0x1
 3072 0387 2B04     		.2byte	0x42b
 3073 0389 83000000 		.4byte	0x83
 3074 038d 02       		.uleb128 0x2
 3075 038e 91       		.byte	0x91
 3076 038f 74       		.sleb128 -12
 3077 0390 00       		.byte	0
 3078 0391 0C       		.uleb128 0xc
 3079 0392 47040000 		.4byte	.LASF40
 3080 0396 01       		.byte	0x1
 3081 0397 5204     		.2byte	0x452
 3082 0399 83000000 		.4byte	0x83
 3083 039d 00000000 		.4byte	.LFB26
 3084 03a1 D6000000 		.4byte	.LFE26-.LFB26
 3085 03a5 01       		.uleb128 0x1
 3086 03a6 9C       		.byte	0x9c
 3087 03a7 F7030000 		.4byte	0x3f7
 3088 03ab 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 105


 3089 03ac 42020000 		.4byte	.LASF41
 3090 03b0 01       		.byte	0x1
 3091 03b1 5204     		.2byte	0x452
 3092 03b3 83000000 		.4byte	0x83
 3093 03b7 02       		.uleb128 0x2
 3094 03b8 91       		.byte	0x91
 3095 03b9 6C       		.sleb128 -20
 3096 03ba 0A       		.uleb128 0xa
 3097 03bb 64617900 		.ascii	"day\000"
 3098 03bf 01       		.byte	0x1
 3099 03c0 5204     		.2byte	0x452
 3100 03c2 83000000 		.4byte	0x83
 3101 03c6 02       		.uleb128 0x2
 3102 03c7 91       		.byte	0x91
 3103 03c8 68       		.sleb128 -24
 3104 03c9 0B       		.uleb128 0xb
 3105 03ca 81010000 		.4byte	.LASF25
 3106 03ce 01       		.byte	0x1
 3107 03cf 5204     		.2byte	0x452
 3108 03d1 83000000 		.4byte	0x83
 3109 03d5 02       		.uleb128 0x2
 3110 03d6 91       		.byte	0x91
 3111 03d7 64       		.sleb128 -28
 3112 03d8 0D       		.uleb128 0xd
 3113 03d9 24000000 		.4byte	.LASF28
 3114 03dd 01       		.byte	0x1
 3115 03de 5404     		.2byte	0x454
 3116 03e0 83000000 		.4byte	0x83
 3117 03e4 02       		.uleb128 0x2
 3118 03e5 91       		.byte	0x91
 3119 03e6 70       		.sleb128 -16
 3120 03e7 0D       		.uleb128 0xd
 3121 03e8 E6030000 		.4byte	.LASF42
 3122 03ec 01       		.byte	0x1
 3123 03ed 5504     		.2byte	0x455
 3124 03ef 83000000 		.4byte	0x83
 3125 03f3 02       		.uleb128 0x2
 3126 03f4 91       		.byte	0x91
 3127 03f5 74       		.sleb128 -12
 3128 03f6 00       		.byte	0
 3129 03f7 0C       		.uleb128 0xc
 3130 03f8 C4000000 		.4byte	.LASF43
 3131 03fc 01       		.byte	0x1
 3132 03fd A404     		.2byte	0x4a4
 3133 03ff 83000000 		.4byte	0x83
 3134 0403 00000000 		.4byte	.LFB27
 3135 0407 88000000 		.4byte	.LFE27-.LFB27
 3136 040b 01       		.uleb128 0x1
 3137 040c 9C       		.byte	0x9c
 3138 040d 4E040000 		.4byte	0x44e
 3139 0411 0A       		.uleb128 0xa
 3140 0412 64617900 		.ascii	"day\000"
 3141 0416 01       		.byte	0x1
 3142 0417 A404     		.2byte	0x4a4
 3143 0419 83000000 		.4byte	0x83
 3144 041d 02       		.uleb128 0x2
 3145 041e 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 106


 3146 041f 64       		.sleb128 -28
 3147 0420 0B       		.uleb128 0xb
 3148 0421 42020000 		.4byte	.LASF41
 3149 0425 01       		.byte	0x1
 3150 0426 A404     		.2byte	0x4a4
 3151 0428 83000000 		.4byte	0x83
 3152 042c 02       		.uleb128 0x2
 3153 042d 91       		.byte	0x91
 3154 042e 60       		.sleb128 -32
 3155 042f 0B       		.uleb128 0xb
 3156 0430 81010000 		.4byte	.LASF25
 3157 0434 01       		.byte	0x1
 3158 0435 A404     		.2byte	0x4a4
 3159 0437 83000000 		.4byte	0x83
 3160 043b 02       		.uleb128 0x2
 3161 043c 91       		.byte	0x91
 3162 043d 5C       		.sleb128 -36
 3163 043e 0D       		.uleb128 0xd
 3164 043f 24000000 		.4byte	.LASF28
 3165 0443 01       		.byte	0x1
 3166 0444 A604     		.2byte	0x4a6
 3167 0446 83000000 		.4byte	0x83
 3168 044a 02       		.uleb128 0x2
 3169 044b 91       		.byte	0x91
 3170 044c 6C       		.sleb128 -20
 3171 044d 00       		.byte	0
 3172 044e 0E       		.uleb128 0xe
 3173 044f 6B010000 		.4byte	.LASF44
 3174 0453 02       		.byte	0x2
 3175 0454 5A       		.byte	0x5a
 3176 0455 00000000 		.4byte	.LFB28
 3177 0459 18000000 		.4byte	.LFE28-.LFB28
 3178 045d 01       		.uleb128 0x1
 3179 045e 9C       		.byte	0x9c
 3180 045f 0F       		.uleb128 0xf
 3181 0460 DD030000 		.4byte	.LASF45
 3182 0464 02       		.byte	0x2
 3183 0465 71       		.byte	0x71
 3184 0466 00000000 		.4byte	.LFB29
 3185 046a 08000000 		.4byte	.LFE29-.LFB29
 3186 046e 01       		.uleb128 0x1
 3187 046f 9C       		.byte	0x9c
 3188 0470 10       		.uleb128 0x10
 3189 0471 86000000 		.4byte	.LASF48
 3190 0475 02       		.byte	0x2
 3191 0476 8C       		.byte	0x8c
 3192 0477 00000000 		.4byte	.LFB30
 3193 047b 70000000 		.4byte	.LFE30-.LFB30
 3194 047f 01       		.uleb128 0x1
 3195 0480 9C       		.byte	0x9c
 3196 0481 A2040000 		.4byte	0x4a2
 3197 0485 11       		.uleb128 0x11
 3198 0486 5E000000 		.4byte	.LASF46
 3199 048a 02       		.byte	0x2
 3200 048b 8E       		.byte	0x8e
 3201 048c 83000000 		.4byte	0x83
 3202 0490 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 107


 3203 0491 91       		.byte	0x91
 3204 0492 74       		.sleb128 -12
 3205 0493 11       		.uleb128 0x11
 3206 0494 C6040000 		.4byte	.LASF47
 3207 0498 02       		.byte	0x2
 3208 0499 8F       		.byte	0x8f
 3209 049a 83000000 		.4byte	0x83
 3210 049e 02       		.uleb128 0x2
 3211 049f 91       		.byte	0x91
 3212 04a0 70       		.sleb128 -16
 3213 04a1 00       		.byte	0
 3214 04a2 10       		.uleb128 0x10
 3215 04a3 17020000 		.4byte	.LASF49
 3216 04a7 02       		.byte	0x2
 3217 04a8 E5       		.byte	0xe5
 3218 04a9 00000000 		.4byte	.LFB31
 3219 04ad 74000000 		.4byte	.LFE31-.LFB31
 3220 04b1 01       		.uleb128 0x1
 3221 04b2 9C       		.byte	0x9c
 3222 04b3 FE040000 		.4byte	0x4fe
 3223 04b7 12       		.uleb128 0x12
 3224 04b8 C2030000 		.4byte	.LASF27
 3225 04bc 02       		.byte	0x2
 3226 04bd E5       		.byte	0xe5
 3227 04be 83000000 		.4byte	0x83
 3228 04c2 02       		.uleb128 0x2
 3229 04c3 91       		.byte	0x91
 3230 04c4 5C       		.sleb128 -36
 3231 04c5 12       		.uleb128 0x12
 3232 04c6 59040000 		.4byte	.LASF50
 3233 04ca 02       		.byte	0x2
 3234 04cb E5       		.byte	0xe5
 3235 04cc 83000000 		.4byte	0x83
 3236 04d0 02       		.uleb128 0x2
 3237 04d1 91       		.byte	0x91
 3238 04d2 58       		.sleb128 -40
 3239 04d3 11       		.uleb128 0x11
 3240 04d4 09000000 		.4byte	.LASF51
 3241 04d8 02       		.byte	0x2
 3242 04d9 E7       		.byte	0xe7
 3243 04da 83000000 		.4byte	0x83
 3244 04de 02       		.uleb128 0x2
 3245 04df 91       		.byte	0x91
 3246 04e0 6C       		.sleb128 -20
 3247 04e1 11       		.uleb128 0x11
 3248 04e2 E5000000 		.4byte	.LASF52
 3249 04e6 02       		.byte	0x2
 3250 04e7 E8       		.byte	0xe8
 3251 04e8 83000000 		.4byte	0x83
 3252 04ec 02       		.uleb128 0x2
 3253 04ed 91       		.byte	0x91
 3254 04ee 68       		.sleb128 -24
 3255 04ef 11       		.uleb128 0x11
 3256 04f0 FB020000 		.4byte	.LASF53
 3257 04f4 02       		.byte	0x2
 3258 04f5 E9       		.byte	0xe9
 3259 04f6 83000000 		.4byte	0x83
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 108


 3260 04fa 02       		.uleb128 0x2
 3261 04fb 91       		.byte	0x91
 3262 04fc 64       		.sleb128 -28
 3263 04fd 00       		.byte	0
 3264 04fe 13       		.uleb128 0x13
 3265 04ff 86010000 		.4byte	.LASF54
 3266 0503 02       		.byte	0x2
 3267 0504 1901     		.2byte	0x119
 3268 0506 00000000 		.4byte	.LFB32
 3269 050a 34000000 		.4byte	.LFE32-.LFB32
 3270 050e 01       		.uleb128 0x1
 3271 050f 9C       		.byte	0x9c
 3272 0510 33050000 		.4byte	0x533
 3273 0514 0B       		.uleb128 0xb
 3274 0515 81040000 		.4byte	.LASF55
 3275 0519 02       		.byte	0x2
 3276 051a 1901     		.2byte	0x119
 3277 051c 9D000000 		.4byte	0x9d
 3278 0520 02       		.uleb128 0x2
 3279 0521 91       		.byte	0x91
 3280 0522 58       		.sleb128 -40
 3281 0523 0D       		.uleb128 0xd
 3282 0524 67050000 		.4byte	.LASF56
 3283 0528 02       		.byte	0x2
 3284 0529 1B01     		.2byte	0x11b
 3285 052b F5000000 		.4byte	0xf5
 3286 052f 02       		.uleb128 0x2
 3287 0530 91       		.byte	0x91
 3288 0531 60       		.sleb128 -32
 3289 0532 00       		.byte	0
 3290 0533 14       		.uleb128 0x14
 3291 0534 63030000 		.4byte	.LASF60
 3292 0538 02       		.byte	0x2
 3293 0539 3E01     		.2byte	0x13e
 3294 053b 9D000000 		.4byte	0x9d
 3295 053f 00000000 		.4byte	.LFB33
 3296 0543 18000000 		.4byte	.LFE33-.LFB33
 3297 0547 01       		.uleb128 0x1
 3298 0548 9C       		.byte	0x9c
 3299 0549 15       		.uleb128 0x15
 3300 054a 48010000 		.4byte	.LASF57
 3301 054e 02       		.byte	0x2
 3302 054f 5A01     		.2byte	0x15a
 3303 0551 00000000 		.4byte	.LFB34
 3304 0555 24000000 		.4byte	.LFE34-.LFB34
 3305 0559 01       		.uleb128 0x1
 3306 055a 9C       		.byte	0x9c
 3307 055b 7E050000 		.4byte	0x57e
 3308 055f 0B       		.uleb128 0xb
 3309 0560 F5020000 		.4byte	.LASF58
 3310 0564 02       		.byte	0x2
 3311 0565 5A01     		.2byte	0x15a
 3312 0567 83000000 		.4byte	0x83
 3313 056b 02       		.uleb128 0x2
 3314 056c 91       		.byte	0x91
 3315 056d 74       		.sleb128 -12
 3316 056e 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 109


 3317 056f D4010000 		.4byte	.LASF59
 3318 0573 02       		.byte	0x2
 3319 0574 5A01     		.2byte	0x15a
 3320 0576 83000000 		.4byte	0x83
 3321 057a 02       		.uleb128 0x2
 3322 057b 91       		.byte	0x91
 3323 057c 70       		.sleb128 -16
 3324 057d 00       		.byte	0
 3325 057e 14       		.uleb128 0x14
 3326 057f 9B020000 		.4byte	.LASF61
 3327 0583 02       		.byte	0x2
 3328 0584 6B01     		.2byte	0x16b
 3329 0586 83000000 		.4byte	0x83
 3330 058a 00000000 		.4byte	.LFB35
 3331 058e 14000000 		.4byte	.LFE35-.LFB35
 3332 0592 01       		.uleb128 0x1
 3333 0593 9C       		.byte	0x9c
 3334 0594 14       		.uleb128 0x14
 3335 0595 73030000 		.4byte	.LASF62
 3336 0599 02       		.byte	0x2
 3337 059a 7C01     		.2byte	0x17c
 3338 059c 83000000 		.4byte	0x83
 3339 05a0 00000000 		.4byte	.LFB36
 3340 05a4 14000000 		.4byte	.LFE36-.LFB36
 3341 05a8 01       		.uleb128 0x1
 3342 05a9 9C       		.byte	0x9c
 3343 05aa 13       		.uleb128 0x13
 3344 05ab 39000000 		.4byte	.LASF63
 3345 05af 02       		.byte	0x2
 3346 05b0 8C01     		.2byte	0x18c
 3347 05b2 00000000 		.4byte	.LFB37
 3348 05b6 3C000000 		.4byte	.LFE37-.LFB37
 3349 05ba 01       		.uleb128 0x1
 3350 05bb 9C       		.byte	0x9c
 3351 05bc D0050000 		.4byte	0x5d0
 3352 05c0 0B       		.uleb128 0xb
 3353 05c1 00000000 		.4byte	.LASF64
 3354 05c5 02       		.byte	0x2
 3355 05c6 8C01     		.2byte	0x18c
 3356 05c8 D0050000 		.4byte	0x5d0
 3357 05cc 02       		.uleb128 0x2
 3358 05cd 91       		.byte	0x91
 3359 05ce 6C       		.sleb128 -20
 3360 05cf 00       		.byte	0
 3361 05d0 16       		.uleb128 0x16
 3362 05d1 04       		.byte	0x4
 3363 05d2 F5000000 		.4byte	0xf5
 3364 05d6 17       		.uleb128 0x17
 3365 05d7 BA040000 		.4byte	.LASF65
 3366 05db 02       		.byte	0x2
 3367 05dc A301     		.2byte	0x1a3
 3368 05de 83000000 		.4byte	0x83
 3369 05e2 00000000 		.4byte	.LFB38
 3370 05e6 44000000 		.4byte	.LFE38-.LFB38
 3371 05ea 01       		.uleb128 0x1
 3372 05eb 9C       		.byte	0x9c
 3373 05ec 17       		.uleb128 0x17
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 110


 3374 05ed 1B040000 		.4byte	.LASF66
 3375 05f1 02       		.byte	0x2
 3376 05f2 BD01     		.2byte	0x1bd
 3377 05f4 83000000 		.4byte	0x83
 3378 05f8 00000000 		.4byte	.LFB39
 3379 05fc 44000000 		.4byte	.LFE39-.LFB39
 3380 0600 01       		.uleb128 0x1
 3381 0601 9C       		.byte	0x9c
 3382 0602 18       		.uleb128 0x18
 3383 0603 AB040000 		.4byte	.LASF68
 3384 0607 02       		.byte	0x2
 3385 0608 9B03     		.2byte	0x39b
 3386 060a 83000000 		.4byte	0x83
 3387 060e 00000000 		.4byte	.LFB40
 3388 0612 80000000 		.4byte	.LFE40-.LFB40
 3389 0616 01       		.uleb128 0x1
 3390 0617 9C       		.byte	0x9c
 3391 0618 3B060000 		.4byte	0x63b
 3392 061c 0D       		.uleb128 0xd
 3393 061d FB020000 		.4byte	.LASF53
 3394 0621 02       		.byte	0x2
 3395 0622 9D03     		.2byte	0x39d
 3396 0624 83000000 		.4byte	0x83
 3397 0628 02       		.uleb128 0x2
 3398 0629 91       		.byte	0x91
 3399 062a 74       		.sleb128 -12
 3400 062b 0D       		.uleb128 0xd
 3401 062c 96010000 		.4byte	.LASF67
 3402 0630 02       		.byte	0x2
 3403 0631 9E03     		.2byte	0x39e
 3404 0633 F5000000 		.4byte	0xf5
 3405 0637 02       		.uleb128 0x2
 3406 0638 91       		.byte	0x91
 3407 0639 64       		.sleb128 -28
 3408 063a 00       		.byte	0
 3409 063b 19       		.uleb128 0x19
 3410 063c AB010000 		.4byte	.LASF69
 3411 0640 02       		.byte	0x2
 3412 0641 5E04     		.2byte	0x45e
 3413 0643 83000000 		.4byte	0x83
 3414 0647 00000000 		.4byte	.LFB41
 3415 064b 4E000000 		.4byte	.LFE41-.LFB41
 3416 064f 01       		.uleb128 0x1
 3417 0650 9C       		.byte	0x9c
 3418 0651 90060000 		.4byte	0x690
 3419 0655 0B       		.uleb128 0xb
 3420 0656 1B010000 		.4byte	.LASF70
 3421 065a 02       		.byte	0x2
 3422 065b 5E04     		.2byte	0x45e
 3423 065d 83000000 		.4byte	0x83
 3424 0661 02       		.uleb128 0x2
 3425 0662 91       		.byte	0x91
 3426 0663 64       		.sleb128 -28
 3427 0664 1A       		.uleb128 0x1a
 3428 0665 6900     		.ascii	"i\000"
 3429 0667 02       		.byte	0x2
 3430 0668 6004     		.2byte	0x460
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 111


 3431 066a 83000000 		.4byte	0x83
 3432 066e 02       		.uleb128 0x2
 3433 066f 91       		.byte	0x91
 3434 0670 74       		.sleb128 -12
 3435 0671 0D       		.uleb128 0xd
 3436 0672 2C040000 		.4byte	.LASF71
 3437 0676 02       		.byte	0x2
 3438 0677 6104     		.2byte	0x461
 3439 0679 83000000 		.4byte	0x83
 3440 067d 02       		.uleb128 0x2
 3441 067e 91       		.byte	0x91
 3442 067f 70       		.sleb128 -16
 3443 0680 0D       		.uleb128 0xd
 3444 0681 24000000 		.4byte	.LASF28
 3445 0685 02       		.byte	0x2
 3446 0686 6204     		.2byte	0x462
 3447 0688 83000000 		.4byte	0x83
 3448 068c 02       		.uleb128 0x2
 3449 068d 91       		.byte	0x91
 3450 068e 6C       		.sleb128 -20
 3451 068f 00       		.byte	0
 3452 0690 18       		.uleb128 0x18
 3453 0691 60020000 		.4byte	.LASF72
 3454 0695 02       		.byte	0x2
 3455 0696 8404     		.2byte	0x484
 3456 0698 83000000 		.4byte	0x83
 3457 069c 00000000 		.4byte	.LFB42
 3458 06a0 60000000 		.4byte	.LFE42-.LFB42
 3459 06a4 01       		.uleb128 0x1
 3460 06a5 9C       		.byte	0x9c
 3461 06a6 E7060000 		.4byte	0x6e7
 3462 06aa 0B       		.uleb128 0xb
 3463 06ab 06040000 		.4byte	.LASF73
 3464 06af 02       		.byte	0x2
 3465 06b0 8404     		.2byte	0x484
 3466 06b2 83000000 		.4byte	0x83
 3467 06b6 02       		.uleb128 0x2
 3468 06b7 91       		.byte	0x91
 3469 06b8 64       		.sleb128 -28
 3470 06b9 0D       		.uleb128 0xd
 3471 06ba FD010000 		.4byte	.LASF74
 3472 06be 02       		.byte	0x2
 3473 06bf 8604     		.2byte	0x486
 3474 06c1 83000000 		.4byte	0x83
 3475 06c5 02       		.uleb128 0x2
 3476 06c6 91       		.byte	0x91
 3477 06c7 74       		.sleb128 -12
 3478 06c8 0D       		.uleb128 0xd
 3479 06c9 E6030000 		.4byte	.LASF42
 3480 06cd 02       		.byte	0x2
 3481 06ce 8704     		.2byte	0x487
 3482 06d0 83000000 		.4byte	0x83
 3483 06d4 02       		.uleb128 0x2
 3484 06d5 91       		.byte	0x91
 3485 06d6 70       		.sleb128 -16
 3486 06d7 0D       		.uleb128 0xd
 3487 06d8 24000000 		.4byte	.LASF28
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 112


 3488 06dc 02       		.byte	0x2
 3489 06dd 8804     		.2byte	0x488
 3490 06df 83000000 		.4byte	0x83
 3491 06e3 02       		.uleb128 0x2
 3492 06e4 91       		.byte	0x91
 3493 06e5 6C       		.sleb128 -20
 3494 06e6 00       		.byte	0
 3495 06e7 15       		.uleb128 0x15
 3496 06e8 CE040000 		.4byte	.LASF75
 3497 06ec 02       		.byte	0x2
 3498 06ed B704     		.2byte	0x4b7
 3499 06ef 00000000 		.4byte	.LFB43
 3500 06f3 4C000000 		.4byte	.LFE43-.LFB43
 3501 06f7 01       		.uleb128 0x1
 3502 06f8 9C       		.byte	0x9c
 3503 06f9 10070000 		.4byte	0x710
 3504 06fd 0D       		.uleb128 0xd
 3505 06fe 31040000 		.4byte	.LASF76
 3506 0702 02       		.byte	0x2
 3507 0703 B904     		.2byte	0x4b9
 3508 0705 B0000000 		.4byte	0xb0
 3509 0709 05       		.uleb128 0x5
 3510 070a 03       		.byte	0x3
 3511 070b 0C000000 		.4byte	RTC_currentTickNumber.5088
 3512 070f 00       		.byte	0
 3513 0710 18       		.uleb128 0x18
 3514 0711 C1020000 		.4byte	.LASF77
 3515 0715 02       		.byte	0x2
 3516 0716 F204     		.2byte	0x4f2
 3517 0718 9D000000 		.4byte	0x9d
 3518 071c 00000000 		.4byte	.LFB44
 3519 0720 90010000 		.4byte	.LFE44-.LFB44
 3520 0724 01       		.uleb128 0x1
 3521 0725 9C       		.byte	0x9c
 3522 0726 92070000 		.4byte	0x792
 3523 072a 0B       		.uleb128 0xb
 3524 072b 59040000 		.4byte	.LASF50
 3525 072f 02       		.byte	0x2
 3526 0730 F204     		.2byte	0x4f2
 3527 0732 83000000 		.4byte	0x83
 3528 0736 02       		.uleb128 0x2
 3529 0737 91       		.byte	0x91
 3530 0738 4C       		.sleb128 -52
 3531 0739 0B       		.uleb128 0xb
 3532 073a C2030000 		.4byte	.LASF27
 3533 073e 02       		.byte	0x2
 3534 073f F204     		.2byte	0x4f2
 3535 0741 83000000 		.4byte	0x83
 3536 0745 02       		.uleb128 0x2
 3537 0746 91       		.byte	0x91
 3538 0747 48       		.sleb128 -56
 3539 0748 1A       		.uleb128 0x1a
 3540 0749 6900     		.ascii	"i\000"
 3541 074b 02       		.byte	0x2
 3542 074c F404     		.2byte	0x4f4
 3543 074e 83000000 		.4byte	0x83
 3544 0752 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 113


 3545 0753 91       		.byte	0x91
 3546 0754 64       		.sleb128 -28
 3547 0755 0D       		.uleb128 0xd
 3548 0756 FB020000 		.4byte	.LASF53
 3549 075a 02       		.byte	0x2
 3550 075b F504     		.2byte	0x4f5
 3551 075d 83000000 		.4byte	0x83
 3552 0761 02       		.uleb128 0x2
 3553 0762 91       		.byte	0x91
 3554 0763 54       		.sleb128 -44
 3555 0764 0D       		.uleb128 0xd
 3556 0765 E5000000 		.4byte	.LASF52
 3557 0769 02       		.byte	0x2
 3558 076a F604     		.2byte	0x4f6
 3559 076c 83000000 		.4byte	0x83
 3560 0770 02       		.uleb128 0x2
 3561 0771 91       		.byte	0x91
 3562 0772 50       		.sleb128 -48
 3563 0773 0D       		.uleb128 0xd
 3564 0774 E6030000 		.4byte	.LASF42
 3565 0778 02       		.byte	0x2
 3566 0779 F704     		.2byte	0x4f7
 3567 077b 83000000 		.4byte	0x83
 3568 077f 02       		.uleb128 0x2
 3569 0780 91       		.byte	0x91
 3570 0781 60       		.sleb128 -32
 3571 0782 0D       		.uleb128 0xd
 3572 0783 81040000 		.4byte	.LASF55
 3573 0787 02       		.byte	0x2
 3574 0788 F804     		.2byte	0x4f8
 3575 078a 9D000000 		.4byte	0x9d
 3576 078e 02       		.uleb128 0x2
 3577 078f 91       		.byte	0x91
 3578 0790 58       		.sleb128 -40
 3579 0791 00       		.byte	0
 3580 0792 13       		.uleb128 0x13
 3581 0793 63040000 		.4byte	.LASF78
 3582 0797 02       		.byte	0x2
 3583 0798 5505     		.2byte	0x555
 3584 079a 00000000 		.4byte	.LFB45
 3585 079e AC020000 		.4byte	.LFE45-.LFB45
 3586 07a2 01       		.uleb128 0x1
 3587 07a3 9C       		.byte	0x9c
 3588 07a4 40080000 		.4byte	0x840
 3589 07a8 0B       		.uleb128 0xb
 3590 07a9 00000000 		.4byte	.LASF64
 3591 07ad 02       		.byte	0x2
 3592 07ae 5505     		.2byte	0x555
 3593 07b0 D0050000 		.4byte	0x5d0
 3594 07b4 02       		.uleb128 0x2
 3595 07b5 91       		.byte	0x91
 3596 07b6 44       		.sleb128 -60
 3597 07b7 0B       		.uleb128 0xb
 3598 07b8 81040000 		.4byte	.LASF55
 3599 07bc 02       		.byte	0x2
 3600 07bd 5505     		.2byte	0x555
 3601 07bf 9D000000 		.4byte	0x9d
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 114


 3602 07c3 03       		.uleb128 0x3
 3603 07c4 91       		.byte	0x91
 3604 07c5 B87F     		.sleb128 -72
 3605 07c7 0B       		.uleb128 0xb
 3606 07c8 55020000 		.4byte	.LASF37
 3607 07cc 02       		.byte	0x2
 3608 07cd 5505     		.2byte	0x555
 3609 07cf 83000000 		.4byte	0x83
 3610 07d3 02       		.uleb128 0x2
 3611 07d4 91       		.byte	0x91
 3612 07d5 00       		.sleb128 0
 3613 07d6 0D       		.uleb128 0xd
 3614 07d7 8F000000 		.4byte	.LASF79
 3615 07db 02       		.byte	0x2
 3616 07dc 5705     		.2byte	0x557
 3617 07de 83000000 		.4byte	0x83
 3618 07e2 02       		.uleb128 0x2
 3619 07e3 91       		.byte	0x91
 3620 07e4 4C       		.sleb128 -52
 3621 07e5 0D       		.uleb128 0xd
 3622 07e6 1A030000 		.4byte	.LASF80
 3623 07ea 02       		.byte	0x2
 3624 07eb 5805     		.2byte	0x558
 3625 07ed 83000000 		.4byte	0x83
 3626 07f1 02       		.uleb128 0x2
 3627 07f2 91       		.byte	0x91
 3628 07f3 64       		.sleb128 -28
 3629 07f4 0D       		.uleb128 0xd
 3630 07f5 FA000000 		.4byte	.LASF81
 3631 07f9 02       		.byte	0x2
 3632 07fa 5905     		.2byte	0x559
 3633 07fc 83000000 		.4byte	0x83
 3634 0800 02       		.uleb128 0x2
 3635 0801 91       		.byte	0x91
 3636 0802 60       		.sleb128 -32
 3637 0803 0D       		.uleb128 0xd
 3638 0804 09000000 		.4byte	.LASF51
 3639 0808 02       		.byte	0x2
 3640 0809 5B05     		.2byte	0x55b
 3641 080b 83000000 		.4byte	0x83
 3642 080f 02       		.uleb128 0x2
 3643 0810 91       		.byte	0x91
 3644 0811 50       		.sleb128 -48
 3645 0812 0D       		.uleb128 0xd
 3646 0813 E5000000 		.4byte	.LASF52
 3647 0817 02       		.byte	0x2
 3648 0818 5C05     		.2byte	0x55c
 3649 081a 83000000 		.4byte	0x83
 3650 081e 02       		.uleb128 0x2
 3651 081f 91       		.byte	0x91
 3652 0820 5C       		.sleb128 -36
 3653 0821 0D       		.uleb128 0xd
 3654 0822 FB020000 		.4byte	.LASF53
 3655 0826 02       		.byte	0x2
 3656 0827 5D05     		.2byte	0x55d
 3657 0829 83000000 		.4byte	0x83
 3658 082d 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 115


 3659 082e 91       		.byte	0x91
 3660 082f 58       		.sleb128 -40
 3661 0830 0D       		.uleb128 0xd
 3662 0831 FF030000 		.4byte	.LASF82
 3663 0835 02       		.byte	0x2
 3664 0836 5F05     		.2byte	0x55f
 3665 0838 83000000 		.4byte	0x83
 3666 083c 02       		.uleb128 0x2
 3667 083d 91       		.byte	0x91
 3668 083e 54       		.sleb128 -44
 3669 083f 00       		.byte	0
 3670 0840 18       		.uleb128 0x18
 3671 0841 99000000 		.4byte	.LASF83
 3672 0845 02       		.byte	0x2
 3673 0846 DB05     		.2byte	0x5db
 3674 0848 83000000 		.4byte	0x83
 3675 084c 00000000 		.4byte	.LFB46
 3676 0850 82000000 		.4byte	.LFE46-.LFB46
 3677 0854 01       		.uleb128 0x1
 3678 0855 9C       		.byte	0x9c
 3679 0856 E2080000 		.4byte	0x8e2
 3680 085a 0B       		.uleb128 0xb
 3681 085b D4020000 		.4byte	.LASF19
 3682 085f 02       		.byte	0x2
 3683 0860 DB05     		.2byte	0x5db
 3684 0862 83000000 		.4byte	0x83
 3685 0866 02       		.uleb128 0x2
 3686 0867 91       		.byte	0x91
 3687 0868 5C       		.sleb128 -36
 3688 0869 0B       		.uleb128 0xb
 3689 086a EE000000 		.4byte	.LASF84
 3690 086e 02       		.byte	0x2
 3691 086f DB05     		.2byte	0x5db
 3692 0871 83000000 		.4byte	0x83
 3693 0875 02       		.uleb128 0x2
 3694 0876 91       		.byte	0x91
 3695 0877 58       		.sleb128 -40
 3696 0878 0B       		.uleb128 0xb
 3697 0879 42020000 		.4byte	.LASF41
 3698 087d 02       		.byte	0x2
 3699 087e DB05     		.2byte	0x5db
 3700 0880 83000000 		.4byte	0x83
 3701 0884 02       		.uleb128 0x2
 3702 0885 91       		.byte	0x91
 3703 0886 54       		.sleb128 -44
 3704 0887 0B       		.uleb128 0xb
 3705 0888 81010000 		.4byte	.LASF25
 3706 088c 02       		.byte	0x2
 3707 088d DB05     		.2byte	0x5db
 3708 088f 83000000 		.4byte	0x83
 3709 0893 02       		.uleb128 0x2
 3710 0894 91       		.byte	0x91
 3711 0895 50       		.sleb128 -48
 3712 0896 0D       		.uleb128 0xd
 3713 0897 E3010000 		.4byte	.LASF85
 3714 089b 02       		.byte	0x2
 3715 089c DD05     		.2byte	0x5dd
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 116


 3716 089e 83000000 		.4byte	0x83
 3717 08a2 02       		.uleb128 0x2
 3718 08a3 91       		.byte	0x91
 3719 08a4 74       		.sleb128 -12
 3720 08a5 0D       		.uleb128 0xd
 3721 08a6 74020000 		.4byte	.LASF86
 3722 08aa 02       		.byte	0x2
 3723 08ab DE05     		.2byte	0x5de
 3724 08ad 83000000 		.4byte	0x83
 3725 08b1 02       		.uleb128 0x2
 3726 08b2 91       		.byte	0x91
 3727 08b3 70       		.sleb128 -16
 3728 08b4 0D       		.uleb128 0xd
 3729 08b5 22010000 		.4byte	.LASF87
 3730 08b9 02       		.byte	0x2
 3731 08ba DF05     		.2byte	0x5df
 3732 08bc 83000000 		.4byte	0x83
 3733 08c0 02       		.uleb128 0x2
 3734 08c1 91       		.byte	0x91
 3735 08c2 68       		.sleb128 -24
 3736 08c3 0D       		.uleb128 0xd
 3737 08c4 DE020000 		.4byte	.LASF88
 3738 08c8 02       		.byte	0x2
 3739 08c9 E005     		.2byte	0x5e0
 3740 08cb 83000000 		.4byte	0x83
 3741 08cf 02       		.uleb128 0x2
 3742 08d0 91       		.byte	0x91
 3743 08d1 6C       		.sleb128 -20
 3744 08d2 0D       		.uleb128 0xd
 3745 08d3 24000000 		.4byte	.LASF28
 3746 08d7 02       		.byte	0x2
 3747 08d8 E205     		.2byte	0x5e2
 3748 08da 83000000 		.4byte	0x83
 3749 08de 02       		.uleb128 0x2
 3750 08df 91       		.byte	0x91
 3751 08e0 64       		.sleb128 -28
 3752 08e1 00       		.byte	0
 3753 08e2 18       		.uleb128 0x18
 3754 08e3 D5000000 		.4byte	.LASF89
 3755 08e7 02       		.byte	0x2
 3756 08e8 1606     		.2byte	0x616
 3757 08ea 83000000 		.4byte	0x83
 3758 08ee 00000000 		.4byte	.LFB47
 3759 08f2 3C000000 		.4byte	.LFE47-.LFB47
 3760 08f6 01       		.uleb128 0x1
 3761 08f7 9C       		.byte	0x9c
 3762 08f8 2A090000 		.4byte	0x92a
 3763 08fc 0B       		.uleb128 0xb
 3764 08fd 42020000 		.4byte	.LASF41
 3765 0901 02       		.byte	0x2
 3766 0902 1606     		.2byte	0x616
 3767 0904 83000000 		.4byte	0x83
 3768 0908 02       		.uleb128 0x2
 3769 0909 91       		.byte	0x91
 3770 090a 6C       		.sleb128 -20
 3771 090b 0B       		.uleb128 0xb
 3772 090c 81010000 		.4byte	.LASF25
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 117


 3773 0910 02       		.byte	0x2
 3774 0911 1606     		.2byte	0x616
 3775 0913 83000000 		.4byte	0x83
 3776 0917 02       		.uleb128 0x2
 3777 0918 91       		.byte	0x91
 3778 0919 68       		.sleb128 -24
 3779 091a 0D       		.uleb128 0xd
 3780 091b 24000000 		.4byte	.LASF28
 3781 091f 02       		.byte	0x2
 3782 0920 1806     		.2byte	0x618
 3783 0922 83000000 		.4byte	0x83
 3784 0926 02       		.uleb128 0x2
 3785 0927 91       		.byte	0x91
 3786 0928 74       		.sleb128 -12
 3787 0929 00       		.byte	0
 3788 092a 18       		.uleb128 0x18
 3789 092b 07010000 		.4byte	.LASF90
 3790 092f 02       		.byte	0x2
 3791 0930 4606     		.2byte	0x646
 3792 0932 83000000 		.4byte	0x83
 3793 0936 00000000 		.4byte	.LFB48
 3794 093a 3C000000 		.4byte	.LFE48-.LFB48
 3795 093e 01       		.uleb128 0x1
 3796 093f 9C       		.byte	0x9c
 3797 0940 72090000 		.4byte	0x972
 3798 0944 0B       		.uleb128 0xb
 3799 0945 42020000 		.4byte	.LASF41
 3800 0949 02       		.byte	0x2
 3801 094a 4606     		.2byte	0x646
 3802 094c 83000000 		.4byte	0x83
 3803 0950 02       		.uleb128 0x2
 3804 0951 91       		.byte	0x91
 3805 0952 6C       		.sleb128 -20
 3806 0953 0B       		.uleb128 0xb
 3807 0954 81010000 		.4byte	.LASF25
 3808 0958 02       		.byte	0x2
 3809 0959 4606     		.2byte	0x646
 3810 095b 83000000 		.4byte	0x83
 3811 095f 02       		.uleb128 0x2
 3812 0960 91       		.byte	0x91
 3813 0961 68       		.sleb128 -24
 3814 0962 0D       		.uleb128 0xd
 3815 0963 24000000 		.4byte	.LASF28
 3816 0967 02       		.byte	0x2
 3817 0968 4806     		.2byte	0x648
 3818 096a 83000000 		.4byte	0x83
 3819 096e 02       		.uleb128 0x2
 3820 096f 91       		.byte	0x91
 3821 0970 74       		.sleb128 -12
 3822 0971 00       		.byte	0
 3823 0972 11       		.uleb128 0x11
 3824 0973 56010000 		.4byte	.LASF91
 3825 0977 02       		.byte	0x2
 3826 0978 17       		.byte	0x17
 3827 0979 83000000 		.4byte	0x83
 3828 097d 05       		.uleb128 0x5
 3829 097e 03       		.byte	0x3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 118


 3830 097f 00000000 		.4byte	RTC_updateTimePeriod
 3831 0983 11       		.uleb128 0x11
 3832 0984 ED030000 		.4byte	.LASF92
 3833 0988 02       		.byte	0x2
 3834 0989 18       		.byte	0x18
 3835 098a 83000000 		.4byte	0x83
 3836 098e 05       		.uleb128 0x5
 3837 098f 03       		.byte	0x3
 3838 0990 04000000 		.4byte	RTC_tickRefOneSec
 3839 0994 11       		.uleb128 0x11
 3840 0995 22030000 		.4byte	.LASF93
 3841 0999 02       		.byte	0x2
 3842 099a 1B       		.byte	0x1b
 3843 099b 83000000 		.4byte	0x83
 3844 099f 05       		.uleb128 0x5
 3845 09a0 03       		.byte	0x3
 3846 09a1 08000000 		.4byte	RTC_dstTimeOffset
 3847 09a5 1B       		.uleb128 0x1b
 3848 09a6 75010000 		.4byte	.LASF94
 3849 09aa 02       		.byte	0x2
 3850 09ab 12       		.byte	0x12
 3851 09ac 6B000000 		.4byte	0x6b
 3852 09b0 05       		.uleb128 0x5
 3853 09b1 03       		.byte	0x3
 3854 09b2 00000000 		.4byte	RTC_initVar
 3855 09b6 1B       		.uleb128 0x1b
 3856 09b7 96040000 		.4byte	.LASF95
 3857 09bb 02       		.byte	0x2
 3858 09bc 1A       		.byte	0x1a
 3859 09bd 6B000000 		.4byte	0x6b
 3860 09c1 05       		.uleb128 0x5
 3861 09c2 03       		.byte	0x3
 3862 09c3 00000000 		.4byte	RTC_dstStatus
 3863 09c7 1B       		.uleb128 0x1b
 3864 09c8 0A020000 		.4byte	.LASF96
 3865 09cc 02       		.byte	0x2
 3866 09cd 14       		.byte	0x14
 3867 09ce D8090000 		.4byte	0x9d8
 3868 09d2 05       		.uleb128 0x5
 3869 09d3 03       		.byte	0x3
 3870 09d4 00000000 		.4byte	RTC_unixTime
 3871 09d8 05       		.uleb128 0x5
 3872 09d9 9D000000 		.4byte	0x9d
 3873 09dd 1B       		.uleb128 0x1b
 3874 09de 9C030000 		.4byte	.LASF97
 3875 09e2 02       		.byte	0x2
 3876 09e3 15       		.byte	0x15
 3877 09e4 F5000000 		.4byte	0xf5
 3878 09e8 05       		.uleb128 0x5
 3879 09e9 03       		.byte	0x3
 3880 09ea 00000000 		.4byte	RTC_currentTimeDate
 3881 09ee 1B       		.uleb128 0x1b
 3882 09ef 2F020000 		.4byte	.LASF98
 3883 09f3 02       		.byte	0x2
 3884 09f4 23       		.byte	0x23
 3885 09f5 83000000 		.4byte	0x83
 3886 09f9 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 119


 3887 09fa 03       		.byte	0x3
 3888 09fb 00000000 		.4byte	RTC_alarmCurStatus
 3889 09ff 1C       		.uleb128 0x1c
 3890 0a00 77000000 		.4byte	0x77
 3891 0a04 0F0A0000 		.4byte	0xa0f
 3892 0a08 1D       		.uleb128 0x1d
 3893 0a09 B5000000 		.4byte	0xb5
 3894 0a0d 0B       		.byte	0xb
 3895 0a0e 00       		.byte	0
 3896 0a0f 1B       		.uleb128 0x1b
 3897 0a10 03030000 		.4byte	.LASF99
 3898 0a14 02       		.byte	0x2
 3899 0a15 2B       		.byte	0x2b
 3900 0a16 200A0000 		.4byte	0xa20
 3901 0a1a 05       		.uleb128 0x5
 3902 0a1b 03       		.byte	0x3
 3903 0a1c 00000000 		.4byte	RTC_daysBeforeMonthTbl
 3904 0a20 1E       		.uleb128 0x1e
 3905 0a21 FF090000 		.4byte	0x9ff
 3906 0a25 1C       		.uleb128 0x1c
 3907 0a26 6B000000 		.4byte	0x6b
 3908 0a2a 350A0000 		.4byte	0xa35
 3909 0a2e 1D       		.uleb128 0x1d
 3910 0a2f B5000000 		.4byte	0xb5
 3911 0a33 0B       		.byte	0xb
 3912 0a34 00       		.byte	0
 3913 0a35 1B       		.uleb128 0x1b
 3914 0a36 73000000 		.4byte	.LASF100
 3915 0a3a 02       		.byte	0x2
 3916 0a3b 39       		.byte	0x39
 3917 0a3c 460A0000 		.4byte	0xa46
 3918 0a40 05       		.uleb128 0x5
 3919 0a41 03       		.byte	0x3
 3920 0a42 00000000 		.4byte	RTC_daysInMonthTbl
 3921 0a46 1E       		.uleb128 0x1e
 3922 0a47 250A0000 		.4byte	0xa25
 3923 0a4b 00       		.byte	0
 3924              		.section	.debug_abbrev,"",%progbits
 3925              	.Ldebug_abbrev0:
 3926 0000 01       		.uleb128 0x1
 3927 0001 11       		.uleb128 0x11
 3928 0002 01       		.byte	0x1
 3929 0003 25       		.uleb128 0x25
 3930 0004 0E       		.uleb128 0xe
 3931 0005 13       		.uleb128 0x13
 3932 0006 0B       		.uleb128 0xb
 3933 0007 03       		.uleb128 0x3
 3934 0008 0E       		.uleb128 0xe
 3935 0009 1B       		.uleb128 0x1b
 3936 000a 0E       		.uleb128 0xe
 3937 000b 55       		.uleb128 0x55
 3938 000c 17       		.uleb128 0x17
 3939 000d 11       		.uleb128 0x11
 3940 000e 01       		.uleb128 0x1
 3941 000f 10       		.uleb128 0x10
 3942 0010 17       		.uleb128 0x17
 3943 0011 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 120


 3944 0012 00       		.byte	0
 3945 0013 02       		.uleb128 0x2
 3946 0014 24       		.uleb128 0x24
 3947 0015 00       		.byte	0
 3948 0016 0B       		.uleb128 0xb
 3949 0017 0B       		.uleb128 0xb
 3950 0018 3E       		.uleb128 0x3e
 3951 0019 0B       		.uleb128 0xb
 3952 001a 03       		.uleb128 0x3
 3953 001b 0E       		.uleb128 0xe
 3954 001c 00       		.byte	0
 3955 001d 00       		.byte	0
 3956 001e 03       		.uleb128 0x3
 3957 001f 24       		.uleb128 0x24
 3958 0020 00       		.byte	0
 3959 0021 0B       		.uleb128 0xb
 3960 0022 0B       		.uleb128 0xb
 3961 0023 3E       		.uleb128 0x3e
 3962 0024 0B       		.uleb128 0xb
 3963 0025 03       		.uleb128 0x3
 3964 0026 08       		.uleb128 0x8
 3965 0027 00       		.byte	0
 3966 0028 00       		.byte	0
 3967 0029 04       		.uleb128 0x4
 3968 002a 16       		.uleb128 0x16
 3969 002b 00       		.byte	0
 3970 002c 03       		.uleb128 0x3
 3971 002d 0E       		.uleb128 0xe
 3972 002e 3A       		.uleb128 0x3a
 3973 002f 0B       		.uleb128 0xb
 3974 0030 3B       		.uleb128 0x3b
 3975 0031 05       		.uleb128 0x5
 3976 0032 49       		.uleb128 0x49
 3977 0033 13       		.uleb128 0x13
 3978 0034 00       		.byte	0
 3979 0035 00       		.byte	0
 3980 0036 05       		.uleb128 0x5
 3981 0037 35       		.uleb128 0x35
 3982 0038 00       		.byte	0
 3983 0039 49       		.uleb128 0x49
 3984 003a 13       		.uleb128 0x13
 3985 003b 00       		.byte	0
 3986 003c 00       		.byte	0
 3987 003d 06       		.uleb128 0x6
 3988 003e 13       		.uleb128 0x13
 3989 003f 01       		.byte	0x1
 3990 0040 0B       		.uleb128 0xb
 3991 0041 0B       		.uleb128 0xb
 3992 0042 3A       		.uleb128 0x3a
 3993 0043 0B       		.uleb128 0xb
 3994 0044 3B       		.uleb128 0x3b
 3995 0045 0B       		.uleb128 0xb
 3996 0046 01       		.uleb128 0x1
 3997 0047 13       		.uleb128 0x13
 3998 0048 00       		.byte	0
 3999 0049 00       		.byte	0
 4000 004a 07       		.uleb128 0x7
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 121


 4001 004b 0D       		.uleb128 0xd
 4002 004c 00       		.byte	0
 4003 004d 03       		.uleb128 0x3
 4004 004e 0E       		.uleb128 0xe
 4005 004f 3A       		.uleb128 0x3a
 4006 0050 0B       		.uleb128 0xb
 4007 0051 3B       		.uleb128 0x3b
 4008 0052 0B       		.uleb128 0xb
 4009 0053 49       		.uleb128 0x49
 4010 0054 13       		.uleb128 0x13
 4011 0055 38       		.uleb128 0x38
 4012 0056 0B       		.uleb128 0xb
 4013 0057 00       		.byte	0
 4014 0058 00       		.byte	0
 4015 0059 08       		.uleb128 0x8
 4016 005a 16       		.uleb128 0x16
 4017 005b 00       		.byte	0
 4018 005c 03       		.uleb128 0x3
 4019 005d 0E       		.uleb128 0xe
 4020 005e 3A       		.uleb128 0x3a
 4021 005f 0B       		.uleb128 0xb
 4022 0060 3B       		.uleb128 0x3b
 4023 0061 0B       		.uleb128 0xb
 4024 0062 49       		.uleb128 0x49
 4025 0063 13       		.uleb128 0x13
 4026 0064 00       		.byte	0
 4027 0065 00       		.byte	0
 4028 0066 09       		.uleb128 0x9
 4029 0067 2E       		.uleb128 0x2e
 4030 0068 01       		.byte	0x1
 4031 0069 03       		.uleb128 0x3
 4032 006a 0E       		.uleb128 0xe
 4033 006b 3A       		.uleb128 0x3a
 4034 006c 0B       		.uleb128 0xb
 4035 006d 3B       		.uleb128 0x3b
 4036 006e 05       		.uleb128 0x5
 4037 006f 27       		.uleb128 0x27
 4038 0070 19       		.uleb128 0x19
 4039 0071 49       		.uleb128 0x49
 4040 0072 13       		.uleb128 0x13
 4041 0073 11       		.uleb128 0x11
 4042 0074 01       		.uleb128 0x1
 4043 0075 12       		.uleb128 0x12
 4044 0076 06       		.uleb128 0x6
 4045 0077 40       		.uleb128 0x40
 4046 0078 18       		.uleb128 0x18
 4047 0079 9742     		.uleb128 0x2117
 4048 007b 19       		.uleb128 0x19
 4049 007c 01       		.uleb128 0x1
 4050 007d 13       		.uleb128 0x13
 4051 007e 00       		.byte	0
 4052 007f 00       		.byte	0
 4053 0080 0A       		.uleb128 0xa
 4054 0081 05       		.uleb128 0x5
 4055 0082 00       		.byte	0
 4056 0083 03       		.uleb128 0x3
 4057 0084 08       		.uleb128 0x8
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 122


 4058 0085 3A       		.uleb128 0x3a
 4059 0086 0B       		.uleb128 0xb
 4060 0087 3B       		.uleb128 0x3b
 4061 0088 05       		.uleb128 0x5
 4062 0089 49       		.uleb128 0x49
 4063 008a 13       		.uleb128 0x13
 4064 008b 02       		.uleb128 0x2
 4065 008c 18       		.uleb128 0x18
 4066 008d 00       		.byte	0
 4067 008e 00       		.byte	0
 4068 008f 0B       		.uleb128 0xb
 4069 0090 05       		.uleb128 0x5
 4070 0091 00       		.byte	0
 4071 0092 03       		.uleb128 0x3
 4072 0093 0E       		.uleb128 0xe
 4073 0094 3A       		.uleb128 0x3a
 4074 0095 0B       		.uleb128 0xb
 4075 0096 3B       		.uleb128 0x3b
 4076 0097 05       		.uleb128 0x5
 4077 0098 49       		.uleb128 0x49
 4078 0099 13       		.uleb128 0x13
 4079 009a 02       		.uleb128 0x2
 4080 009b 18       		.uleb128 0x18
 4081 009c 00       		.byte	0
 4082 009d 00       		.byte	0
 4083 009e 0C       		.uleb128 0xc
 4084 009f 2E       		.uleb128 0x2e
 4085 00a0 01       		.byte	0x1
 4086 00a1 03       		.uleb128 0x3
 4087 00a2 0E       		.uleb128 0xe
 4088 00a3 3A       		.uleb128 0x3a
 4089 00a4 0B       		.uleb128 0xb
 4090 00a5 3B       		.uleb128 0x3b
 4091 00a6 05       		.uleb128 0x5
 4092 00a7 27       		.uleb128 0x27
 4093 00a8 19       		.uleb128 0x19
 4094 00a9 49       		.uleb128 0x49
 4095 00aa 13       		.uleb128 0x13
 4096 00ab 11       		.uleb128 0x11
 4097 00ac 01       		.uleb128 0x1
 4098 00ad 12       		.uleb128 0x12
 4099 00ae 06       		.uleb128 0x6
 4100 00af 40       		.uleb128 0x40
 4101 00b0 18       		.uleb128 0x18
 4102 00b1 9642     		.uleb128 0x2116
 4103 00b3 19       		.uleb128 0x19
 4104 00b4 01       		.uleb128 0x1
 4105 00b5 13       		.uleb128 0x13
 4106 00b6 00       		.byte	0
 4107 00b7 00       		.byte	0
 4108 00b8 0D       		.uleb128 0xd
 4109 00b9 34       		.uleb128 0x34
 4110 00ba 00       		.byte	0
 4111 00bb 03       		.uleb128 0x3
 4112 00bc 0E       		.uleb128 0xe
 4113 00bd 3A       		.uleb128 0x3a
 4114 00be 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 123


 4115 00bf 3B       		.uleb128 0x3b
 4116 00c0 05       		.uleb128 0x5
 4117 00c1 49       		.uleb128 0x49
 4118 00c2 13       		.uleb128 0x13
 4119 00c3 02       		.uleb128 0x2
 4120 00c4 18       		.uleb128 0x18
 4121 00c5 00       		.byte	0
 4122 00c6 00       		.byte	0
 4123 00c7 0E       		.uleb128 0xe
 4124 00c8 2E       		.uleb128 0x2e
 4125 00c9 00       		.byte	0
 4126 00ca 3F       		.uleb128 0x3f
 4127 00cb 19       		.uleb128 0x19
 4128 00cc 03       		.uleb128 0x3
 4129 00cd 0E       		.uleb128 0xe
 4130 00ce 3A       		.uleb128 0x3a
 4131 00cf 0B       		.uleb128 0xb
 4132 00d0 3B       		.uleb128 0x3b
 4133 00d1 0B       		.uleb128 0xb
 4134 00d2 27       		.uleb128 0x27
 4135 00d3 19       		.uleb128 0x19
 4136 00d4 11       		.uleb128 0x11
 4137 00d5 01       		.uleb128 0x1
 4138 00d6 12       		.uleb128 0x12
 4139 00d7 06       		.uleb128 0x6
 4140 00d8 40       		.uleb128 0x40
 4141 00d9 18       		.uleb128 0x18
 4142 00da 9642     		.uleb128 0x2116
 4143 00dc 19       		.uleb128 0x19
 4144 00dd 00       		.byte	0
 4145 00de 00       		.byte	0
 4146 00df 0F       		.uleb128 0xf
 4147 00e0 2E       		.uleb128 0x2e
 4148 00e1 00       		.byte	0
 4149 00e2 3F       		.uleb128 0x3f
 4150 00e3 19       		.uleb128 0x19
 4151 00e4 03       		.uleb128 0x3
 4152 00e5 0E       		.uleb128 0xe
 4153 00e6 3A       		.uleb128 0x3a
 4154 00e7 0B       		.uleb128 0xb
 4155 00e8 3B       		.uleb128 0x3b
 4156 00e9 0B       		.uleb128 0xb
 4157 00ea 27       		.uleb128 0x27
 4158 00eb 19       		.uleb128 0x19
 4159 00ec 11       		.uleb128 0x11
 4160 00ed 01       		.uleb128 0x1
 4161 00ee 12       		.uleb128 0x12
 4162 00ef 06       		.uleb128 0x6
 4163 00f0 40       		.uleb128 0x40
 4164 00f1 18       		.uleb128 0x18
 4165 00f2 9742     		.uleb128 0x2117
 4166 00f4 19       		.uleb128 0x19
 4167 00f5 00       		.byte	0
 4168 00f6 00       		.byte	0
 4169 00f7 10       		.uleb128 0x10
 4170 00f8 2E       		.uleb128 0x2e
 4171 00f9 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 124


 4172 00fa 3F       		.uleb128 0x3f
 4173 00fb 19       		.uleb128 0x19
 4174 00fc 03       		.uleb128 0x3
 4175 00fd 0E       		.uleb128 0xe
 4176 00fe 3A       		.uleb128 0x3a
 4177 00ff 0B       		.uleb128 0xb
 4178 0100 3B       		.uleb128 0x3b
 4179 0101 0B       		.uleb128 0xb
 4180 0102 27       		.uleb128 0x27
 4181 0103 19       		.uleb128 0x19
 4182 0104 11       		.uleb128 0x11
 4183 0105 01       		.uleb128 0x1
 4184 0106 12       		.uleb128 0x12
 4185 0107 06       		.uleb128 0x6
 4186 0108 40       		.uleb128 0x40
 4187 0109 18       		.uleb128 0x18
 4188 010a 9642     		.uleb128 0x2116
 4189 010c 19       		.uleb128 0x19
 4190 010d 01       		.uleb128 0x1
 4191 010e 13       		.uleb128 0x13
 4192 010f 00       		.byte	0
 4193 0110 00       		.byte	0
 4194 0111 11       		.uleb128 0x11
 4195 0112 34       		.uleb128 0x34
 4196 0113 00       		.byte	0
 4197 0114 03       		.uleb128 0x3
 4198 0115 0E       		.uleb128 0xe
 4199 0116 3A       		.uleb128 0x3a
 4200 0117 0B       		.uleb128 0xb
 4201 0118 3B       		.uleb128 0x3b
 4202 0119 0B       		.uleb128 0xb
 4203 011a 49       		.uleb128 0x49
 4204 011b 13       		.uleb128 0x13
 4205 011c 02       		.uleb128 0x2
 4206 011d 18       		.uleb128 0x18
 4207 011e 00       		.byte	0
 4208 011f 00       		.byte	0
 4209 0120 12       		.uleb128 0x12
 4210 0121 05       		.uleb128 0x5
 4211 0122 00       		.byte	0
 4212 0123 03       		.uleb128 0x3
 4213 0124 0E       		.uleb128 0xe
 4214 0125 3A       		.uleb128 0x3a
 4215 0126 0B       		.uleb128 0xb
 4216 0127 3B       		.uleb128 0x3b
 4217 0128 0B       		.uleb128 0xb
 4218 0129 49       		.uleb128 0x49
 4219 012a 13       		.uleb128 0x13
 4220 012b 02       		.uleb128 0x2
 4221 012c 18       		.uleb128 0x18
 4222 012d 00       		.byte	0
 4223 012e 00       		.byte	0
 4224 012f 13       		.uleb128 0x13
 4225 0130 2E       		.uleb128 0x2e
 4226 0131 01       		.byte	0x1
 4227 0132 3F       		.uleb128 0x3f
 4228 0133 19       		.uleb128 0x19
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 125


 4229 0134 03       		.uleb128 0x3
 4230 0135 0E       		.uleb128 0xe
 4231 0136 3A       		.uleb128 0x3a
 4232 0137 0B       		.uleb128 0xb
 4233 0138 3B       		.uleb128 0x3b
 4234 0139 05       		.uleb128 0x5
 4235 013a 27       		.uleb128 0x27
 4236 013b 19       		.uleb128 0x19
 4237 013c 11       		.uleb128 0x11
 4238 013d 01       		.uleb128 0x1
 4239 013e 12       		.uleb128 0x12
 4240 013f 06       		.uleb128 0x6
 4241 0140 40       		.uleb128 0x40
 4242 0141 18       		.uleb128 0x18
 4243 0142 9642     		.uleb128 0x2116
 4244 0144 19       		.uleb128 0x19
 4245 0145 01       		.uleb128 0x1
 4246 0146 13       		.uleb128 0x13
 4247 0147 00       		.byte	0
 4248 0148 00       		.byte	0
 4249 0149 14       		.uleb128 0x14
 4250 014a 2E       		.uleb128 0x2e
 4251 014b 00       		.byte	0
 4252 014c 3F       		.uleb128 0x3f
 4253 014d 19       		.uleb128 0x19
 4254 014e 03       		.uleb128 0x3
 4255 014f 0E       		.uleb128 0xe
 4256 0150 3A       		.uleb128 0x3a
 4257 0151 0B       		.uleb128 0xb
 4258 0152 3B       		.uleb128 0x3b
 4259 0153 05       		.uleb128 0x5
 4260 0154 27       		.uleb128 0x27
 4261 0155 19       		.uleb128 0x19
 4262 0156 49       		.uleb128 0x49
 4263 0157 13       		.uleb128 0x13
 4264 0158 11       		.uleb128 0x11
 4265 0159 01       		.uleb128 0x1
 4266 015a 12       		.uleb128 0x12
 4267 015b 06       		.uleb128 0x6
 4268 015c 40       		.uleb128 0x40
 4269 015d 18       		.uleb128 0x18
 4270 015e 9742     		.uleb128 0x2117
 4271 0160 19       		.uleb128 0x19
 4272 0161 00       		.byte	0
 4273 0162 00       		.byte	0
 4274 0163 15       		.uleb128 0x15
 4275 0164 2E       		.uleb128 0x2e
 4276 0165 01       		.byte	0x1
 4277 0166 3F       		.uleb128 0x3f
 4278 0167 19       		.uleb128 0x19
 4279 0168 03       		.uleb128 0x3
 4280 0169 0E       		.uleb128 0xe
 4281 016a 3A       		.uleb128 0x3a
 4282 016b 0B       		.uleb128 0xb
 4283 016c 3B       		.uleb128 0x3b
 4284 016d 05       		.uleb128 0x5
 4285 016e 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 126


 4286 016f 19       		.uleb128 0x19
 4287 0170 11       		.uleb128 0x11
 4288 0171 01       		.uleb128 0x1
 4289 0172 12       		.uleb128 0x12
 4290 0173 06       		.uleb128 0x6
 4291 0174 40       		.uleb128 0x40
 4292 0175 18       		.uleb128 0x18
 4293 0176 9742     		.uleb128 0x2117
 4294 0178 19       		.uleb128 0x19
 4295 0179 01       		.uleb128 0x1
 4296 017a 13       		.uleb128 0x13
 4297 017b 00       		.byte	0
 4298 017c 00       		.byte	0
 4299 017d 16       		.uleb128 0x16
 4300 017e 0F       		.uleb128 0xf
 4301 017f 00       		.byte	0
 4302 0180 0B       		.uleb128 0xb
 4303 0181 0B       		.uleb128 0xb
 4304 0182 49       		.uleb128 0x49
 4305 0183 13       		.uleb128 0x13
 4306 0184 00       		.byte	0
 4307 0185 00       		.byte	0
 4308 0186 17       		.uleb128 0x17
 4309 0187 2E       		.uleb128 0x2e
 4310 0188 00       		.byte	0
 4311 0189 3F       		.uleb128 0x3f
 4312 018a 19       		.uleb128 0x19
 4313 018b 03       		.uleb128 0x3
 4314 018c 0E       		.uleb128 0xe
 4315 018d 3A       		.uleb128 0x3a
 4316 018e 0B       		.uleb128 0xb
 4317 018f 3B       		.uleb128 0x3b
 4318 0190 05       		.uleb128 0x5
 4319 0191 27       		.uleb128 0x27
 4320 0192 19       		.uleb128 0x19
 4321 0193 49       		.uleb128 0x49
 4322 0194 13       		.uleb128 0x13
 4323 0195 11       		.uleb128 0x11
 4324 0196 01       		.uleb128 0x1
 4325 0197 12       		.uleb128 0x12
 4326 0198 06       		.uleb128 0x6
 4327 0199 40       		.uleb128 0x40
 4328 019a 18       		.uleb128 0x18
 4329 019b 9642     		.uleb128 0x2116
 4330 019d 19       		.uleb128 0x19
 4331 019e 00       		.byte	0
 4332 019f 00       		.byte	0
 4333 01a0 18       		.uleb128 0x18
 4334 01a1 2E       		.uleb128 0x2e
 4335 01a2 01       		.byte	0x1
 4336 01a3 3F       		.uleb128 0x3f
 4337 01a4 19       		.uleb128 0x19
 4338 01a5 03       		.uleb128 0x3
 4339 01a6 0E       		.uleb128 0xe
 4340 01a7 3A       		.uleb128 0x3a
 4341 01a8 0B       		.uleb128 0xb
 4342 01a9 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 127


 4343 01aa 05       		.uleb128 0x5
 4344 01ab 27       		.uleb128 0x27
 4345 01ac 19       		.uleb128 0x19
 4346 01ad 49       		.uleb128 0x49
 4347 01ae 13       		.uleb128 0x13
 4348 01af 11       		.uleb128 0x11
 4349 01b0 01       		.uleb128 0x1
 4350 01b1 12       		.uleb128 0x12
 4351 01b2 06       		.uleb128 0x6
 4352 01b3 40       		.uleb128 0x40
 4353 01b4 18       		.uleb128 0x18
 4354 01b5 9642     		.uleb128 0x2116
 4355 01b7 19       		.uleb128 0x19
 4356 01b8 01       		.uleb128 0x1
 4357 01b9 13       		.uleb128 0x13
 4358 01ba 00       		.byte	0
 4359 01bb 00       		.byte	0
 4360 01bc 19       		.uleb128 0x19
 4361 01bd 2E       		.uleb128 0x2e
 4362 01be 01       		.byte	0x1
 4363 01bf 3F       		.uleb128 0x3f
 4364 01c0 19       		.uleb128 0x19
 4365 01c1 03       		.uleb128 0x3
 4366 01c2 0E       		.uleb128 0xe
 4367 01c3 3A       		.uleb128 0x3a
 4368 01c4 0B       		.uleb128 0xb
 4369 01c5 3B       		.uleb128 0x3b
 4370 01c6 05       		.uleb128 0x5
 4371 01c7 27       		.uleb128 0x27
 4372 01c8 19       		.uleb128 0x19
 4373 01c9 49       		.uleb128 0x49
 4374 01ca 13       		.uleb128 0x13
 4375 01cb 11       		.uleb128 0x11
 4376 01cc 01       		.uleb128 0x1
 4377 01cd 12       		.uleb128 0x12
 4378 01ce 06       		.uleb128 0x6
 4379 01cf 40       		.uleb128 0x40
 4380 01d0 18       		.uleb128 0x18
 4381 01d1 9742     		.uleb128 0x2117
 4382 01d3 19       		.uleb128 0x19
 4383 01d4 01       		.uleb128 0x1
 4384 01d5 13       		.uleb128 0x13
 4385 01d6 00       		.byte	0
 4386 01d7 00       		.byte	0
 4387 01d8 1A       		.uleb128 0x1a
 4388 01d9 34       		.uleb128 0x34
 4389 01da 00       		.byte	0
 4390 01db 03       		.uleb128 0x3
 4391 01dc 08       		.uleb128 0x8
 4392 01dd 3A       		.uleb128 0x3a
 4393 01de 0B       		.uleb128 0xb
 4394 01df 3B       		.uleb128 0x3b
 4395 01e0 05       		.uleb128 0x5
 4396 01e1 49       		.uleb128 0x49
 4397 01e2 13       		.uleb128 0x13
 4398 01e3 02       		.uleb128 0x2
 4399 01e4 18       		.uleb128 0x18
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 128


 4400 01e5 00       		.byte	0
 4401 01e6 00       		.byte	0
 4402 01e7 1B       		.uleb128 0x1b
 4403 01e8 34       		.uleb128 0x34
 4404 01e9 00       		.byte	0
 4405 01ea 03       		.uleb128 0x3
 4406 01eb 0E       		.uleb128 0xe
 4407 01ec 3A       		.uleb128 0x3a
 4408 01ed 0B       		.uleb128 0xb
 4409 01ee 3B       		.uleb128 0x3b
 4410 01ef 0B       		.uleb128 0xb
 4411 01f0 49       		.uleb128 0x49
 4412 01f1 13       		.uleb128 0x13
 4413 01f2 3F       		.uleb128 0x3f
 4414 01f3 19       		.uleb128 0x19
 4415 01f4 02       		.uleb128 0x2
 4416 01f5 18       		.uleb128 0x18
 4417 01f6 00       		.byte	0
 4418 01f7 00       		.byte	0
 4419 01f8 1C       		.uleb128 0x1c
 4420 01f9 01       		.uleb128 0x1
 4421 01fa 01       		.byte	0x1
 4422 01fb 49       		.uleb128 0x49
 4423 01fc 13       		.uleb128 0x13
 4424 01fd 01       		.uleb128 0x1
 4425 01fe 13       		.uleb128 0x13
 4426 01ff 00       		.byte	0
 4427 0200 00       		.byte	0
 4428 0201 1D       		.uleb128 0x1d
 4429 0202 21       		.uleb128 0x21
 4430 0203 00       		.byte	0
 4431 0204 49       		.uleb128 0x49
 4432 0205 13       		.uleb128 0x13
 4433 0206 2F       		.uleb128 0x2f
 4434 0207 0B       		.uleb128 0xb
 4435 0208 00       		.byte	0
 4436 0209 00       		.byte	0
 4437 020a 1E       		.uleb128 0x1e
 4438 020b 26       		.uleb128 0x26
 4439 020c 00       		.byte	0
 4440 020d 49       		.uleb128 0x49
 4441 020e 13       		.uleb128 0x13
 4442 020f 00       		.byte	0
 4443 0210 00       		.byte	0
 4444 0211 00       		.byte	0
 4445              		.section	.debug_aranges,"",%progbits
 4446 0000 24010000 		.4byte	0x124
 4447 0004 0200     		.2byte	0x2
 4448 0006 00000000 		.4byte	.Ldebug_info0
 4449 000a 04       		.byte	0x4
 4450 000b 00       		.byte	0
 4451 000c 0000     		.2byte	0
 4452 000e 0000     		.2byte	0
 4453 0010 00000000 		.4byte	.LFB2
 4454 0014 24000000 		.4byte	.LFE2-.LFB2
 4455 0018 00000000 		.4byte	.LFB3
 4456 001c 42000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 129


 4457 0020 00000000 		.4byte	.LFB4
 4458 0024 30000000 		.4byte	.LFE4-.LFB4
 4459 0028 00000000 		.4byte	.LFB5
 4460 002c 36000000 		.4byte	.LFE5-.LFB5
 4461 0030 00000000 		.4byte	.LFB6
 4462 0034 36000000 		.4byte	.LFE6-.LFB6
 4463 0038 00000000 		.4byte	.LFB7
 4464 003c 20000000 		.4byte	.LFE7-.LFB7
 4465 0040 00000000 		.4byte	.LFB8
 4466 0044 36000000 		.4byte	.LFE8-.LFB8
 4467 0048 00000000 		.4byte	.LFB9
 4468 004c 36000000 		.4byte	.LFE9-.LFB9
 4469 0050 00000000 		.4byte	.LFB10
 4470 0054 5C000000 		.4byte	.LFE10-.LFB10
 4471 0058 00000000 		.4byte	.LFB24
 4472 005c 20000000 		.4byte	.LFE24-.LFB24
 4473 0060 00000000 		.4byte	.LFB25
 4474 0064 A0000000 		.4byte	.LFE25-.LFB25
 4475 0068 00000000 		.4byte	.LFB26
 4476 006c D6000000 		.4byte	.LFE26-.LFB26
 4477 0070 00000000 		.4byte	.LFB27
 4478 0074 88000000 		.4byte	.LFE27-.LFB27
 4479 0078 00000000 		.4byte	.LFB28
 4480 007c 18000000 		.4byte	.LFE28-.LFB28
 4481 0080 00000000 		.4byte	.LFB29
 4482 0084 08000000 		.4byte	.LFE29-.LFB29
 4483 0088 00000000 		.4byte	.LFB30
 4484 008c 70000000 		.4byte	.LFE30-.LFB30
 4485 0090 00000000 		.4byte	.LFB31
 4486 0094 74000000 		.4byte	.LFE31-.LFB31
 4487 0098 00000000 		.4byte	.LFB32
 4488 009c 34000000 		.4byte	.LFE32-.LFB32
 4489 00a0 00000000 		.4byte	.LFB33
 4490 00a4 18000000 		.4byte	.LFE33-.LFB33
 4491 00a8 00000000 		.4byte	.LFB34
 4492 00ac 24000000 		.4byte	.LFE34-.LFB34
 4493 00b0 00000000 		.4byte	.LFB35
 4494 00b4 14000000 		.4byte	.LFE35-.LFB35
 4495 00b8 00000000 		.4byte	.LFB36
 4496 00bc 14000000 		.4byte	.LFE36-.LFB36
 4497 00c0 00000000 		.4byte	.LFB37
 4498 00c4 3C000000 		.4byte	.LFE37-.LFB37
 4499 00c8 00000000 		.4byte	.LFB38
 4500 00cc 44000000 		.4byte	.LFE38-.LFB38
 4501 00d0 00000000 		.4byte	.LFB39
 4502 00d4 44000000 		.4byte	.LFE39-.LFB39
 4503 00d8 00000000 		.4byte	.LFB40
 4504 00dc 80000000 		.4byte	.LFE40-.LFB40
 4505 00e0 00000000 		.4byte	.LFB41
 4506 00e4 4E000000 		.4byte	.LFE41-.LFB41
 4507 00e8 00000000 		.4byte	.LFB42
 4508 00ec 60000000 		.4byte	.LFE42-.LFB42
 4509 00f0 00000000 		.4byte	.LFB43
 4510 00f4 4C000000 		.4byte	.LFE43-.LFB43
 4511 00f8 00000000 		.4byte	.LFB44
 4512 00fc 90010000 		.4byte	.LFE44-.LFB44
 4513 0100 00000000 		.4byte	.LFB45
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 130


 4514 0104 AC020000 		.4byte	.LFE45-.LFB45
 4515 0108 00000000 		.4byte	.LFB46
 4516 010c 82000000 		.4byte	.LFE46-.LFB46
 4517 0110 00000000 		.4byte	.LFB47
 4518 0114 3C000000 		.4byte	.LFE47-.LFB47
 4519 0118 00000000 		.4byte	.LFB48
 4520 011c 3C000000 		.4byte	.LFE48-.LFB48
 4521 0120 00000000 		.4byte	0
 4522 0124 00000000 		.4byte	0
 4523              		.section	.debug_ranges,"",%progbits
 4524              	.Ldebug_ranges0:
 4525 0000 00000000 		.4byte	.LFB2
 4526 0004 24000000 		.4byte	.LFE2
 4527 0008 00000000 		.4byte	.LFB3
 4528 000c 42000000 		.4byte	.LFE3
 4529 0010 00000000 		.4byte	.LFB4
 4530 0014 30000000 		.4byte	.LFE4
 4531 0018 00000000 		.4byte	.LFB5
 4532 001c 36000000 		.4byte	.LFE5
 4533 0020 00000000 		.4byte	.LFB6
 4534 0024 36000000 		.4byte	.LFE6
 4535 0028 00000000 		.4byte	.LFB7
 4536 002c 20000000 		.4byte	.LFE7
 4537 0030 00000000 		.4byte	.LFB8
 4538 0034 36000000 		.4byte	.LFE8
 4539 0038 00000000 		.4byte	.LFB9
 4540 003c 36000000 		.4byte	.LFE9
 4541 0040 00000000 		.4byte	.LFB10
 4542 0044 5C000000 		.4byte	.LFE10
 4543 0048 00000000 		.4byte	.LFB24
 4544 004c 20000000 		.4byte	.LFE24
 4545 0050 00000000 		.4byte	.LFB25
 4546 0054 A0000000 		.4byte	.LFE25
 4547 0058 00000000 		.4byte	.LFB26
 4548 005c D6000000 		.4byte	.LFE26
 4549 0060 00000000 		.4byte	.LFB27
 4550 0064 88000000 		.4byte	.LFE27
 4551 0068 00000000 		.4byte	.LFB28
 4552 006c 18000000 		.4byte	.LFE28
 4553 0070 00000000 		.4byte	.LFB29
 4554 0074 08000000 		.4byte	.LFE29
 4555 0078 00000000 		.4byte	.LFB30
 4556 007c 70000000 		.4byte	.LFE30
 4557 0080 00000000 		.4byte	.LFB31
 4558 0084 74000000 		.4byte	.LFE31
 4559 0088 00000000 		.4byte	.LFB32
 4560 008c 34000000 		.4byte	.LFE32
 4561 0090 00000000 		.4byte	.LFB33
 4562 0094 18000000 		.4byte	.LFE33
 4563 0098 00000000 		.4byte	.LFB34
 4564 009c 24000000 		.4byte	.LFE34
 4565 00a0 00000000 		.4byte	.LFB35
 4566 00a4 14000000 		.4byte	.LFE35
 4567 00a8 00000000 		.4byte	.LFB36
 4568 00ac 14000000 		.4byte	.LFE36
 4569 00b0 00000000 		.4byte	.LFB37
 4570 00b4 3C000000 		.4byte	.LFE37
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 131


 4571 00b8 00000000 		.4byte	.LFB38
 4572 00bc 44000000 		.4byte	.LFE38
 4573 00c0 00000000 		.4byte	.LFB39
 4574 00c4 44000000 		.4byte	.LFE39
 4575 00c8 00000000 		.4byte	.LFB40
 4576 00cc 80000000 		.4byte	.LFE40
 4577 00d0 00000000 		.4byte	.LFB41
 4578 00d4 4E000000 		.4byte	.LFE41
 4579 00d8 00000000 		.4byte	.LFB42
 4580 00dc 60000000 		.4byte	.LFE42
 4581 00e0 00000000 		.4byte	.LFB43
 4582 00e4 4C000000 		.4byte	.LFE43
 4583 00e8 00000000 		.4byte	.LFB44
 4584 00ec 90010000 		.4byte	.LFE44
 4585 00f0 00000000 		.4byte	.LFB45
 4586 00f4 AC020000 		.4byte	.LFE45
 4587 00f8 00000000 		.4byte	.LFB46
 4588 00fc 82000000 		.4byte	.LFE46
 4589 0100 00000000 		.4byte	.LFB47
 4590 0104 3C000000 		.4byte	.LFE47
 4591 0108 00000000 		.4byte	.LFB48
 4592 010c 3C000000 		.4byte	.LFE48
 4593 0110 00000000 		.4byte	0
 4594 0114 00000000 		.4byte	0
 4595              		.section	.debug_line,"",%progbits
 4596              	.Ldebug_line0:
 4597 0000 AF040000 		.section	.debug_str,"MS",%progbits,1
 4597      02006200 
 4597      00000201 
 4597      FB0E0D00 
 4597      01010101 
 4598              	.LASF64:
 4599 0000 64617465 		.ascii	"dateTime\000"
 4599      54696D65 
 4599      00
 4600              	.LASF51:
 4601 0009 746D7044 		.ascii	"tmpDay\000"
 4601      617900
 4602              	.LASF33:
 4603 0010 5254435F 		.ascii	"RTC_GetMonth\000"
 4603      4765744D 
 4603      6F6E7468 
 4603      00
 4604              	.LASF10:
 4605 001d 75696E74 		.ascii	"uint16\000"
 4605      313600
 4606              	.LASF28:
 4607 0024 72657456 		.ascii	"retVal\000"
 4607      616C00
 4608              	.LASF26:
 4609 002b 5254435F 		.ascii	"RTC_GetSecond\000"
 4609      47657453 
 4609      65636F6E 
 4609      6400
 4610              	.LASF63:
 4611 0039 5254435F 		.ascii	"RTC_GetDateAndTime\000"
 4611      47657444 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 132


 4611      61746541 
 4611      6E645469 
 4611      6D6500
 4612              	.LASF35:
 4613 004c 5254435F 		.ascii	"RTC_GetTimeFormat\000"
 4613      47657454 
 4613      696D6546 
 4613      6F726D61 
 4613      7400
 4614              	.LASF46:
 4615 005e 746D7044 		.ascii	"tmpDate\000"
 4615      61746500 
 4616              	.LASF24:
 4617 0066 5254435F 		.ascii	"RTC_LeapYear\000"
 4617      4C656170 
 4617      59656172 
 4617      00
 4618              	.LASF100:
 4619 0073 5254435F 		.ascii	"RTC_daysInMonthTbl\000"
 4619      64617973 
 4619      496E4D6F 
 4619      6E746854 
 4619      626C00
 4620              	.LASF48:
 4621 0086 5254435F 		.ascii	"RTC_Init\000"
 4621      496E6974 
 4621      00
 4622              	.LASF79:
 4623 008f 746D704D 		.ascii	"tmpMinute\000"
 4623      696E7574 
 4623      6500
 4624              	.LASF83:
 4625 0099 5254435F 		.ascii	"RTC_RelativeToFixed\000"
 4625      52656C61 
 4625      74697665 
 4625      546F4669 
 4625      78656400 
 4626              	.LASF7:
 4627 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 4627      206C6F6E 
 4627      6720756E 
 4627      7369676E 
 4627      65642069 
 4628              	.LASF43:
 4629 00c4 5254435F 		.ascii	"RTC_GetDayOfWeek\000"
 4629      47657444 
 4629      61794F66 
 4629      5765656B 
 4629      00
 4630              	.LASF89:
 4631 00d5 5254435F 		.ascii	"RTC_DaysInMonth\000"
 4631      44617973 
 4631      496E4D6F 
 4631      6E746800 
 4632              	.LASF52:
 4633 00e5 746D704D 		.ascii	"tmpMonth\000"
 4633      6F6E7468 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 133


 4633      00
 4634              	.LASF84:
 4635 00ee 7765656B 		.ascii	"weekOfMonth\000"
 4635      4F664D6F 
 4635      6E746800 
 4636              	.LASF81:
 4637 00fa 746D7041 		.ascii	"tmpAmPmState\000"
 4637      6D506D53 
 4637      74617465 
 4637      00
 4638              	.LASF90:
 4639 0107 5254435F 		.ascii	"RTC_DaysBeforeMonth\000"
 4639      44617973 
 4639      4265666F 
 4639      72654D6F 
 4639      6E746800 
 4640              	.LASF70:
 4641 011b 6263644E 		.ascii	"bcdNum\000"
 4641      756D00
 4642              	.LASF87:
 4643 0122 64617973 		.ascii	"daysInMonth\000"
 4643      496E4D6F 
 4643      6E746800 
 4644              	.LASF6:
 4645 012e 6C6F6E67 		.ascii	"long long int\000"
 4645      206C6F6E 
 4645      6720696E 
 4645      7400
 4646              	.LASF0:
 4647 013c 7369676E 		.ascii	"signed char\000"
 4647      65642063 
 4647      68617200 
 4648              	.LASF57:
 4649 0148 5254435F 		.ascii	"RTC_SetPeriod\000"
 4649      53657450 
 4649      6572696F 
 4649      6400
 4650              	.LASF91:
 4651 0156 5254435F 		.ascii	"RTC_updateTimePeriod\000"
 4651      75706461 
 4651      74655469 
 4651      6D655065 
 4651      72696F64 
 4652              	.LASF44:
 4653 016b 5254435F 		.ascii	"RTC_Start\000"
 4653      53746172 
 4653      7400
 4654              	.LASF94:
 4655 0175 5254435F 		.ascii	"RTC_initVar\000"
 4655      696E6974 
 4655      56617200 
 4656              	.LASF25:
 4657 0181 79656172 		.ascii	"year\000"
 4657      00
 4658              	.LASF54:
 4659 0186 5254435F 		.ascii	"RTC_SetUnixTime\000"
 4659      53657455 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 134


 4659      6E697854 
 4659      696D6500 
 4660              	.LASF67:
 4661 0196 746D7054 		.ascii	"tmpTimeDate\000"
 4661      696D6544 
 4661      61746500 
 4662              	.LASF4:
 4663 01a2 6C6F6E67 		.ascii	"long int\000"
 4663      20696E74 
 4663      00
 4664              	.LASF69:
 4665 01ab 5254435F 		.ascii	"RTC_ConvertBCDToDec\000"
 4665      436F6E76 
 4665      65727442 
 4665      4344546F 
 4665      44656300 
 4666              	.LASF29:
 4667 01bf 5254435F 		.ascii	"RTC_GetMinutes\000"
 4667      4765744D 
 4667      696E7574 
 4667      657300
 4668              	.LASF9:
 4669 01ce 75696E74 		.ascii	"uint8\000"
 4669      3800
 4670              	.LASF59:
 4671 01d4 7265664F 		.ascii	"refOneSecTicks\000"
 4671      6E655365 
 4671      63546963 
 4671      6B7300
 4672              	.LASF85:
 4673 01e3 63757244 		.ascii	"curDay\000"
 4673      617900
 4674              	.LASF13:
 4675 01ea 646F7562 		.ascii	"double\000"
 4675      6C6500
 4676              	.LASF34:
 4677 01f1 5254435F 		.ascii	"RTC_GetYear\000"
 4677      47657459 
 4677      65617200 
 4678              	.LASF74:
 4679 01fd 73686966 		.ascii	"shift\000"
 4679      7400
 4680              	.LASF11:
 4681 0203 75696E74 		.ascii	"uint32\000"
 4681      333200
 4682              	.LASF96:
 4683 020a 5254435F 		.ascii	"RTC_unixTime\000"
 4683      756E6978 
 4683      54696D65 
 4683      00
 4684              	.LASF49:
 4685 0217 5254435F 		.ascii	"RTC_SetDateAndTime\000"
 4685      53657444 
 4685      61746541 
 4685      6E645469 
 4685      6D6500
 4686              	.LASF22:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 135


 4687 022a 6D61736B 		.ascii	"mask\000"
 4687      00
 4688              	.LASF98:
 4689 022f 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 4689      616C6172 
 4689      6D437572 
 4689      53746174 
 4689      757300
 4690              	.LASF41:
 4691 0242 6D6F6E74 		.ascii	"month\000"
 4691      6800
 4692              	.LASF8:
 4693 0248 756E7369 		.ascii	"unsigned int\000"
 4693      676E6564 
 4693      20696E74 
 4693      00
 4694              	.LASF37:
 4695 0255 74696D65 		.ascii	"timeFormat\000"
 4695      466F726D 
 4695      617400
 4696              	.LASF72:
 4697 0260 5254435F 		.ascii	"RTC_ConvertDecToBCD\000"
 4697      436F6E76 
 4697      65727444 
 4697      6563546F 
 4697      42434400 
 4698              	.LASF86:
 4699 0274 63757257 		.ascii	"curWeek\000"
 4699      65656B00 
 4700              	.LASF5:
 4701 027c 6C6F6E67 		.ascii	"long unsigned int\000"
 4701      20756E73 
 4701      69676E65 
 4701      6420696E 
 4701      7400
 4702              	.LASF30:
 4703 028e 5254435F 		.ascii	"RTC_GetHours\000"
 4703      47657448 
 4703      6F757273 
 4703      00
 4704              	.LASF61:
 4705 029b 5254435F 		.ascii	"RTC_GetPeriod\000"
 4705      47657450 
 4705      6572696F 
 4705      6400
 4706              	.LASF3:
 4707 02a9 73686F72 		.ascii	"short unsigned int\000"
 4707      7420756E 
 4707      7369676E 
 4707      65642069 
 4707      6E7400
 4708              	.LASF18:
 4709 02bc 64617465 		.ascii	"date\000"
 4709      00
 4710              	.LASF77:
 4711 02c1 5254435F 		.ascii	"RTC_DateTimeToUnix\000"
 4711      44617465 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 136


 4711      54696D65 
 4711      546F556E 
 4711      697800
 4712              	.LASF19:
 4713 02d4 6461794F 		.ascii	"dayOfWeek\000"
 4713      66576565 
 4713      6B00
 4714              	.LASF88:
 4715 02de 6461794F 		.ascii	"dayOfMonthTmp\000"
 4715      664D6F6E 
 4715      7468546D 
 4715      7000
 4716              	.LASF16:
 4717 02ec 73697A65 		.ascii	"sizetype\000"
 4717      74797065 
 4717      00
 4718              	.LASF58:
 4719 02f5 7469636B 		.ascii	"ticks\000"
 4719      7300
 4720              	.LASF53:
 4721 02fb 746D7059 		.ascii	"tmpYear\000"
 4721      65617200 
 4722              	.LASF99:
 4723 0303 5254435F 		.ascii	"RTC_daysBeforeMonthTbl\000"
 4723      64617973 
 4723      4265666F 
 4723      72654D6F 
 4723      6E746854 
 4724              	.LASF80:
 4725 031a 746D7048 		.ascii	"tmpHour\000"
 4725      6F757200 
 4726              	.LASF93:
 4727 0322 5254435F 		.ascii	"RTC_dstTimeOffset\000"
 4727      64737454 
 4727      696D654F 
 4727      66667365 
 4727      7400
 4728              	.LASF17:
 4729 0334 74696D65 		.ascii	"time\000"
 4729      00
 4730              	.LASF102:
 4731 0339 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\RTC.c\000"
 4731      6E657261 
 4731      7465645F 
 4731      536F7572 
 4731      63655C50 
 4732              	.LASF39:
 4733 0358 686F7572 		.ascii	"hour\000"
 4733      00
 4734              	.LASF12:
 4735 035d 666C6F61 		.ascii	"float\000"
 4735      7400
 4736              	.LASF60:
 4737 0363 5254435F 		.ascii	"RTC_GetUnixTime\000"
 4737      47657455 
 4737      6E697854 
 4737      696D6500 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 137


 4738              	.LASF62:
 4739 0373 5254435F 		.ascii	"RTC_GetRefOneSec\000"
 4739      47657452 
 4739      65664F6E 
 4739      65536563 
 4739      00
 4740              	.LASF38:
 4741 0384 73746174 		.ascii	"stateAmPm\000"
 4741      65416D50 
 4741      6D00
 4742              	.LASF1:
 4743 038e 756E7369 		.ascii	"unsigned char\000"
 4743      676E6564 
 4743      20636861 
 4743      7200
 4744              	.LASF97:
 4745 039c 5254435F 		.ascii	"RTC_currentTimeDate\000"
 4745      63757272 
 4745      656E7454 
 4745      696D6544 
 4745      61746500 
 4746              	.LASF36:
 4747 03b0 5254435F 		.ascii	"RTC_ConstructTime\000"
 4747      436F6E73 
 4747      74727563 
 4747      7454696D 
 4747      6500
 4748              	.LASF27:
 4749 03c2 696E7075 		.ascii	"inputTime\000"
 4749      7454696D 
 4749      6500
 4750              	.LASF14:
 4751 03cc 75696E74 		.ascii	"uint64\000"
 4751      363400
 4752              	.LASF2:
 4753 03d3 73686F72 		.ascii	"short int\000"
 4753      7420696E 
 4753      7400
 4754              	.LASF45:
 4755 03dd 5254435F 		.ascii	"RTC_Stop\000"
 4755      53746F70 
 4755      00
 4756              	.LASF42:
 4757 03e6 746D7056 		.ascii	"tmpVal\000"
 4757      616C00
 4758              	.LASF92:
 4759 03ed 5254435F 		.ascii	"RTC_tickRefOneSec\000"
 4759      7469636B 
 4759      5265664F 
 4759      6E655365 
 4759      6300
 4760              	.LASF82:
 4761 03ff 746D7056 		.ascii	"tmpVar\000"
 4761      617200
 4762              	.LASF73:
 4763 0406 6465634E 		.ascii	"decNum\000"
 4763      756D00
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 138


 4764              	.LASF21:
 4765 040d 5254435F 		.ascii	"RTC_DATE_TIME\000"
 4765      44415445 
 4765      5F54494D 
 4765      4500
 4766              	.LASF66:
 4767 041b 5254435F 		.ascii	"RTC_GetDate\000"
 4767      47657444 
 4767      61746500 
 4768              	.LASF15:
 4769 0427 63686172 		.ascii	"char\000"
 4769      00
 4770              	.LASF71:
 4771 042c 6D756C74 		.ascii	"mult\000"
 4771      00
 4772              	.LASF76:
 4773 0431 5254435F 		.ascii	"RTC_currentTickNumber\000"
 4773      63757272 
 4773      656E7454 
 4773      69636B4E 
 4773      756D6265 
 4774              	.LASF40:
 4775 0447 5254435F 		.ascii	"RTC_ConstructDate\000"
 4775      436F6E73 
 4775      74727563 
 4775      74446174 
 4775      6500
 4776              	.LASF50:
 4777 0459 696E7075 		.ascii	"inputDate\000"
 4777      74446174 
 4777      6500
 4778              	.LASF78:
 4779 0463 5254435F 		.ascii	"RTC_UnixToDateTime\000"
 4779      556E6978 
 4779      546F4461 
 4779      74655469 
 4779      6D6500
 4780              	.LASF32:
 4781 0476 5254435F 		.ascii	"RTC_GetDay\000"
 4781      47657444 
 4781      617900
 4782              	.LASF55:
 4783 0481 756E6978 		.ascii	"unixTime\000"
 4783      54696D65 
 4783      00
 4784              	.LASF31:
 4785 048a 5254435F 		.ascii	"RTC_GetAmPm\000"
 4785      47657441 
 4785      6D506D00 
 4786              	.LASF95:
 4787 0496 5254435F 		.ascii	"RTC_dstStatus\000"
 4787      64737453 
 4787      74617475 
 4787      7300
 4788              	.LASF20:
 4789 04a4 73746174 		.ascii	"status\000"
 4789      757300
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccDyvViz.s 			page 139


 4790              	.LASF68:
 4791 04ab 5254435F 		.ascii	"RTC_ReadStatus\000"
 4791      52656164 
 4791      53746174 
 4791      757300
 4792              	.LASF65:
 4793 04ba 5254435F 		.ascii	"RTC_GetTime\000"
 4793      47657454 
 4793      696D6500 
 4794              	.LASF47:
 4795 04c6 746D7054 		.ascii	"tmpTime\000"
 4795      696D6500 
 4796              	.LASF75:
 4797 04ce 5254435F 		.ascii	"RTC_Update\000"
 4797      55706461 
 4797      746500
 4798              	.LASF101:
 4799 04d9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4799      4320342E 
 4799      392E3320 
 4799      32303135 
 4799      30333033 
 4800 050c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4800      20726576 
 4800      6973696F 
 4800      6E203232 
 4800      31323230 
 4801 053f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4801      66756E63 
 4801      74696F6E 
 4801      2D736563 
 4801      74696F6E 
 4802              	.LASF56:
 4803 0567 746D7044 		.ascii	"tmpDateTime\000"
 4803      61746554 
 4803      696D6500 
 4804              	.LASF23:
 4805 0573 5254435F 		.ascii	"RTC_IsBitSet\000"
 4805      49734269 
 4805      74536574 
 4805      00
 4806              	.LASF103:
 4807 0580 633A5C43 		.ascii	"c:\\Cypress\\Mainline_v2\\Finish\\fin_v0.cydsn\000"
 4807      79707265 
 4807      73735C4D 
 4807      61696E6C 
 4807      696E655F 
 4808              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
