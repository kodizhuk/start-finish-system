ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_XB_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	UART_XB_rxBufferHead,4,4
  18              		.comm	UART_XB_rxBufferTail,4,4
  19              		.comm	UART_XB_rxBufferOverflow,1,1
  20              		.comm	UART_XB_txBufferHead,4,4
  21              		.comm	UART_XB_txBufferTail,4,4
  22              		.comm	UART_XB_rxBufferInternal,101,4
  23              		.comm	UART_XB_txBufferInternal,100,4
  24              		.section	.text.UART_XB_SpiUartReadRxData,"ax",%progbits
  25              		.align	2
  26              		.global	UART_XB_SpiUartReadRxData
  27              		.code	16
  28              		.thumb_func
  29              		.type	UART_XB_SpiUartReadRxData, %function
  30              	UART_XB_SpiUartReadRxData:
  31              	.LFB2:
  32              		.file 1 ".\\Generated_Source\\PSoC4\\UART_XB_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * \file UART_XB_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * \version 3.20
   4:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * \brief
   6:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * \copyright
  13:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  19:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #include "UART_XB_PVT.h"
  20:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #include "UART_XB_SPI_UART_PVT.h"
  21:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  22:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** /***************************************
  23:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *        SPI/UART Private Vars
  24:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** ***************************************/
  25:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 2


  26:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_INTERNAL_RX_SW_BUFFER_CONST)
  27:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint32 UART_XB_rxBufferHead;
  29:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint32 UART_XB_rxBufferTail;
  31:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /**
  32:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \addtogroup group_globals
  33:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \{
  34:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     */
  35:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  was occurred.
  37:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     */
  38:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint8  UART_XB_rxBufferOverflow;
  39:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /** \} globals */
  40:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_INTERNAL_RX_SW_BUFFER_CONST) */
  41:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  42:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_INTERNAL_TX_SW_BUFFER_CONST)
  43:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint32 UART_XB_txBufferHead;
  45:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint32 UART_XB_txBufferTail;
  47:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_INTERNAL_TX_SW_BUFFER_CONST) */
  48:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  49:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_INTERNAL_RX_SW_BUFFER)
  50:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint8 UART_XB_rxBufferInternal[UART_XB_INTERNAL_RX_BUFFER_SIZE];
  52:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_INTERNAL_RX_SW_BUFFER) */
  53:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  54:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_INTERNAL_TX_SW_BUFFER)
  55:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     volatile uint8 UART_XB_txBufferInternal[UART_XB_TX_BUFFER_SIZE];
  56:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_INTERNAL_TX_SW_BUFFER) */
  57:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  58:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  59:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_RX_DIRECTION)
  60:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
  61:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartReadRxData
  62:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
  63:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
  64:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     is empty.
  70:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
  71:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \return
  72:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
  76:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
  77:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferHead - the start index to put data into the 
  78:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
  79:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferTail - the start index to get data from the 
  80:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
  81:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
  82:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 3


  83:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     uint32 UART_XB_SpiUartReadRxData(void)
  84:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
  33              		.loc 1 84 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  85:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 rxData = 0u;
  43              		.loc 1 85 0
  44 0006 0023     		mov	r3, #0
  45 0008 7B60     		str	r3, [r7, #4]
  86:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  87:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #if (UART_XB_INTERNAL_RX_SW_BUFFER_CONST)
  88:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 locTail;
  89:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #endif /* (UART_XB_INTERNAL_RX_SW_BUFFER_CONST) */
  90:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_RX_SW_BUFFER)
  92:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
  93:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             if (UART_XB_rxBufferHead != UART_XB_rxBufferTail)
  46              		.loc 1 93 0
  47 000a 0E4B     		ldr	r3, .L5
  48 000c 1A68     		ldr	r2, [r3]
  49 000e 0E4B     		ldr	r3, .L5+4
  50 0010 1B68     		ldr	r3, [r3]
  51 0012 9A42     		cmp	r2, r3
  52 0014 11D0     		beq	.L2
  94:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
  95:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Calculate index to read from */
  98:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 locTail = (UART_XB_rxBufferTail + 1u);
  53              		.loc 1 98 0
  54 0016 0C4B     		ldr	r3, .L5+4
  55 0018 1B68     		ldr	r3, [r3]
  56 001a 0133     		add	r3, r3, #1
  57 001c 3B60     		str	r3, [r7]
  99:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 100:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 if (UART_XB_INTERNAL_RX_BUFFER_SIZE == locTail)
  58              		.loc 1 100 0
  59 001e 3B68     		ldr	r3, [r7]
  60 0020 652B     		cmp	r3, #101
  61 0022 01D1     		bne	.L3
 101:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 {
 102:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     locTail = 0u;
  62              		.loc 1 102 0
  63 0024 0023     		mov	r3, #0
  64 0026 3B60     		str	r3, [r7]
  65              	.L3:
 103:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 }
 104:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 105:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 rxData = UART_XB_GetWordFromRxBuffer(locTail);
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 4


  66              		.loc 1 106 0
  67 0028 084A     		ldr	r2, .L5+8
  68 002a 3B68     		ldr	r3, [r7]
  69 002c D318     		add	r3, r2, r3
  70 002e 1B78     		ldrb	r3, [r3]
  71 0030 DBB2     		uxtb	r3, r3
  72 0032 7B60     		str	r3, [r7, #4]
 107:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 108:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Change index in the buffer */
 109:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_rxBufferTail = locTail;
  73              		.loc 1 109 0
  74 0034 044B     		ldr	r3, .L5+4
  75 0036 3A68     		ldr	r2, [r7]
  76 0038 1A60     		str	r2, [r3]
  77              	.L2:
 110:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 111:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 #if (UART_XB_CHECK_UART_RTS_CONTROL_FLOW)
 112:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 {
 113:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     if (0u == (UART_XB_INTR_RX_MASK_REG & UART_XB_INTR_RX_NOT_EMPTY))
 115:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     {
 116:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                         * receiving data into software buffer.
 118:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                         */
 119:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                         UART_XB_INTR_RX_MASK_REG |= UART_XB_INTR_RX_NOT_EMPTY;
 120:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     }
 121:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 }
 122:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 #endif
 123:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 124:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 125:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 126:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 127:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 128:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Read data from RX FIFO */
 129:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             rxData = UART_XB_RX_FIFO_RD_REG;
 130:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 131:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 132:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 133:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         return (rxData);
  78              		.loc 1 133 0
  79 003a 7B68     		ldr	r3, [r7, #4]
 134:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
  80              		.loc 1 134 0
  81 003c 181C     		mov	r0, r3
  82 003e BD46     		mov	sp, r7
  83 0040 02B0     		add	sp, sp, #8
  84              		@ sp needed
  85 0042 80BD     		pop	{r7, pc}
  86              	.L6:
  87              		.align	2
  88              	.L5:
  89 0044 00000000 		.word	UART_XB_rxBufferHead
  90 0048 00000000 		.word	UART_XB_rxBufferTail
  91 004c 00000000 		.word	UART_XB_rxBufferInternal
  92              		.cfi_endproc
  93              	.LFE2:
  94              		.size	UART_XB_SpiUartReadRxData, .-UART_XB_SpiUartReadRxData
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 5


  95              		.section	.text.UART_XB_SpiUartGetRxBufferSize,"ax",%progbits
  96              		.align	2
  97              		.global	UART_XB_SpiUartGetRxBufferSize
  98              		.code	16
  99              		.thumb_func
 100              		.type	UART_XB_SpiUartGetRxBufferSize, %function
 101              	UART_XB_SpiUartGetRxBufferSize:
 102              	.LFB3:
 135:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 136:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 137:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
 138:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartGetRxBufferSize
 139:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 140:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 141:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     RX FIFO.
 144:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 147:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \return
 148:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Number of received data elements.
 149:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 150:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 151:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferHead - the start index to put data into the 
 152:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
 153:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferTail - the start index to get data from the 
 154:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
 155:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 156:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 157:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     uint32 UART_XB_SpiUartGetRxBufferSize(void)
 158:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 103              		.loc 1 158 0
 104              		.cfi_startproc
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 82B0     		sub	sp, sp, #8
 110              		.cfi_def_cfa_offset 16
 111 0004 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 159:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 size;
 160:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #if (UART_XB_INTERNAL_RX_SW_BUFFER_CONST)
 161:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 locHead;
 162:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #endif /* (UART_XB_INTERNAL_RX_SW_BUFFER_CONST) */
 163:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 164:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_RX_SW_BUFFER)
 165:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 166:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             locHead = UART_XB_rxBufferHead;
 113              		.loc 1 166 0
 114 0006 0C4B     		ldr	r3, .L11
 115 0008 1B68     		ldr	r3, [r3]
 116 000a 3B60     		str	r3, [r7]
 167:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 168:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             if(locHead >= UART_XB_rxBufferTail)
 117              		.loc 1 168 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 6


 118 000c 0B4B     		ldr	r3, .L11+4
 119 000e 1B68     		ldr	r3, [r3]
 120 0010 3A68     		ldr	r2, [r7]
 121 0012 9A42     		cmp	r2, r3
 122 0014 05D3     		bcc	.L8
 169:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 170:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 size = (locHead - UART_XB_rxBufferTail);
 123              		.loc 1 170 0
 124 0016 094B     		ldr	r3, .L11+4
 125 0018 1B68     		ldr	r3, [r3]
 126 001a 3A68     		ldr	r2, [r7]
 127 001c D31A     		sub	r3, r2, r3
 128 001e 7B60     		str	r3, [r7, #4]
 129 0020 05E0     		b	.L9
 130              	.L8:
 171:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 172:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             else
 173:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 174:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 size = (locHead + (UART_XB_INTERNAL_RX_BUFFER_SIZE - UART_XB_rxBufferTail));
 131              		.loc 1 174 0
 132 0022 064B     		ldr	r3, .L11+4
 133 0024 1B68     		ldr	r3, [r3]
 134 0026 3A68     		ldr	r2, [r7]
 135 0028 D31A     		sub	r3, r2, r3
 136 002a 6533     		add	r3, r3, #101
 137 002c 7B60     		str	r3, [r7, #4]
 138              	.L9:
 175:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 176:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 177:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 178:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 179:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             size = UART_XB_GET_RX_FIFO_ENTRIES;
 180:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 181:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 182:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 183:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         return (size);
 139              		.loc 1 183 0
 140 002e 7B68     		ldr	r3, [r7, #4]
 184:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 141              		.loc 1 184 0
 142 0030 181C     		mov	r0, r3
 143 0032 BD46     		mov	sp, r7
 144 0034 02B0     		add	sp, sp, #8
 145              		@ sp needed
 146 0036 80BD     		pop	{r7, pc}
 147              	.L12:
 148              		.align	2
 149              	.L11:
 150 0038 00000000 		.word	UART_XB_rxBufferHead
 151 003c 00000000 		.word	UART_XB_rxBufferTail
 152              		.cfi_endproc
 153              	.LFE3:
 154              		.size	UART_XB_SpiUartGetRxBufferSize, .-UART_XB_SpiUartGetRxBufferSize
 155              		.section	.text.UART_XB_SpiUartClearRxBuffer,"ax",%progbits
 156              		.align	2
 157              		.global	UART_XB_SpiUartClearRxBuffer
 158              		.code	16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 7


 159              		.thumb_func
 160              		.type	UART_XB_SpiUartClearRxBuffer, %function
 161              	UART_XB_SpiUartClearRxBuffer:
 162              	.LFB4:
 185:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 186:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 187:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
 188:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartClearRxBuffer
 189:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 190:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 191:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 193:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 194:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferHead - the start index to put data into the 
 195:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
 196:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_rxBufferTail - the start index to get data from the 
 197:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software receive buffer.
 198:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 199:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 200:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     void UART_XB_SpiUartClearRxBuffer(void)
 201:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 163              		.loc 1 201 0
 164              		.cfi_startproc
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_RX_SW_BUFFER)
 203:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 204:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Lock from component interruption */
 205:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_DisableInt();
 171              		.loc 1 205 0
 172 0004 0A20     		mov	r0, #10
 173 0006 FFF7FEFF 		bl	CyIntDisable
 206:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 207:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Flush RX software buffer */
 208:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_rxBufferHead = UART_XB_rxBufferTail;
 174              		.loc 1 208 0
 175 000a 0E4B     		ldr	r3, .L14
 176 000c 1A68     		ldr	r2, [r3]
 177 000e 0E4B     		ldr	r3, .L14+4
 178 0010 1A60     		str	r2, [r3]
 209:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_rxBufferOverflow = 0u;
 179              		.loc 1 209 0
 180 0012 0E4B     		ldr	r3, .L14+8
 181 0014 0022     		mov	r2, #0
 182 0016 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 211:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_CLEAR_RX_FIFO;
 183              		.loc 1 211 0
 184 0018 0D4B     		ldr	r3, .L14+12
 185 001a 0D4A     		ldr	r2, .L14+12
 186 001c 1268     		ldr	r2, [r2]
 187 001e 8021     		mov	r1, #128
 188 0020 4902     		lsl	r1, r1, #9
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 8


 189 0022 0A43     		orr	r2, r1
 190 0024 1A60     		str	r2, [r3]
 191 0026 0A4B     		ldr	r3, .L14+12
 192 0028 094A     		ldr	r2, .L14+12
 193 002a 1268     		ldr	r2, [r2]
 194 002c 0949     		ldr	r1, .L14+16
 195 002e 0A40     		and	r2, r1
 196 0030 1A60     		str	r2, [r3]
 212:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_ClearRxInterruptSource(UART_XB_INTR_RX_ALL);
 197              		.loc 1 212 0
 198 0032 094B     		ldr	r3, .L14+20
 199 0034 094A     		ldr	r2, .L14+24
 200 0036 1A60     		str	r2, [r3]
 213:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 214:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             #if (UART_XB_CHECK_UART_RTS_CONTROL_FLOW)
 215:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 216:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 * data into software buffer.
 218:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 */
 219:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_INTR_RX_MASK_REG |= UART_XB_INTR_RX_NOT_EMPTY;
 220:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 221:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             #endif
 222:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             
 223:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Release lock */
 224:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_EnableInt();
 201              		.loc 1 224 0
 202 0038 0A20     		mov	r0, #10
 203 003a FFF7FEFF 		bl	CyIntEnable
 225:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 226:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 227:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 228:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_CLEAR_RX_FIFO;
 229:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 230:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 231:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 204              		.loc 1 231 0
 205 003e BD46     		mov	sp, r7
 206              		@ sp needed
 207 0040 80BD     		pop	{r7, pc}
 208              	.L15:
 209 0042 C046     		.align	2
 210              	.L14:
 211 0044 00000000 		.word	UART_XB_rxBufferTail
 212 0048 00000000 		.word	UART_XB_rxBufferHead
 213 004c 00000000 		.word	UART_XB_rxBufferOverflow
 214 0050 04032540 		.word	1076167428
 215 0054 FFFFFEFF 		.word	-65537
 216 0058 C00F2540 		.word	1076170688
 217 005c ED0F0000 		.word	4077
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	UART_XB_SpiUartClearRxBuffer, .-UART_XB_SpiUartClearRxBuffer
 221              		.section	.text.UART_XB_SpiUartWriteTxData,"ax",%progbits
 222              		.align	2
 223              		.global	UART_XB_SpiUartWriteTxData
 224              		.code	16
 225              		.thumb_func
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 9


 226              		.type	UART_XB_SpiUartWriteTxData, %function
 227              	UART_XB_SpiUartWriteTxData:
 228              	.LFB5:
 232:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 233:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_RX_DIRECTION) */
 234:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 235:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 236:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #if(UART_XB_TX_DIRECTION)
 237:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
 238:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartWriteTxData
 239:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 240:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 241:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  bus time.
 243:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 246:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 250:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 251:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferHead - the start index to put data into the 
 252:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software transmit buffer.
 253:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferTail - start index to get data from the software
 254:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  transmit buffer.
 255:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 256:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 257:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     void UART_XB_SpiUartWriteTxData(uint32 txData)
 258:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 229              		.loc 1 258 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 259:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #if (UART_XB_INTERNAL_TX_SW_BUFFER_CONST)
 260:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 locHead;
 261:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #endif /* (UART_XB_INTERNAL_TX_SW_BUFFER_CONST) */
 262:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 263:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_TX_SW_BUFFER)
 264:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 265:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             if ((UART_XB_txBufferHead == UART_XB_txBufferTail) &&
 240              		.loc 1 266 0
 241 0008 1C4B     		ldr	r3, .L21
 242 000a 1A68     		ldr	r2, [r3]
 243 000c 1C4B     		ldr	r3, .L21+4
 244 000e 1B68     		ldr	r3, [r3]
 245 0010 9A42     		cmp	r2, r3
 246 0012 09D1     		bne	.L17
 267:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 (UART_XB_SPI_UART_FIFO_SIZE != UART_XB_GET_TX_FIFO_ENTRIES))
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 10


 247              		.loc 1 267 0 discriminator 1
 248 0014 1B4B     		ldr	r3, .L21+8
 249 0016 1B68     		ldr	r3, [r3]
 250 0018 1F22     		mov	r2, #31
 251 001a 1340     		and	r3, r2
 266:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 (UART_XB_SPI_UART_FIFO_SIZE != UART_XB_GET_TX_FIFO_ENTRIES))
 252              		.loc 1 266 0 discriminator 1
 253 001c 102B     		cmp	r3, #16
 254 001e 03D0     		beq	.L17
 268:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 269:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_TX_FIFO_WR_REG = txData;
 255              		.loc 1 270 0
 256 0020 194B     		ldr	r3, .L21+12
 257 0022 7A68     		ldr	r2, [r7, #4]
 258 0024 1A60     		str	r2, [r3]
 259 0026 26E0     		b	.L16
 260              	.L17:
 271:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 272:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Put data into TX software buffer */
 273:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             else
 274:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 275:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Head index to put data */
 276:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 locHead = (UART_XB_txBufferHead + 1u);
 261              		.loc 1 276 0
 262 0028 144B     		ldr	r3, .L21
 263 002a 1B68     		ldr	r3, [r3]
 264 002c 0133     		add	r3, r3, #1
 265 002e FB60     		str	r3, [r7, #12]
 277:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 if (UART_XB_TX_BUFFER_SIZE == locHead)
 266              		.loc 1 279 0
 267 0030 FB68     		ldr	r3, [r7, #12]
 268 0032 642B     		cmp	r3, #100
 269 0034 01D1     		bne	.L19
 280:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 {
 281:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     locHead = 0u;
 270              		.loc 1 281 0
 271 0036 0023     		mov	r3, #0
 272 0038 FB60     		str	r3, [r7, #12]
 273              	.L19:
 282:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 }
 283:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 284:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 while (locHead == UART_XB_txBufferTail)
 274              		.loc 1 285 0
 275 003a C046     		mov	r8, r8
 276              	.L20:
 277              		.loc 1 285 0 is_stmt 0 discriminator 1
 278 003c 104B     		ldr	r3, .L21+4
 279 003e 1B68     		ldr	r3, [r3]
 280 0040 FA68     		ldr	r2, [r7, #12]
 281 0042 9A42     		cmp	r2, r3
 282 0044 FAD0     		beq	.L20
 286:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 {
 287:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 }
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 11


 288:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 289:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 291:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_ClearTxInterruptSource(UART_XB_INTR_TX_NOT_FULL);
 283              		.loc 1 292 0 is_stmt 1
 284 0046 114B     		ldr	r3, .L21+16
 285 0048 0222     		mov	r2, #2
 286 004a 1A60     		str	r2, [r3]
 293:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 294:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_PutWordInTxBuffer(locHead, txData);
 287              		.loc 1 294 0
 288 004c 7B68     		ldr	r3, [r7, #4]
 289 004e D9B2     		uxtb	r1, r3
 290 0050 0F4A     		ldr	r2, .L21+20
 291 0052 FB68     		ldr	r3, [r7, #12]
 292 0054 D318     		add	r3, r2, r3
 293 0056 0A1C     		add	r2, r1, #0
 294 0058 1A70     		strb	r2, [r3]
 295:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 296:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 UART_XB_txBufferHead = locHead;
 295              		.loc 1 296 0
 296 005a 084B     		ldr	r3, .L21
 297 005c FA68     		ldr	r2, [r7, #12]
 298 005e 1A60     		str	r2, [r3]
 297:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 298:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 if (0u == (UART_XB_INTR_TX_MASK_REG & UART_XB_INTR_TX_NOT_FULL))
 299              		.loc 1 299 0
 300 0060 0C4B     		ldr	r3, .L21+24
 301 0062 1B68     		ldr	r3, [r3]
 302 0064 0222     		mov	r2, #2
 303 0066 1340     		and	r3, r2
 304 0068 05D1     		bne	.L16
 300:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 {
 301:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                     UART_XB_INTR_TX_MASK_REG |= (uint32) UART_XB_INTR_TX_NOT_FULL;
 305              		.loc 1 302 0
 306 006a 0A4B     		ldr	r3, .L21+24
 307 006c 094A     		ldr	r2, .L21+24
 308 006e 1268     		ldr	r2, [r2]
 309 0070 0221     		mov	r1, #2
 310 0072 0A43     		orr	r2, r1
 311 0074 1A60     		str	r2, [r3]
 312              	.L16:
 303:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 }
 304:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 305:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 306:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 307:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 308:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             while (UART_XB_SPI_UART_FIFO_SIZE == UART_XB_GET_TX_FIFO_ENTRIES)
 310:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 311:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 312:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 313:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_TX_FIFO_WR_REG = txData;
 314:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 12


 315:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 316:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 313              		.loc 1 316 0
 314 0076 BD46     		mov	sp, r7
 315 0078 04B0     		add	sp, sp, #16
 316              		@ sp needed
 317 007a 80BD     		pop	{r7, pc}
 318              	.L22:
 319              		.align	2
 320              	.L21:
 321 007c 00000000 		.word	UART_XB_txBufferHead
 322 0080 00000000 		.word	UART_XB_txBufferTail
 323 0084 08022540 		.word	1076167176
 324 0088 40022540 		.word	1076167232
 325 008c 800F2540 		.word	1076170624
 326 0090 00000000 		.word	UART_XB_txBufferInternal
 327 0094 880F2540 		.word	1076170632
 328              		.cfi_endproc
 329              	.LFE5:
 330              		.size	UART_XB_SpiUartWriteTxData, .-UART_XB_SpiUartWriteTxData
 331              		.section	.text.UART_XB_SpiUartPutArray,"ax",%progbits
 332              		.align	2
 333              		.global	UART_XB_SpiUartPutArray
 334              		.code	16
 335              		.thumb_func
 336              		.type	UART_XB_SpiUartPutArray, %function
 337              	UART_XB_SpiUartPutArray:
 338              	.LFB6:
 317:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 318:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 319:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
 320:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartPutArray
 321:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 322:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 323:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  than transmit buffer size.
 327:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 328:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 333:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 334:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferHead - the start index to put data into the 
 335:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software transmit buffer.
 336:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferTail - start index to get data from the software
 337:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  transmit buffer.
 338:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 339:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     void UART_XB_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 339              		.loc 1 341 0
 340              		.cfi_startproc
 341 0000 80B5     		push	{r7, lr}
 342              		.cfi_def_cfa_offset 8
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 13


 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 84B0     		sub	sp, sp, #16
 346              		.cfi_def_cfa_offset 24
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 349 0006 7860     		str	r0, [r7, #4]
 350 0008 3960     		str	r1, [r7]
 342:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 i;
 343:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 344:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         for (i=0u; i < count; i++)
 351              		.loc 1 344 0
 352 000a 0023     		mov	r3, #0
 353 000c FB60     		str	r3, [r7, #12]
 354 000e 09E0     		b	.L24
 355              	.L25:
 345:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 346:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_SpiUartWriteTxData((uint32) wrBuf[i]);
 356              		.loc 1 346 0 discriminator 3
 357 0010 7A68     		ldr	r2, [r7, #4]
 358 0012 FB68     		ldr	r3, [r7, #12]
 359 0014 D318     		add	r3, r2, r3
 360 0016 1B78     		ldrb	r3, [r3]
 361 0018 181C     		mov	r0, r3
 362 001a FFF7FEFF 		bl	UART_XB_SpiUartWriteTxData
 344:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 363              		.loc 1 344 0 discriminator 3
 364 001e FB68     		ldr	r3, [r7, #12]
 365 0020 0133     		add	r3, r3, #1
 366 0022 FB60     		str	r3, [r7, #12]
 367              	.L24:
 344:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 368              		.loc 1 344 0 is_stmt 0 discriminator 1
 369 0024 FA68     		ldr	r2, [r7, #12]
 370 0026 3B68     		ldr	r3, [r7]
 371 0028 9A42     		cmp	r2, r3
 372 002a F1D3     		bcc	.L25
 347:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 348:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 373              		.loc 1 348 0 is_stmt 1
 374 002c BD46     		mov	sp, r7
 375 002e 04B0     		add	sp, sp, #16
 376              		@ sp needed
 377 0030 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE6:
 380              		.size	UART_XB_SpiUartPutArray, .-UART_XB_SpiUartPutArray
 381 0032 C046     		.section	.text.UART_XB_SpiUartGetTxBufferSize,"ax",%progbits
 382              		.align	2
 383              		.global	UART_XB_SpiUartGetTxBufferSize
 384              		.code	16
 385              		.thumb_func
 386              		.type	UART_XB_SpiUartGetTxBufferSize, %function
 387              	UART_XB_SpiUartGetTxBufferSize:
 388              	.LFB7:
 349:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 350:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 14


 351:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
 352:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartGetTxBufferSize
 353:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 354:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 355:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     TX FIFO.
 358:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *     not full.
 362:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 363:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \return
 364:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 366:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 367:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferHead - the start index to put data into the 
 368:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software transmit buffer.
 369:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferTail - start index to get data from the software
 370:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  transmit buffer.
 371:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 372:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 373:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     uint32 UART_XB_SpiUartGetTxBufferSize(void)
 374:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 389              		.loc 1 374 0
 390              		.cfi_startproc
 391 0000 80B5     		push	{r7, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 82B0     		sub	sp, sp, #8
 396              		.cfi_def_cfa_offset 16
 397 0004 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 375:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 size;
 376:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #if (UART_XB_INTERNAL_TX_SW_BUFFER_CONST)
 377:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         uint32 locTail;
 378:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     #endif /* (UART_XB_INTERNAL_TX_SW_BUFFER_CONST) */
 379:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_TX_SW_BUFFER)
 381:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 382:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Get current Tail index */
 383:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             locTail = UART_XB_txBufferTail;
 399              		.loc 1 383 0
 400 0006 0C4B     		ldr	r3, .L30
 401 0008 1B68     		ldr	r3, [r3]
 402 000a 3B60     		str	r3, [r7]
 384:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 385:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             if (UART_XB_txBufferHead >= locTail)
 403              		.loc 1 385 0
 404 000c 0B4B     		ldr	r3, .L30+4
 405 000e 1A68     		ldr	r2, [r3]
 406 0010 3B68     		ldr	r3, [r7]
 407 0012 9A42     		cmp	r2, r3
 408 0014 05D3     		bcc	.L27
 386:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 387:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 size = (UART_XB_txBufferHead - locTail);
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 15


 409              		.loc 1 387 0
 410 0016 094B     		ldr	r3, .L30+4
 411 0018 1A68     		ldr	r2, [r3]
 412 001a 3B68     		ldr	r3, [r7]
 413 001c D31A     		sub	r3, r2, r3
 414 001e 7B60     		str	r3, [r7, #4]
 415 0020 05E0     		b	.L28
 416              	.L27:
 388:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 389:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             else
 390:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             {
 391:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****                 size = (UART_XB_txBufferHead + (UART_XB_TX_BUFFER_SIZE - locTail));
 417              		.loc 1 391 0
 418 0022 064B     		ldr	r3, .L30+4
 419 0024 1A68     		ldr	r2, [r3]
 420 0026 3B68     		ldr	r3, [r7]
 421 0028 D31A     		sub	r3, r2, r3
 422 002a 6433     		add	r3, r3, #100
 423 002c 7B60     		str	r3, [r7, #4]
 424              	.L28:
 392:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             }
 393:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 394:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 395:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 396:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             size = UART_XB_GET_TX_FIFO_ENTRIES;
 397:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 398:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 399:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 400:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         return (size);
 425              		.loc 1 400 0
 426 002e 7B68     		ldr	r3, [r7, #4]
 401:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 427              		.loc 1 401 0
 428 0030 181C     		mov	r0, r3
 429 0032 BD46     		mov	sp, r7
 430 0034 02B0     		add	sp, sp, #8
 431              		@ sp needed
 432 0036 80BD     		pop	{r7, pc}
 433              	.L31:
 434              		.align	2
 435              	.L30:
 436 0038 00000000 		.word	UART_XB_txBufferTail
 437 003c 00000000 		.word	UART_XB_txBufferHead
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	UART_XB_SpiUartGetTxBufferSize, .-UART_XB_SpiUartGetTxBufferSize
 441              		.section	.text.UART_XB_SpiUartClearTxBuffer,"ax",%progbits
 442              		.align	2
 443              		.global	UART_XB_SpiUartClearTxBuffer
 444              		.code	16
 445              		.thumb_func
 446              		.type	UART_XB_SpiUartClearTxBuffer, %function
 447              	UART_XB_SpiUartClearTxBuffer:
 448              	.LFB8:
 402:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 403:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 404:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 16


 405:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * Function Name: UART_XB_SpiUartClearTxBuffer
 406:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     ****************************************************************************//**
 407:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 408:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 410:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     * \globalvars
 411:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferHead - the start index to put data into the 
 412:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  software transmit buffer.
 413:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  UART_XB_txBufferTail - start index to get data from the software
 414:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *  transmit buffer.
 415:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *
 416:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     *******************************************************************************/
 417:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     void UART_XB_SpiUartClearTxBuffer(void)
 418:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     {
 449              		.loc 1 418 0
 450              		.cfi_startproc
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
 419:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #if (UART_XB_CHECK_TX_SW_BUFFER)
 420:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 421:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Lock from component interruption */
 422:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_DisableInt();
 457              		.loc 1 422 0
 458 0004 0A20     		mov	r0, #10
 459 0006 FFF7FEFF 		bl	CyIntDisable
 423:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 424:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Flush TX software buffer */
 425:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_txBufferHead = UART_XB_txBufferTail;
 460              		.loc 1 425 0
 461 000a 0F4B     		ldr	r3, .L33
 462 000c 1A68     		ldr	r2, [r3]
 463 000e 0F4B     		ldr	r3, .L33+4
 464 0010 1A60     		str	r2, [r3]
 426:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 427:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_INTR_TX_MASK_REG &= (uint32) ~UART_XB_INTR_TX_NOT_FULL;
 465              		.loc 1 427 0
 466 0012 0F4B     		ldr	r3, .L33+8
 467 0014 0E4A     		ldr	r2, .L33+8
 468 0016 1268     		ldr	r2, [r2]
 469 0018 0221     		mov	r1, #2
 470 001a 8A43     		bic	r2, r1
 471 001c 1A60     		str	r2, [r3]
 428:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_CLEAR_TX_FIFO;
 472              		.loc 1 428 0
 473 001e 0D4B     		ldr	r3, .L33+12
 474 0020 0C4A     		ldr	r2, .L33+12
 475 0022 1268     		ldr	r2, [r2]
 476 0024 8021     		mov	r1, #128
 477 0026 4902     		lsl	r1, r1, #9
 478 0028 0A43     		orr	r2, r1
 479 002a 1A60     		str	r2, [r3]
 480 002c 094B     		ldr	r3, .L33+12
 481 002e 094A     		ldr	r2, .L33+12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 17


 482 0030 1268     		ldr	r2, [r2]
 483 0032 0949     		ldr	r1, .L33+16
 484 0034 0A40     		and	r2, r1
 485 0036 1A60     		str	r2, [r3]
 429:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_ClearTxInterruptSource(UART_XB_INTR_TX_ALL);
 486              		.loc 1 429 0
 487 0038 084B     		ldr	r3, .L33+20
 488 003a 094A     		ldr	r2, .L33+24
 489 003c 1A60     		str	r2, [r3]
 430:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 431:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             /* Release lock */
 432:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_EnableInt();
 490              		.loc 1 432 0
 491 003e 0A20     		mov	r0, #10
 492 0040 FFF7FEFF 		bl	CyIntEnable
 433:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 434:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #else
 435:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         {
 436:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****             UART_XB_CLEAR_TX_FIFO;
 437:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         }
 438:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****         #endif
 439:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     }
 493              		.loc 1 439 0
 494 0044 BD46     		mov	sp, r7
 495              		@ sp needed
 496 0046 80BD     		pop	{r7, pc}
 497              	.L34:
 498              		.align	2
 499              	.L33:
 500 0048 00000000 		.word	UART_XB_txBufferTail
 501 004c 00000000 		.word	UART_XB_txBufferHead
 502 0050 880F2540 		.word	1076170632
 503 0054 04022540 		.word	1076167172
 504 0058 FFFFFEFF 		.word	-65537
 505 005c 800F2540 		.word	1076170624
 506 0060 F3070000 		.word	2035
 507              		.cfi_endproc
 508              	.LFE8:
 509              		.size	UART_XB_SpiUartClearTxBuffer, .-UART_XB_SpiUartClearTxBuffer
 510              		.section	.text.UART_XB_SpiUartDisableIntRx,"ax",%progbits
 511              		.align	2
 512              		.global	UART_XB_SpiUartDisableIntRx
 513              		.code	16
 514              		.thumb_func
 515              		.type	UART_XB_SpiUartDisableIntRx, %function
 516              	UART_XB_SpiUartDisableIntRx:
 517              	.LFB9:
 440:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 441:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** #endif /* (UART_XB_TX_DIRECTION) */
 442:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 443:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** /*******************************************************************************
 445:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * Function Name: UART_XB_SpiUartDisableIntRx
 446:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** ****************************************************************************//**
 447:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
 448:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 18


 450:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  \return
 451:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
 453:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *******************************************************************************/
 454:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** uint32 UART_XB_SpiUartDisableIntRx(void)
 455:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** {
 518              		.loc 1 455 0
 519              		.cfi_startproc
 520 0000 80B5     		push	{r7, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 82B0     		sub	sp, sp, #8
 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 456:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     uint32 intSource;
 457:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 458:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     intSource = UART_XB_GetRxInterruptMode();
 528              		.loc 1 458 0
 529 0006 054B     		ldr	r3, .L37
 530 0008 1B68     		ldr	r3, [r3]
 531 000a 7B60     		str	r3, [r7, #4]
 459:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 460:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     UART_XB_SetRxInterruptMode(UART_XB_NO_INTR_SOURCES);
 532              		.loc 1 460 0
 533 000c 034B     		ldr	r3, .L37
 534 000e 0022     		mov	r2, #0
 535 0010 1A60     		str	r2, [r3]
 461:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 462:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     return (intSource);
 536              		.loc 1 462 0
 537 0012 7B68     		ldr	r3, [r7, #4]
 463:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** }
 538              		.loc 1 463 0
 539 0014 181C     		mov	r0, r3
 540 0016 BD46     		mov	sp, r7
 541 0018 02B0     		add	sp, sp, #8
 542              		@ sp needed
 543 001a 80BD     		pop	{r7, pc}
 544              	.L38:
 545              		.align	2
 546              	.L37:
 547 001c C80F2540 		.word	1076170696
 548              		.cfi_endproc
 549              	.LFE9:
 550              		.size	UART_XB_SpiUartDisableIntRx, .-UART_XB_SpiUartDisableIntRx
 551              		.section	.text.UART_XB_SpiUartDisableIntTx,"ax",%progbits
 552              		.align	2
 553              		.global	UART_XB_SpiUartDisableIntTx
 554              		.code	16
 555              		.thumb_func
 556              		.type	UART_XB_SpiUartDisableIntTx, %function
 557              	UART_XB_SpiUartDisableIntTx:
 558              	.LFB10:
 464:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 465:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 19


 466:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** * Function Name: UART_XB_SpiUartDisableIntTx
 468:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** ****************************************************************************//**
 469:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
 470:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  Disables TX interrupt sources.
 471:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
 472:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *  \return
 473:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *
 475:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** uint32 UART_XB_SpiUartDisableIntTx(void)
 477:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** {
 559              		.loc 1 477 0
 560              		.cfi_startproc
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 82B0     		sub	sp, sp, #8
 566              		.cfi_def_cfa_offset 16
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 478:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     uint32 intSourceMask;
 479:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 480:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     intSourceMask = UART_XB_GetTxInterruptMode();
 569              		.loc 1 480 0
 570 0006 054B     		ldr	r3, .L41
 571 0008 1B68     		ldr	r3, [r3]
 572 000a 7B60     		str	r3, [r7, #4]
 481:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 482:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     UART_XB_SetTxInterruptMode(UART_XB_NO_INTR_SOURCES);
 573              		.loc 1 482 0
 574 000c 034B     		ldr	r3, .L41
 575 000e 0022     		mov	r2, #0
 576 0010 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** 
 484:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c ****     return (intSourceMask);
 577              		.loc 1 484 0
 578 0012 7B68     		ldr	r3, [r7, #4]
 485:.\Generated_Source\PSoC4/UART_XB_SPI_UART.c **** }
 579              		.loc 1 485 0
 580 0014 181C     		mov	r0, r3
 581 0016 BD46     		mov	sp, r7
 582 0018 02B0     		add	sp, sp, #8
 583              		@ sp needed
 584 001a 80BD     		pop	{r7, pc}
 585              	.L42:
 586              		.align	2
 587              	.L41:
 588 001c 880F2540 		.word	1076170632
 589              		.cfi_endproc
 590              	.LFE10:
 591              		.size	UART_XB_SpiUartDisableIntTx, .-UART_XB_SpiUartDisableIntTx
 592              		.text
 593              	.Letext0:
 594              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 595              		.section	.debug_info,"",%progbits
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 20


 596              	.Ldebug_info0:
 597 0000 F1020000 		.4byte	0x2f1
 598 0004 0400     		.2byte	0x4
 599 0006 00000000 		.4byte	.Ldebug_abbrev0
 600 000a 04       		.byte	0x4
 601 000b 01       		.uleb128 0x1
 602 000c 30010000 		.4byte	.LASF41
 603 0010 01       		.byte	0x1
 604 0011 FF020000 		.4byte	.LASF42
 605 0015 06000000 		.4byte	.LASF43
 606 0019 00000000 		.4byte	.Ldebug_ranges0+0
 607 001d 00000000 		.4byte	0
 608 0021 00000000 		.4byte	.Ldebug_line0
 609 0025 02       		.uleb128 0x2
 610 0026 01       		.byte	0x1
 611 0027 06       		.byte	0x6
 612 0028 2B030000 		.4byte	.LASF0
 613 002c 02       		.uleb128 0x2
 614 002d 01       		.byte	0x1
 615 002e 08       		.byte	0x8
 616 002f C5010000 		.4byte	.LASF1
 617 0033 02       		.uleb128 0x2
 618 0034 02       		.byte	0x2
 619 0035 05       		.byte	0x5
 620 0036 64020000 		.4byte	.LASF2
 621 003a 02       		.uleb128 0x2
 622 003b 02       		.byte	0x2
 623 003c 07       		.byte	0x7
 624 003d 57000000 		.4byte	.LASF3
 625 0041 02       		.uleb128 0x2
 626 0042 04       		.byte	0x4
 627 0043 05       		.byte	0x5
 628 0044 DA020000 		.4byte	.LASF4
 629 0048 02       		.uleb128 0x2
 630 0049 04       		.byte	0x4
 631 004a 07       		.byte	0x7
 632 004b A2000000 		.4byte	.LASF5
 633 004f 02       		.uleb128 0x2
 634 0050 08       		.byte	0x8
 635 0051 05       		.byte	0x5
 636 0052 32020000 		.4byte	.LASF6
 637 0056 02       		.uleb128 0x2
 638 0057 08       		.byte	0x8
 639 0058 07       		.byte	0x7
 640 0059 EB010000 		.4byte	.LASF7
 641 005d 03       		.uleb128 0x3
 642 005e 04       		.byte	0x4
 643 005f 05       		.byte	0x5
 644 0060 696E7400 		.ascii	"int\000"
 645 0064 02       		.uleb128 0x2
 646 0065 04       		.byte	0x4
 647 0066 07       		.byte	0x7
 648 0067 6A000000 		.4byte	.LASF8
 649 006b 04       		.uleb128 0x4
 650 006c B4000000 		.4byte	.LASF9
 651 0070 02       		.byte	0x2
 652 0071 9801     		.2byte	0x198
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 21


 653 0073 2C000000 		.4byte	0x2c
 654 0077 04       		.uleb128 0x4
 655 0078 BE010000 		.4byte	.LASF10
 656 007c 02       		.byte	0x2
 657 007d 9A01     		.2byte	0x19a
 658 007f 48000000 		.4byte	0x48
 659 0083 02       		.uleb128 0x2
 660 0084 04       		.byte	0x4
 661 0085 04       		.byte	0x4
 662 0086 97000000 		.4byte	.LASF11
 663 008a 02       		.uleb128 0x2
 664 008b 08       		.byte	0x8
 665 008c 04       		.byte	0x4
 666 008d F1000000 		.4byte	.LASF12
 667 0091 02       		.uleb128 0x2
 668 0092 01       		.byte	0x1
 669 0093 08       		.byte	0x8
 670 0094 40020000 		.4byte	.LASF13
 671 0098 05       		.uleb128 0x5
 672 0099 6B000000 		.4byte	0x6b
 673 009d 04       		.uleb128 0x4
 674 009e 00000000 		.4byte	.LASF14
 675 00a2 02       		.byte	0x2
 676 00a3 4402     		.2byte	0x244
 677 00a5 A9000000 		.4byte	0xa9
 678 00a9 05       		.uleb128 0x5
 679 00aa 77000000 		.4byte	0x77
 680 00ae 02       		.uleb128 0x2
 681 00af 04       		.byte	0x4
 682 00b0 07       		.byte	0x7
 683 00b1 29020000 		.4byte	.LASF15
 684 00b5 06       		.uleb128 0x6
 685 00b6 C0020000 		.4byte	.LASF18
 686 00ba 01       		.byte	0x1
 687 00bb 53       		.byte	0x53
 688 00bc 77000000 		.4byte	0x77
 689 00c0 00000000 		.4byte	.LFB2
 690 00c4 50000000 		.4byte	.LFE2-.LFB2
 691 00c8 01       		.uleb128 0x1
 692 00c9 9C       		.byte	0x9c
 693 00ca EB000000 		.4byte	0xeb
 694 00ce 07       		.uleb128 0x7
 695 00cf CF000000 		.4byte	.LASF16
 696 00d3 01       		.byte	0x1
 697 00d4 55       		.byte	0x55
 698 00d5 77000000 		.4byte	0x77
 699 00d9 02       		.uleb128 0x2
 700 00da 91       		.byte	0x91
 701 00db 74       		.sleb128 -12
 702 00dc 07       		.uleb128 0x7
 703 00dd 21020000 		.4byte	.LASF17
 704 00e1 01       		.byte	0x1
 705 00e2 58       		.byte	0x58
 706 00e3 77000000 		.4byte	0x77
 707 00e7 02       		.uleb128 0x2
 708 00e8 91       		.byte	0x91
 709 00e9 70       		.sleb128 -16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 22


 710 00ea 00       		.byte	0
 711 00eb 06       		.uleb128 0x6
 712 00ec 45020000 		.4byte	.LASF19
 713 00f0 01       		.byte	0x1
 714 00f1 9D       		.byte	0x9d
 715 00f2 77000000 		.4byte	0x77
 716 00f6 00000000 		.4byte	.LFB3
 717 00fa 40000000 		.4byte	.LFE3-.LFB3
 718 00fe 01       		.uleb128 0x1
 719 00ff 9C       		.byte	0x9c
 720 0100 21010000 		.4byte	0x121
 721 0104 07       		.uleb128 0x7
 722 0105 9D000000 		.4byte	.LASF20
 723 0109 01       		.byte	0x1
 724 010a 9F       		.byte	0x9f
 725 010b 77000000 		.4byte	0x77
 726 010f 02       		.uleb128 0x2
 727 0110 91       		.byte	0x91
 728 0111 74       		.sleb128 -12
 729 0112 07       		.uleb128 0x7
 730 0113 77000000 		.4byte	.LASF21
 731 0117 01       		.byte	0x1
 732 0118 A1       		.byte	0xa1
 733 0119 77000000 		.4byte	0x77
 734 011d 02       		.uleb128 0x2
 735 011e 91       		.byte	0x91
 736 011f 70       		.sleb128 -16
 737 0120 00       		.byte	0
 738 0121 08       		.uleb128 0x8
 739 0122 A3020000 		.4byte	.LASF28
 740 0126 01       		.byte	0x1
 741 0127 C8       		.byte	0xc8
 742 0128 00000000 		.4byte	.LFB4
 743 012c 60000000 		.4byte	.LFE4-.LFB4
 744 0130 01       		.uleb128 0x1
 745 0131 9C       		.byte	0x9c
 746 0132 09       		.uleb128 0x9
 747 0133 F8000000 		.4byte	.LASF22
 748 0137 01       		.byte	0x1
 749 0138 0101     		.2byte	0x101
 750 013a 00000000 		.4byte	.LFB5
 751 013e 98000000 		.4byte	.LFE5-.LFB5
 752 0142 01       		.uleb128 0x1
 753 0143 9C       		.byte	0x9c
 754 0144 67010000 		.4byte	0x167
 755 0148 0A       		.uleb128 0xa
 756 0149 37000000 		.4byte	.LASF24
 757 014d 01       		.byte	0x1
 758 014e 0101     		.2byte	0x101
 759 0150 77000000 		.4byte	0x77
 760 0154 02       		.uleb128 0x2
 761 0155 91       		.byte	0x91
 762 0156 6C       		.sleb128 -20
 763 0157 0B       		.uleb128 0xb
 764 0158 77000000 		.4byte	.LASF21
 765 015c 01       		.byte	0x1
 766 015d 0401     		.2byte	0x104
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 23


 767 015f 77000000 		.4byte	0x77
 768 0163 02       		.uleb128 0x2
 769 0164 91       		.byte	0x91
 770 0165 74       		.sleb128 -12
 771 0166 00       		.byte	0
 772 0167 0C       		.uleb128 0xc
 773 0168 7F000000 		.4byte	.LASF23
 774 016c 01       		.byte	0x1
 775 016d 5401     		.2byte	0x154
 776 016f 00000000 		.4byte	.LFB6
 777 0173 32000000 		.4byte	.LFE6-.LFB6
 778 0177 01       		.uleb128 0x1
 779 0178 9C       		.byte	0x9c
 780 0179 A9010000 		.4byte	0x1a9
 781 017d 0A       		.uleb128 0xa
 782 017e D6000000 		.4byte	.LASF25
 783 0182 01       		.byte	0x1
 784 0183 5401     		.2byte	0x154
 785 0185 A9010000 		.4byte	0x1a9
 786 0189 02       		.uleb128 0x2
 787 018a 91       		.byte	0x91
 788 018b 6C       		.sleb128 -20
 789 018c 0A       		.uleb128 0xa
 790 018d 31000000 		.4byte	.LASF26
 791 0191 01       		.byte	0x1
 792 0192 5401     		.2byte	0x154
 793 0194 77000000 		.4byte	0x77
 794 0198 02       		.uleb128 0x2
 795 0199 91       		.byte	0x91
 796 019a 68       		.sleb128 -24
 797 019b 0D       		.uleb128 0xd
 798 019c 6900     		.ascii	"i\000"
 799 019e 01       		.byte	0x1
 800 019f 5601     		.2byte	0x156
 801 01a1 77000000 		.4byte	0x77
 802 01a5 02       		.uleb128 0x2
 803 01a6 91       		.byte	0x91
 804 01a7 74       		.sleb128 -12
 805 01a8 00       		.byte	0
 806 01a9 0E       		.uleb128 0xe
 807 01aa 04       		.byte	0x4
 808 01ab AF010000 		.4byte	0x1af
 809 01af 0F       		.uleb128 0xf
 810 01b0 6B000000 		.4byte	0x6b
 811 01b4 10       		.uleb128 0x10
 812 01b5 02020000 		.4byte	.LASF27
 813 01b9 01       		.byte	0x1
 814 01ba 7501     		.2byte	0x175
 815 01bc 77000000 		.4byte	0x77
 816 01c0 00000000 		.4byte	.LFB7
 817 01c4 40000000 		.4byte	.LFE7-.LFB7
 818 01c8 01       		.uleb128 0x1
 819 01c9 9C       		.byte	0x9c
 820 01ca ED010000 		.4byte	0x1ed
 821 01ce 0B       		.uleb128 0xb
 822 01cf 9D000000 		.4byte	.LASF20
 823 01d3 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 24


 824 01d4 7701     		.2byte	0x177
 825 01d6 77000000 		.4byte	0x77
 826 01da 02       		.uleb128 0x2
 827 01db 91       		.byte	0x91
 828 01dc 74       		.sleb128 -12
 829 01dd 0B       		.uleb128 0xb
 830 01de 21020000 		.4byte	.LASF17
 831 01e2 01       		.byte	0x1
 832 01e3 7901     		.2byte	0x179
 833 01e5 77000000 		.4byte	0x77
 834 01e9 02       		.uleb128 0x2
 835 01ea 91       		.byte	0x91
 836 01eb 70       		.sleb128 -16
 837 01ec 00       		.byte	0
 838 01ed 11       		.uleb128 0x11
 839 01ee 13010000 		.4byte	.LASF29
 840 01f2 01       		.byte	0x1
 841 01f3 A101     		.2byte	0x1a1
 842 01f5 00000000 		.4byte	.LFB8
 843 01f9 64000000 		.4byte	.LFE8-.LFB8
 844 01fd 01       		.uleb128 0x1
 845 01fe 9C       		.byte	0x9c
 846 01ff 10       		.uleb128 0x10
 847 0200 87020000 		.4byte	.LASF30
 848 0204 01       		.byte	0x1
 849 0205 C601     		.2byte	0x1c6
 850 0207 77000000 		.4byte	0x77
 851 020b 00000000 		.4byte	.LFB9
 852 020f 20000000 		.4byte	.LFE9-.LFB9
 853 0213 01       		.uleb128 0x1
 854 0214 9C       		.byte	0x9c
 855 0215 29020000 		.4byte	0x229
 856 0219 0B       		.uleb128 0xb
 857 021a E1010000 		.4byte	.LASF31
 858 021e 01       		.byte	0x1
 859 021f C801     		.2byte	0x1c8
 860 0221 77000000 		.4byte	0x77
 861 0225 02       		.uleb128 0x2
 862 0226 91       		.byte	0x91
 863 0227 74       		.sleb128 -12
 864 0228 00       		.byte	0
 865 0229 10       		.uleb128 0x10
 866 022a E3020000 		.4byte	.LASF32
 867 022e 01       		.byte	0x1
 868 022f DC01     		.2byte	0x1dc
 869 0231 77000000 		.4byte	0x77
 870 0235 00000000 		.4byte	.LFB10
 871 0239 20000000 		.4byte	.LFE10-.LFB10
 872 023d 01       		.uleb128 0x1
 873 023e 9C       		.byte	0x9c
 874 023f 53020000 		.4byte	0x253
 875 0243 0B       		.uleb128 0xb
 876 0244 D3010000 		.4byte	.LASF33
 877 0248 01       		.byte	0x1
 878 0249 DE01     		.2byte	0x1de
 879 024b 77000000 		.4byte	0x77
 880 024f 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 25


 881 0250 91       		.byte	0x91
 882 0251 74       		.sleb128 -12
 883 0252 00       		.byte	0
 884 0253 12       		.uleb128 0x12
 885 0254 4C030000 		.4byte	.LASF34
 886 0258 01       		.byte	0x1
 887 0259 1C       		.byte	0x1c
 888 025a A9000000 		.4byte	0xa9
 889 025e 05       		.uleb128 0x5
 890 025f 03       		.byte	0x3
 891 0260 00000000 		.4byte	UART_XB_rxBufferHead
 892 0264 12       		.uleb128 0x12
 893 0265 DC000000 		.4byte	.LASF35
 894 0269 01       		.byte	0x1
 895 026a 1E       		.byte	0x1e
 896 026b A9000000 		.4byte	0xa9
 897 026f 05       		.uleb128 0x5
 898 0270 03       		.byte	0x3
 899 0271 00000000 		.4byte	UART_XB_rxBufferTail
 900 0275 12       		.uleb128 0x12
 901 0276 61030000 		.4byte	.LASF36
 902 027a 01       		.byte	0x1
 903 027b 26       		.byte	0x26
 904 027c 98000000 		.4byte	0x98
 905 0280 05       		.uleb128 0x5
 906 0281 03       		.byte	0x3
 907 0282 00000000 		.4byte	UART_XB_rxBufferOverflow
 908 0286 12       		.uleb128 0x12
 909 0287 37030000 		.4byte	.LASF37
 910 028b 01       		.byte	0x1
 911 028c 2C       		.byte	0x2c
 912 028d A9000000 		.4byte	0xa9
 913 0291 05       		.uleb128 0x5
 914 0292 03       		.byte	0x3
 915 0293 00000000 		.4byte	UART_XB_txBufferHead
 916 0297 12       		.uleb128 0x12
 917 0298 BA000000 		.4byte	.LASF38
 918 029c 01       		.byte	0x1
 919 029d 2E       		.byte	0x2e
 920 029e A9000000 		.4byte	0xa9
 921 02a2 05       		.uleb128 0x5
 922 02a3 03       		.byte	0x3
 923 02a4 00000000 		.4byte	UART_XB_txBufferTail
 924 02a8 13       		.uleb128 0x13
 925 02a9 6B000000 		.4byte	0x6b
 926 02ad B8020000 		.4byte	0x2b8
 927 02b1 14       		.uleb128 0x14
 928 02b2 AE000000 		.4byte	0xae
 929 02b6 64       		.byte	0x64
 930 02b7 00       		.byte	0
 931 02b8 12       		.uleb128 0x12
 932 02b9 6E020000 		.4byte	.LASF39
 933 02bd 01       		.byte	0x1
 934 02be 33       		.byte	0x33
 935 02bf C9020000 		.4byte	0x2c9
 936 02c3 05       		.uleb128 0x5
 937 02c4 03       		.byte	0x3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 26


 938 02c5 00000000 		.4byte	UART_XB_rxBufferInternal
 939 02c9 05       		.uleb128 0x5
 940 02ca A8020000 		.4byte	0x2a8
 941 02ce 13       		.uleb128 0x13
 942 02cf 6B000000 		.4byte	0x6b
 943 02d3 DE020000 		.4byte	0x2de
 944 02d7 14       		.uleb128 0x14
 945 02d8 AE000000 		.4byte	0xae
 946 02dc 63       		.byte	0x63
 947 02dd 00       		.byte	0
 948 02de 12       		.uleb128 0x12
 949 02df 3E000000 		.4byte	.LASF40
 950 02e3 01       		.byte	0x1
 951 02e4 37       		.byte	0x37
 952 02e5 EF020000 		.4byte	0x2ef
 953 02e9 05       		.uleb128 0x5
 954 02ea 03       		.byte	0x3
 955 02eb 00000000 		.4byte	UART_XB_txBufferInternal
 956 02ef 05       		.uleb128 0x5
 957 02f0 CE020000 		.4byte	0x2ce
 958 02f4 00       		.byte	0
 959              		.section	.debug_abbrev,"",%progbits
 960              	.Ldebug_abbrev0:
 961 0000 01       		.uleb128 0x1
 962 0001 11       		.uleb128 0x11
 963 0002 01       		.byte	0x1
 964 0003 25       		.uleb128 0x25
 965 0004 0E       		.uleb128 0xe
 966 0005 13       		.uleb128 0x13
 967 0006 0B       		.uleb128 0xb
 968 0007 03       		.uleb128 0x3
 969 0008 0E       		.uleb128 0xe
 970 0009 1B       		.uleb128 0x1b
 971 000a 0E       		.uleb128 0xe
 972 000b 55       		.uleb128 0x55
 973 000c 17       		.uleb128 0x17
 974 000d 11       		.uleb128 0x11
 975 000e 01       		.uleb128 0x1
 976 000f 10       		.uleb128 0x10
 977 0010 17       		.uleb128 0x17
 978 0011 00       		.byte	0
 979 0012 00       		.byte	0
 980 0013 02       		.uleb128 0x2
 981 0014 24       		.uleb128 0x24
 982 0015 00       		.byte	0
 983 0016 0B       		.uleb128 0xb
 984 0017 0B       		.uleb128 0xb
 985 0018 3E       		.uleb128 0x3e
 986 0019 0B       		.uleb128 0xb
 987 001a 03       		.uleb128 0x3
 988 001b 0E       		.uleb128 0xe
 989 001c 00       		.byte	0
 990 001d 00       		.byte	0
 991 001e 03       		.uleb128 0x3
 992 001f 24       		.uleb128 0x24
 993 0020 00       		.byte	0
 994 0021 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 27


 995 0022 0B       		.uleb128 0xb
 996 0023 3E       		.uleb128 0x3e
 997 0024 0B       		.uleb128 0xb
 998 0025 03       		.uleb128 0x3
 999 0026 08       		.uleb128 0x8
 1000 0027 00       		.byte	0
 1001 0028 00       		.byte	0
 1002 0029 04       		.uleb128 0x4
 1003 002a 16       		.uleb128 0x16
 1004 002b 00       		.byte	0
 1005 002c 03       		.uleb128 0x3
 1006 002d 0E       		.uleb128 0xe
 1007 002e 3A       		.uleb128 0x3a
 1008 002f 0B       		.uleb128 0xb
 1009 0030 3B       		.uleb128 0x3b
 1010 0031 05       		.uleb128 0x5
 1011 0032 49       		.uleb128 0x49
 1012 0033 13       		.uleb128 0x13
 1013 0034 00       		.byte	0
 1014 0035 00       		.byte	0
 1015 0036 05       		.uleb128 0x5
 1016 0037 35       		.uleb128 0x35
 1017 0038 00       		.byte	0
 1018 0039 49       		.uleb128 0x49
 1019 003a 13       		.uleb128 0x13
 1020 003b 00       		.byte	0
 1021 003c 00       		.byte	0
 1022 003d 06       		.uleb128 0x6
 1023 003e 2E       		.uleb128 0x2e
 1024 003f 01       		.byte	0x1
 1025 0040 3F       		.uleb128 0x3f
 1026 0041 19       		.uleb128 0x19
 1027 0042 03       		.uleb128 0x3
 1028 0043 0E       		.uleb128 0xe
 1029 0044 3A       		.uleb128 0x3a
 1030 0045 0B       		.uleb128 0xb
 1031 0046 3B       		.uleb128 0x3b
 1032 0047 0B       		.uleb128 0xb
 1033 0048 27       		.uleb128 0x27
 1034 0049 19       		.uleb128 0x19
 1035 004a 49       		.uleb128 0x49
 1036 004b 13       		.uleb128 0x13
 1037 004c 11       		.uleb128 0x11
 1038 004d 01       		.uleb128 0x1
 1039 004e 12       		.uleb128 0x12
 1040 004f 06       		.uleb128 0x6
 1041 0050 40       		.uleb128 0x40
 1042 0051 18       		.uleb128 0x18
 1043 0052 9742     		.uleb128 0x2117
 1044 0054 19       		.uleb128 0x19
 1045 0055 01       		.uleb128 0x1
 1046 0056 13       		.uleb128 0x13
 1047 0057 00       		.byte	0
 1048 0058 00       		.byte	0
 1049 0059 07       		.uleb128 0x7
 1050 005a 34       		.uleb128 0x34
 1051 005b 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 28


 1052 005c 03       		.uleb128 0x3
 1053 005d 0E       		.uleb128 0xe
 1054 005e 3A       		.uleb128 0x3a
 1055 005f 0B       		.uleb128 0xb
 1056 0060 3B       		.uleb128 0x3b
 1057 0061 0B       		.uleb128 0xb
 1058 0062 49       		.uleb128 0x49
 1059 0063 13       		.uleb128 0x13
 1060 0064 02       		.uleb128 0x2
 1061 0065 18       		.uleb128 0x18
 1062 0066 00       		.byte	0
 1063 0067 00       		.byte	0
 1064 0068 08       		.uleb128 0x8
 1065 0069 2E       		.uleb128 0x2e
 1066 006a 00       		.byte	0
 1067 006b 3F       		.uleb128 0x3f
 1068 006c 19       		.uleb128 0x19
 1069 006d 03       		.uleb128 0x3
 1070 006e 0E       		.uleb128 0xe
 1071 006f 3A       		.uleb128 0x3a
 1072 0070 0B       		.uleb128 0xb
 1073 0071 3B       		.uleb128 0x3b
 1074 0072 0B       		.uleb128 0xb
 1075 0073 27       		.uleb128 0x27
 1076 0074 19       		.uleb128 0x19
 1077 0075 11       		.uleb128 0x11
 1078 0076 01       		.uleb128 0x1
 1079 0077 12       		.uleb128 0x12
 1080 0078 06       		.uleb128 0x6
 1081 0079 40       		.uleb128 0x40
 1082 007a 18       		.uleb128 0x18
 1083 007b 9642     		.uleb128 0x2116
 1084 007d 19       		.uleb128 0x19
 1085 007e 00       		.byte	0
 1086 007f 00       		.byte	0
 1087 0080 09       		.uleb128 0x9
 1088 0081 2E       		.uleb128 0x2e
 1089 0082 01       		.byte	0x1
 1090 0083 3F       		.uleb128 0x3f
 1091 0084 19       		.uleb128 0x19
 1092 0085 03       		.uleb128 0x3
 1093 0086 0E       		.uleb128 0xe
 1094 0087 3A       		.uleb128 0x3a
 1095 0088 0B       		.uleb128 0xb
 1096 0089 3B       		.uleb128 0x3b
 1097 008a 05       		.uleb128 0x5
 1098 008b 27       		.uleb128 0x27
 1099 008c 19       		.uleb128 0x19
 1100 008d 11       		.uleb128 0x11
 1101 008e 01       		.uleb128 0x1
 1102 008f 12       		.uleb128 0x12
 1103 0090 06       		.uleb128 0x6
 1104 0091 40       		.uleb128 0x40
 1105 0092 18       		.uleb128 0x18
 1106 0093 9742     		.uleb128 0x2117
 1107 0095 19       		.uleb128 0x19
 1108 0096 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 29


 1109 0097 13       		.uleb128 0x13
 1110 0098 00       		.byte	0
 1111 0099 00       		.byte	0
 1112 009a 0A       		.uleb128 0xa
 1113 009b 05       		.uleb128 0x5
 1114 009c 00       		.byte	0
 1115 009d 03       		.uleb128 0x3
 1116 009e 0E       		.uleb128 0xe
 1117 009f 3A       		.uleb128 0x3a
 1118 00a0 0B       		.uleb128 0xb
 1119 00a1 3B       		.uleb128 0x3b
 1120 00a2 05       		.uleb128 0x5
 1121 00a3 49       		.uleb128 0x49
 1122 00a4 13       		.uleb128 0x13
 1123 00a5 02       		.uleb128 0x2
 1124 00a6 18       		.uleb128 0x18
 1125 00a7 00       		.byte	0
 1126 00a8 00       		.byte	0
 1127 00a9 0B       		.uleb128 0xb
 1128 00aa 34       		.uleb128 0x34
 1129 00ab 00       		.byte	0
 1130 00ac 03       		.uleb128 0x3
 1131 00ad 0E       		.uleb128 0xe
 1132 00ae 3A       		.uleb128 0x3a
 1133 00af 0B       		.uleb128 0xb
 1134 00b0 3B       		.uleb128 0x3b
 1135 00b1 05       		.uleb128 0x5
 1136 00b2 49       		.uleb128 0x49
 1137 00b3 13       		.uleb128 0x13
 1138 00b4 02       		.uleb128 0x2
 1139 00b5 18       		.uleb128 0x18
 1140 00b6 00       		.byte	0
 1141 00b7 00       		.byte	0
 1142 00b8 0C       		.uleb128 0xc
 1143 00b9 2E       		.uleb128 0x2e
 1144 00ba 01       		.byte	0x1
 1145 00bb 3F       		.uleb128 0x3f
 1146 00bc 19       		.uleb128 0x19
 1147 00bd 03       		.uleb128 0x3
 1148 00be 0E       		.uleb128 0xe
 1149 00bf 3A       		.uleb128 0x3a
 1150 00c0 0B       		.uleb128 0xb
 1151 00c1 3B       		.uleb128 0x3b
 1152 00c2 05       		.uleb128 0x5
 1153 00c3 27       		.uleb128 0x27
 1154 00c4 19       		.uleb128 0x19
 1155 00c5 11       		.uleb128 0x11
 1156 00c6 01       		.uleb128 0x1
 1157 00c7 12       		.uleb128 0x12
 1158 00c8 06       		.uleb128 0x6
 1159 00c9 40       		.uleb128 0x40
 1160 00ca 18       		.uleb128 0x18
 1161 00cb 9642     		.uleb128 0x2116
 1162 00cd 19       		.uleb128 0x19
 1163 00ce 01       		.uleb128 0x1
 1164 00cf 13       		.uleb128 0x13
 1165 00d0 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 30


 1166 00d1 00       		.byte	0
 1167 00d2 0D       		.uleb128 0xd
 1168 00d3 34       		.uleb128 0x34
 1169 00d4 00       		.byte	0
 1170 00d5 03       		.uleb128 0x3
 1171 00d6 08       		.uleb128 0x8
 1172 00d7 3A       		.uleb128 0x3a
 1173 00d8 0B       		.uleb128 0xb
 1174 00d9 3B       		.uleb128 0x3b
 1175 00da 05       		.uleb128 0x5
 1176 00db 49       		.uleb128 0x49
 1177 00dc 13       		.uleb128 0x13
 1178 00dd 02       		.uleb128 0x2
 1179 00de 18       		.uleb128 0x18
 1180 00df 00       		.byte	0
 1181 00e0 00       		.byte	0
 1182 00e1 0E       		.uleb128 0xe
 1183 00e2 0F       		.uleb128 0xf
 1184 00e3 00       		.byte	0
 1185 00e4 0B       		.uleb128 0xb
 1186 00e5 0B       		.uleb128 0xb
 1187 00e6 49       		.uleb128 0x49
 1188 00e7 13       		.uleb128 0x13
 1189 00e8 00       		.byte	0
 1190 00e9 00       		.byte	0
 1191 00ea 0F       		.uleb128 0xf
 1192 00eb 26       		.uleb128 0x26
 1193 00ec 00       		.byte	0
 1194 00ed 49       		.uleb128 0x49
 1195 00ee 13       		.uleb128 0x13
 1196 00ef 00       		.byte	0
 1197 00f0 00       		.byte	0
 1198 00f1 10       		.uleb128 0x10
 1199 00f2 2E       		.uleb128 0x2e
 1200 00f3 01       		.byte	0x1
 1201 00f4 3F       		.uleb128 0x3f
 1202 00f5 19       		.uleb128 0x19
 1203 00f6 03       		.uleb128 0x3
 1204 00f7 0E       		.uleb128 0xe
 1205 00f8 3A       		.uleb128 0x3a
 1206 00f9 0B       		.uleb128 0xb
 1207 00fa 3B       		.uleb128 0x3b
 1208 00fb 05       		.uleb128 0x5
 1209 00fc 27       		.uleb128 0x27
 1210 00fd 19       		.uleb128 0x19
 1211 00fe 49       		.uleb128 0x49
 1212 00ff 13       		.uleb128 0x13
 1213 0100 11       		.uleb128 0x11
 1214 0101 01       		.uleb128 0x1
 1215 0102 12       		.uleb128 0x12
 1216 0103 06       		.uleb128 0x6
 1217 0104 40       		.uleb128 0x40
 1218 0105 18       		.uleb128 0x18
 1219 0106 9742     		.uleb128 0x2117
 1220 0108 19       		.uleb128 0x19
 1221 0109 01       		.uleb128 0x1
 1222 010a 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 31


 1223 010b 00       		.byte	0
 1224 010c 00       		.byte	0
 1225 010d 11       		.uleb128 0x11
 1226 010e 2E       		.uleb128 0x2e
 1227 010f 00       		.byte	0
 1228 0110 3F       		.uleb128 0x3f
 1229 0111 19       		.uleb128 0x19
 1230 0112 03       		.uleb128 0x3
 1231 0113 0E       		.uleb128 0xe
 1232 0114 3A       		.uleb128 0x3a
 1233 0115 0B       		.uleb128 0xb
 1234 0116 3B       		.uleb128 0x3b
 1235 0117 05       		.uleb128 0x5
 1236 0118 27       		.uleb128 0x27
 1237 0119 19       		.uleb128 0x19
 1238 011a 11       		.uleb128 0x11
 1239 011b 01       		.uleb128 0x1
 1240 011c 12       		.uleb128 0x12
 1241 011d 06       		.uleb128 0x6
 1242 011e 40       		.uleb128 0x40
 1243 011f 18       		.uleb128 0x18
 1244 0120 9642     		.uleb128 0x2116
 1245 0122 19       		.uleb128 0x19
 1246 0123 00       		.byte	0
 1247 0124 00       		.byte	0
 1248 0125 12       		.uleb128 0x12
 1249 0126 34       		.uleb128 0x34
 1250 0127 00       		.byte	0
 1251 0128 03       		.uleb128 0x3
 1252 0129 0E       		.uleb128 0xe
 1253 012a 3A       		.uleb128 0x3a
 1254 012b 0B       		.uleb128 0xb
 1255 012c 3B       		.uleb128 0x3b
 1256 012d 0B       		.uleb128 0xb
 1257 012e 49       		.uleb128 0x49
 1258 012f 13       		.uleb128 0x13
 1259 0130 3F       		.uleb128 0x3f
 1260 0131 19       		.uleb128 0x19
 1261 0132 02       		.uleb128 0x2
 1262 0133 18       		.uleb128 0x18
 1263 0134 00       		.byte	0
 1264 0135 00       		.byte	0
 1265 0136 13       		.uleb128 0x13
 1266 0137 01       		.uleb128 0x1
 1267 0138 01       		.byte	0x1
 1268 0139 49       		.uleb128 0x49
 1269 013a 13       		.uleb128 0x13
 1270 013b 01       		.uleb128 0x1
 1271 013c 13       		.uleb128 0x13
 1272 013d 00       		.byte	0
 1273 013e 00       		.byte	0
 1274 013f 14       		.uleb128 0x14
 1275 0140 21       		.uleb128 0x21
 1276 0141 00       		.byte	0
 1277 0142 49       		.uleb128 0x49
 1278 0143 13       		.uleb128 0x13
 1279 0144 2F       		.uleb128 0x2f
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 32


 1280 0145 0B       		.uleb128 0xb
 1281 0146 00       		.byte	0
 1282 0147 00       		.byte	0
 1283 0148 00       		.byte	0
 1284              		.section	.debug_aranges,"",%progbits
 1285 0000 5C000000 		.4byte	0x5c
 1286 0004 0200     		.2byte	0x2
 1287 0006 00000000 		.4byte	.Ldebug_info0
 1288 000a 04       		.byte	0x4
 1289 000b 00       		.byte	0
 1290 000c 0000     		.2byte	0
 1291 000e 0000     		.2byte	0
 1292 0010 00000000 		.4byte	.LFB2
 1293 0014 50000000 		.4byte	.LFE2-.LFB2
 1294 0018 00000000 		.4byte	.LFB3
 1295 001c 40000000 		.4byte	.LFE3-.LFB3
 1296 0020 00000000 		.4byte	.LFB4
 1297 0024 60000000 		.4byte	.LFE4-.LFB4
 1298 0028 00000000 		.4byte	.LFB5
 1299 002c 98000000 		.4byte	.LFE5-.LFB5
 1300 0030 00000000 		.4byte	.LFB6
 1301 0034 32000000 		.4byte	.LFE6-.LFB6
 1302 0038 00000000 		.4byte	.LFB7
 1303 003c 40000000 		.4byte	.LFE7-.LFB7
 1304 0040 00000000 		.4byte	.LFB8
 1305 0044 64000000 		.4byte	.LFE8-.LFB8
 1306 0048 00000000 		.4byte	.LFB9
 1307 004c 20000000 		.4byte	.LFE9-.LFB9
 1308 0050 00000000 		.4byte	.LFB10
 1309 0054 20000000 		.4byte	.LFE10-.LFB10
 1310 0058 00000000 		.4byte	0
 1311 005c 00000000 		.4byte	0
 1312              		.section	.debug_ranges,"",%progbits
 1313              	.Ldebug_ranges0:
 1314 0000 00000000 		.4byte	.LFB2
 1315 0004 50000000 		.4byte	.LFE2
 1316 0008 00000000 		.4byte	.LFB3
 1317 000c 40000000 		.4byte	.LFE3
 1318 0010 00000000 		.4byte	.LFB4
 1319 0014 60000000 		.4byte	.LFE4
 1320 0018 00000000 		.4byte	.LFB5
 1321 001c 98000000 		.4byte	.LFE5
 1322 0020 00000000 		.4byte	.LFB6
 1323 0024 32000000 		.4byte	.LFE6
 1324 0028 00000000 		.4byte	.LFB7
 1325 002c 40000000 		.4byte	.LFE7
 1326 0030 00000000 		.4byte	.LFB8
 1327 0034 64000000 		.4byte	.LFE8
 1328 0038 00000000 		.4byte	.LFB9
 1329 003c 20000000 		.4byte	.LFE9
 1330 0040 00000000 		.4byte	.LFB10
 1331 0044 20000000 		.4byte	.LFE10
 1332 0048 00000000 		.4byte	0
 1333 004c 00000000 		.4byte	0
 1334              		.section	.debug_line,"",%progbits
 1335              	.Ldebug_line0:
 1336 0000 61010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 33


 1336      02006600 
 1336      00000201 
 1336      FB0E0D00 
 1336      01010101 
 1337              	.LASF14:
 1338 0000 72656733 		.ascii	"reg32\000"
 1338      3200
 1339              	.LASF43:
 1340 0006 633A5C43 		.ascii	"c:\\Cypress\\Mainline_v2\\Finish\\fin_v0.cydsn\000"
 1340      79707265 
 1340      73735C4D 
 1340      61696E6C 
 1340      696E655F 
 1341              	.LASF26:
 1342 0031 636F756E 		.ascii	"count\000"
 1342      7400
 1343              	.LASF24:
 1344 0037 74784461 		.ascii	"txData\000"
 1344      746100
 1345              	.LASF40:
 1346 003e 55415254 		.ascii	"UART_XB_txBufferInternal\000"
 1346      5F58425F 
 1346      74784275 
 1346      66666572 
 1346      496E7465 
 1347              	.LASF3:
 1348 0057 73686F72 		.ascii	"short unsigned int\000"
 1348      7420756E 
 1348      7369676E 
 1348      65642069 
 1348      6E7400
 1349              	.LASF8:
 1350 006a 756E7369 		.ascii	"unsigned int\000"
 1350      676E6564 
 1350      20696E74 
 1350      00
 1351              	.LASF21:
 1352 0077 6C6F6348 		.ascii	"locHead\000"
 1352      65616400 
 1353              	.LASF23:
 1354 007f 55415254 		.ascii	"UART_XB_SpiUartPutArray\000"
 1354      5F58425F 
 1354      53706955 
 1354      61727450 
 1354      75744172 
 1355              	.LASF11:
 1356 0097 666C6F61 		.ascii	"float\000"
 1356      7400
 1357              	.LASF20:
 1358 009d 73697A65 		.ascii	"size\000"
 1358      00
 1359              	.LASF5:
 1360 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 1360      20756E73 
 1360      69676E65 
 1360      6420696E 
 1360      7400
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 34


 1361              	.LASF9:
 1362 00b4 75696E74 		.ascii	"uint8\000"
 1362      3800
 1363              	.LASF38:
 1364 00ba 55415254 		.ascii	"UART_XB_txBufferTail\000"
 1364      5F58425F 
 1364      74784275 
 1364      66666572 
 1364      5461696C 
 1365              	.LASF16:
 1366 00cf 72784461 		.ascii	"rxData\000"
 1366      746100
 1367              	.LASF25:
 1368 00d6 77724275 		.ascii	"wrBuf\000"
 1368      6600
 1369              	.LASF35:
 1370 00dc 55415254 		.ascii	"UART_XB_rxBufferTail\000"
 1370      5F58425F 
 1370      72784275 
 1370      66666572 
 1370      5461696C 
 1371              	.LASF12:
 1372 00f1 646F7562 		.ascii	"double\000"
 1372      6C6500
 1373              	.LASF22:
 1374 00f8 55415254 		.ascii	"UART_XB_SpiUartWriteTxData\000"
 1374      5F58425F 
 1374      53706955 
 1374      61727457 
 1374      72697465 
 1375              	.LASF29:
 1376 0113 55415254 		.ascii	"UART_XB_SpiUartClearTxBuffer\000"
 1376      5F58425F 
 1376      53706955 
 1376      61727443 
 1376      6C656172 
 1377              	.LASF41:
 1378 0130 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1378      4320342E 
 1378      392E3320 
 1378      32303135 
 1378      30333033 
 1379 0163 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1379      20726576 
 1379      6973696F 
 1379      6E203232 
 1379      31323230 
 1380 0196 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1380      66756E63 
 1380      74696F6E 
 1380      2D736563 
 1380      74696F6E 
 1381              	.LASF10:
 1382 01be 75696E74 		.ascii	"uint32\000"
 1382      333200
 1383              	.LASF1:
 1384 01c5 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 35


 1384      676E6564 
 1384      20636861 
 1384      7200
 1385              	.LASF33:
 1386 01d3 696E7453 		.ascii	"intSourceMask\000"
 1386      6F757263 
 1386      654D6173 
 1386      6B00
 1387              	.LASF31:
 1388 01e1 696E7453 		.ascii	"intSource\000"
 1388      6F757263 
 1388      6500
 1389              	.LASF7:
 1390 01eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1390      206C6F6E 
 1390      6720756E 
 1390      7369676E 
 1390      65642069 
 1391              	.LASF27:
 1392 0202 55415254 		.ascii	"UART_XB_SpiUartGetTxBufferSize\000"
 1392      5F58425F 
 1392      53706955 
 1392      61727447 
 1392      65745478 
 1393              	.LASF17:
 1394 0221 6C6F6354 		.ascii	"locTail\000"
 1394      61696C00 
 1395              	.LASF15:
 1396 0229 73697A65 		.ascii	"sizetype\000"
 1396      74797065 
 1396      00
 1397              	.LASF6:
 1398 0232 6C6F6E67 		.ascii	"long long int\000"
 1398      206C6F6E 
 1398      6720696E 
 1398      7400
 1399              	.LASF13:
 1400 0240 63686172 		.ascii	"char\000"
 1400      00
 1401              	.LASF19:
 1402 0245 55415254 		.ascii	"UART_XB_SpiUartGetRxBufferSize\000"
 1402      5F58425F 
 1402      53706955 
 1402      61727447 
 1402      65745278 
 1403              	.LASF2:
 1404 0264 73686F72 		.ascii	"short int\000"
 1404      7420696E 
 1404      7400
 1405              	.LASF39:
 1406 026e 55415254 		.ascii	"UART_XB_rxBufferInternal\000"
 1406      5F58425F 
 1406      72784275 
 1406      66666572 
 1406      496E7465 
 1407              	.LASF30:
 1408 0287 55415254 		.ascii	"UART_XB_SpiUartDisableIntRx\000"
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccS8SNm9.s 			page 36


 1408      5F58425F 
 1408      53706955 
 1408      61727444 
 1408      69736162 
 1409              	.LASF28:
 1410 02a3 55415254 		.ascii	"UART_XB_SpiUartClearRxBuffer\000"
 1410      5F58425F 
 1410      53706955 
 1410      61727443 
 1410      6C656172 
 1411              	.LASF18:
 1412 02c0 55415254 		.ascii	"UART_XB_SpiUartReadRxData\000"
 1412      5F58425F 
 1412      53706955 
 1412      61727452 
 1412      65616452 
 1413              	.LASF4:
 1414 02da 6C6F6E67 		.ascii	"long int\000"
 1414      20696E74 
 1414      00
 1415              	.LASF32:
 1416 02e3 55415254 		.ascii	"UART_XB_SpiUartDisableIntTx\000"
 1416      5F58425F 
 1416      53706955 
 1416      61727444 
 1416      69736162 
 1417              	.LASF42:
 1418 02ff 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_XB_SPI_UART.c\000"
 1418      6E657261 
 1418      7465645F 
 1418      536F7572 
 1418      63655C50 
 1419              	.LASF0:
 1420 032b 7369676E 		.ascii	"signed char\000"
 1420      65642063 
 1420      68617200 
 1421              	.LASF37:
 1422 0337 55415254 		.ascii	"UART_XB_txBufferHead\000"
 1422      5F58425F 
 1422      74784275 
 1422      66666572 
 1422      48656164 
 1423              	.LASF34:
 1424 034c 55415254 		.ascii	"UART_XB_rxBufferHead\000"
 1424      5F58425F 
 1424      72784275 
 1424      66666572 
 1424      48656164 
 1425              	.LASF36:
 1426 0361 55415254 		.ascii	"UART_XB_rxBufferOverflow\000"
 1426      5F58425F 
 1426      72784275 
 1426      66666572 
 1426      4F766572 
 1427              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
