ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer_LED.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Timer_LED_initVar
  18              		.bss
  19              		.type	Timer_LED_initVar, %object
  20              		.size	Timer_LED_initVar, 1
  21              	Timer_LED_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.Timer_LED_Init,"ax",%progbits
  24              		.align	2
  25              		.global	Timer_LED_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	Timer_LED_Init, %function
  29              	Timer_LED_Init:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\Timer_LED.c"
   1:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Timer_LED.c **** * File Name: Timer_LED.c
   3:.\Generated_Source\PSoC4/Timer_LED.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/Timer_LED.c **** *
   5:.\Generated_Source\PSoC4/Timer_LED.c **** * Description:
   6:.\Generated_Source\PSoC4/Timer_LED.c **** *  This file provides the source code to the API for the Timer_LED
   7:.\Generated_Source\PSoC4/Timer_LED.c **** *  component
   8:.\Generated_Source\PSoC4/Timer_LED.c **** *
   9:.\Generated_Source\PSoC4/Timer_LED.c **** * Note:
  10:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
  11:.\Generated_Source\PSoC4/Timer_LED.c **** *
  12:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Timer_LED.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Timer_LED.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Timer_LED.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Timer_LED.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Timer_LED.c **** 
  19:.\Generated_Source\PSoC4/Timer_LED.c **** #include "Timer_LED.h"
  20:.\Generated_Source\PSoC4/Timer_LED.c **** 
  21:.\Generated_Source\PSoC4/Timer_LED.c **** uint8 Timer_LED_initVar = 0u;
  22:.\Generated_Source\PSoC4/Timer_LED.c **** 
  23:.\Generated_Source\PSoC4/Timer_LED.c **** 
  24:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_Init
  26:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 2


  27:.\Generated_Source\PSoC4/Timer_LED.c **** *
  28:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
  29:.\Generated_Source\PSoC4/Timer_LED.c **** *  Initialize/Restore default Timer_LED configuration.
  30:.\Generated_Source\PSoC4/Timer_LED.c **** *
  31:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
  32:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
  33:.\Generated_Source\PSoC4/Timer_LED.c **** *
  34:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
  35:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
  36:.\Generated_Source\PSoC4/Timer_LED.c **** *
  37:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_Init(void)
  39:.\Generated_Source\PSoC4/Timer_LED.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/Timer_LED.c **** 
  41:.\Generated_Source\PSoC4/Timer_LED.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__QUAD == Timer_LED_CONFIG)
  43:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_CONTROL_REG = Timer_LED_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/Timer_LED.c ****         
  45:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_TRIG_CONTROL1_REG  = Timer_LED_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/Timer_LED.c **** 
  48:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_SetInterruptMode(Timer_LED_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/Timer_LED.c ****         
  51:.\Generated_Source\PSoC4/Timer_LED.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_SetCounterMode(Timer_LED_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_WritePeriod(Timer_LED_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_WriteCounter(Timer_LED_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif  /* (Timer_LED__QUAD == Timer_LED_CONFIG) */
  56:.\Generated_Source\PSoC4/Timer_LED.c **** 
  57:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__TIMER == Timer_LED_CONFIG)
  58:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_CONTROL_REG = Timer_LED_CTRL_TIMER_BASE_CONFIG;
  40              		.loc 1 58 0
  41 0004 0B4B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 5202     		lsl	r2, r2, #9
  44 000a 1A60     		str	r2, [r3]
  59:.\Generated_Source\PSoC4/Timer_LED.c ****         
  60:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_TRIG_CONTROL1_REG  = Timer_LED_TIMER_SIGNALS_MODES;
  45              		.loc 1 61 0
  46 000c 0A4B     		ldr	r3, .L2+4
  47 000e 0C22     		mov	r2, #12
  48 0010 1A60     		str	r2, [r3]
  62:.\Generated_Source\PSoC4/Timer_LED.c ****     
  63:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_SetInterruptMode(Timer_LED_TC_INTERRUPT_MASK);
  49              		.loc 1 64 0
  50 0012 0220     		mov	r0, #2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 3


  51 0014 FFF7FEFF 		bl	Timer_LED_SetInterruptMode
  65:.\Generated_Source\PSoC4/Timer_LED.c ****         
  66:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_WritePeriod(Timer_LED_TC_PERIOD_VALUE );
  52              		.loc 1 67 0
  53 0018 084B     		ldr	r3, .L2+8
  54 001a 181C     		mov	r0, r3
  55 001c FFF7FEFF 		bl	Timer_LED_WritePeriod
  68:.\Generated_Source\PSoC4/Timer_LED.c **** 
  69:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED__COMPARE == Timer_LED_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCompare(Timer_LED_TC_COMPARE_VALUE);
  56              		.loc 1 70 0
  57 0020 0020     		mov	r0, #0
  58 0022 FFF7FEFF 		bl	Timer_LED_WriteCompare
  71:.\Generated_Source\PSoC4/Timer_LED.c **** 
  72:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (1u == Timer_LED_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_WriteCompareBuf(Timer_LED_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* (1u == Timer_LED_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (Timer_LED__COMPARE == Timer_LED_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/Timer_LED.c **** 
  78:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED_CY_TCPWM_V2 && Timer_LED_TIMER_UPDOWN_CNT_USED && !Timer_LED_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/Timer_LED.c ****         #elif(Timer_LED__COUNT_DOWN == Timer_LED_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCounter(Timer_LED_TC_PERIOD_VALUE);
  59              		.loc 1 82 0
  60 0026 054B     		ldr	r3, .L2+8
  61 0028 181C     		mov	r0, r3
  62 002a FFF7FEFF 		bl	Timer_LED_WriteCounter
  83:.\Generated_Source\PSoC4/Timer_LED.c ****         #else
  84:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif /* (Timer_LED_CY_TCPWM_V2 && Timer_LED_TIMER_UPDOWN_CNT_USED && !Timer_LED_CY_TCPWM_
  86:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif  /* (Timer_LED__TIMER == Timer_LED_CONFIG) */
  87:.\Generated_Source\PSoC4/Timer_LED.c **** 
  88:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__PWM_SEL == Timer_LED_CONFIG)
  89:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_CONTROL_REG = Timer_LED_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/Timer_LED.c **** 
  91:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED__PWM_PR == Timer_LED_PWM_MODE)
  92:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_CONTROL_REG |= Timer_LED_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCounter(Timer_LED_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/Timer_LED.c ****         #else
  95:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_CONTROL_REG |= Timer_LED_CTRL_PWM_ALIGN | Timer_LED_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/Timer_LED.c ****             
  97:.\Generated_Source\PSoC4/Timer_LED.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (Timer_LED_CY_TCPWM_V2 && Timer_LED_PWM_UPDOWN_CNT_USED && !Timer_LED_CY_TCPWM_4000
  99:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/Timer_LED.c ****             #elif (Timer_LED__RIGHT == Timer_LED_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_WriteCounter(Timer_LED_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/Timer_LED.c ****             #else 
 103:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* (Timer_LED_CY_TCPWM_V2 && Timer_LED_PWM_UPDOWN_CNT_USED && !Timer_LED_CY_TCP
 105:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (Timer_LED__PWM_PR == Timer_LED_PWM_MODE) */
 106:.\Generated_Source\PSoC4/Timer_LED.c **** 
 107:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED__PWM_DT == Timer_LED_PWM_MODE)
 108:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_CONTROL_REG |= Timer_LED_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (Timer_LED__PWM_DT == Timer_LED_PWM_MODE) */
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 4


 110:.\Generated_Source\PSoC4/Timer_LED.c **** 
 111:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED__PWM == Timer_LED_PWM_MODE)
 112:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_CONTROL_REG |= Timer_LED_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (Timer_LED__PWM == Timer_LED_PWM_MODE) */
 114:.\Generated_Source\PSoC4/Timer_LED.c **** 
 115:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_TRIG_CONTROL1_REG  = Timer_LED_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/Timer_LED.c ****     
 118:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_SetInterruptMode(Timer_LED_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/Timer_LED.c **** 
 121:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (Timer_LED__PWM_PR == Timer_LED_PWM_MODE)
 123:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/Timer_LED.c ****                     (Timer_LED_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/Timer_LED.c ****                     Timer_LED_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/Timer_LED.c ****                     Timer_LED_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/Timer_LED.c ****         #else
 128:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (Timer_LED__LEFT == Timer_LED_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_TRIG_CONTROL2_REG = Timer_LED_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* ( Timer_LED_PWM_LEFT == Timer_LED_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/Timer_LED.c **** 
 132:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (Timer_LED__RIGHT == Timer_LED_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_TRIG_CONTROL2_REG = Timer_LED_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* ( Timer_LED_PWM_RIGHT == Timer_LED_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/Timer_LED.c **** 
 136:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (Timer_LED__CENTER == Timer_LED_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_TRIG_CONTROL2_REG = Timer_LED_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* ( Timer_LED_PWM_CENTER == Timer_LED_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/Timer_LED.c **** 
 140:.\Generated_Source\PSoC4/Timer_LED.c ****             #if (Timer_LED__ASYMMETRIC == Timer_LED_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/Timer_LED.c ****                 Timer_LED_TRIG_CONTROL2_REG = Timer_LED_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/Timer_LED.c ****             #endif  /* (Timer_LED__ASYMMETRIC == Timer_LED_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (Timer_LED__PWM_PR == Timer_LED_PWM_MODE) */
 144:.\Generated_Source\PSoC4/Timer_LED.c **** 
 145:.\Generated_Source\PSoC4/Timer_LED.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_WritePeriod(Timer_LED_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_WriteCompare(Timer_LED_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/Timer_LED.c **** 
 149:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (1u == Timer_LED_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WriteCompareBuf(Timer_LED_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (1u == Timer_LED_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/Timer_LED.c **** 
 154:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (1u == Timer_LED_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_WritePeriodBuf(Timer_LED_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif  /* (1u == Timer_LED_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif  /* (Timer_LED__PWM_SEL == Timer_LED_CONFIG) */
 159:.\Generated_Source\PSoC4/Timer_LED.c ****     
 160:.\Generated_Source\PSoC4/Timer_LED.c **** }
  63              		.loc 1 160 0
  64 002e BD46     		mov	sp, r7
  65              		@ sp needed
  66 0030 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0032 C046     		.align	2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 5


  69              	.L2:
  70 0034 00012040 		.word	1075839232
  71 0038 24012040 		.word	1075839268
  72 003c 88130000 		.word	5000
  73              		.cfi_endproc
  74              	.LFE2:
  75              		.size	Timer_LED_Init, .-Timer_LED_Init
  76              		.section	.text.Timer_LED_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	Timer_LED_Enable
  79              		.code	16
  80              		.thumb_func
  81              		.type	Timer_LED_Enable, %function
  82              	Timer_LED_Enable:
  83              	.LFB3:
 161:.\Generated_Source\PSoC4/Timer_LED.c **** 
 162:.\Generated_Source\PSoC4/Timer_LED.c **** 
 163:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_Enable
 165:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/Timer_LED.c **** *
 167:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 168:.\Generated_Source\PSoC4/Timer_LED.c **** *  Enables the Timer_LED.
 169:.\Generated_Source\PSoC4/Timer_LED.c **** *
 170:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 171:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 172:.\Generated_Source\PSoC4/Timer_LED.c **** *
 173:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 174:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 175:.\Generated_Source\PSoC4/Timer_LED.c **** *
 176:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_Enable(void)
 178:.\Generated_Source\PSoC4/Timer_LED.c **** {
  84              		.loc 1 178 0
  85              		.cfi_startproc
  86 0000 90B5     		push	{r4, r7, lr}
  87              		.cfi_def_cfa_offset 12
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              		.cfi_def_cfa_offset 24
  93 0004 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/Timer_LED.c **** 
 181:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 181 0
  96 0006 FC1D     		add	r4, r7, #7
  97 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000c 031C     		mov	r3, r0
  99 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_BLOCK_CONTROL_REG |= Timer_LED_MASK;
 100              		.loc 1 182 0
 101 0010 084B     		ldr	r3, .L5
 102 0012 084A     		ldr	r2, .L5
 103 0014 1268     		ldr	r2, [r2]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 6


 104 0016 0121     		mov	r1, #1
 105 0018 0A43     		orr	r2, r1
 106 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 107              		.loc 1 183 0
 108 001c FB1D     		add	r3, r7, #7
 109 001e 1B78     		ldrb	r3, [r3]
 110 0020 181C     		mov	r0, r3
 111 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/Timer_LED.c **** 
 185:.\Generated_Source\PSoC4/Timer_LED.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__PWM_SEL == Timer_LED_CONFIG)
 187:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (0u == Timer_LED_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_TriggerCommand(Timer_LED_MASK, Timer_LED_CMD_START);
 189:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif /* (0u == Timer_LED_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED__PWM_SEL == Timer_LED_CONFIG) */
 191:.\Generated_Source\PSoC4/Timer_LED.c **** 
 192:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__TIMER == Timer_LED_CONFIG)
 193:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (0u == Timer_LED_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_TriggerCommand(Timer_LED_MASK, Timer_LED_CMD_START);
 112              		.loc 1 194 0
 113 0026 0120     		mov	r0, #1
 114 0028 1821     		mov	r1, #24
 115 002a FFF7FEFF 		bl	Timer_LED_TriggerCommand
 195:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif /* (0u == Timer_LED_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED__TIMER == Timer_LED_CONFIG) */
 197:.\Generated_Source\PSoC4/Timer_LED.c ****     
 198:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED__QUAD == Timer_LED_CONFIG)
 199:.\Generated_Source\PSoC4/Timer_LED.c ****         #if (0u != Timer_LED_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/Timer_LED.c ****             Timer_LED_TriggerCommand(Timer_LED_MASK, Timer_LED_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/Timer_LED.c ****         #endif /* (0u != Timer_LED_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif  /* (Timer_LED__QUAD == Timer_LED_CONFIG) */
 203:.\Generated_Source\PSoC4/Timer_LED.c **** }
 116              		.loc 1 203 0
 117 002e BD46     		mov	sp, r7
 118 0030 03B0     		add	sp, sp, #12
 119              		@ sp needed
 120 0032 90BD     		pop	{r4, r7, pc}
 121              	.L6:
 122              		.align	2
 123              	.L5:
 124 0034 00002040 		.word	1075838976
 125              		.cfi_endproc
 126              	.LFE3:
 127              		.size	Timer_LED_Enable, .-Timer_LED_Enable
 128              		.section	.text.Timer_LED_Start,"ax",%progbits
 129              		.align	2
 130              		.global	Timer_LED_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	Timer_LED_Start, %function
 134              	Timer_LED_Start:
 135              	.LFB4:
 204:.\Generated_Source\PSoC4/Timer_LED.c **** 
 205:.\Generated_Source\PSoC4/Timer_LED.c **** 
 206:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_Start
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 7


 208:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/Timer_LED.c **** *
 210:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 211:.\Generated_Source\PSoC4/Timer_LED.c **** *  Initializes the Timer_LED with default customizer
 212:.\Generated_Source\PSoC4/Timer_LED.c **** *  values when called the first time and enables the Timer_LED.
 213:.\Generated_Source\PSoC4/Timer_LED.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/Timer_LED.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/Timer_LED.c **** *
 216:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 217:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 218:.\Generated_Source\PSoC4/Timer_LED.c **** *
 219:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 220:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 221:.\Generated_Source\PSoC4/Timer_LED.c **** *
 222:.\Generated_Source\PSoC4/Timer_LED.c **** * Global variables:
 223:.\Generated_Source\PSoC4/Timer_LED.c **** *  Timer_LED_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/Timer_LED.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/Timer_LED.c **** *  to 1 the first time Timer_LED_Start() is called. This allows
 226:.\Generated_Source\PSoC4/Timer_LED.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/Timer_LED.c **** *  calls to the Timer_LED_Start() routine.
 228:.\Generated_Source\PSoC4/Timer_LED.c **** *
 229:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_Start(void)
 231:.\Generated_Source\PSoC4/Timer_LED.c **** {
 136              		.loc 1 231 0
 137              		.cfi_startproc
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/Timer_LED.c ****     if (0u == Timer_LED_initVar)
 144              		.loc 1 232 0
 145 0004 064B     		ldr	r3, .L9
 146 0006 1B78     		ldrb	r3, [r3]
 147 0008 002B     		cmp	r3, #0
 148 000a 04D1     		bne	.L8
 233:.\Generated_Source\PSoC4/Timer_LED.c ****     {
 234:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_Init();
 149              		.loc 1 234 0
 150 000c FFF7FEFF 		bl	Timer_LED_Init
 235:.\Generated_Source\PSoC4/Timer_LED.c ****         Timer_LED_initVar = 1u;
 151              		.loc 1 235 0
 152 0010 034B     		ldr	r3, .L9
 153 0012 0122     		mov	r2, #1
 154 0014 1A70     		strb	r2, [r3]
 155              	.L8:
 236:.\Generated_Source\PSoC4/Timer_LED.c ****     }
 237:.\Generated_Source\PSoC4/Timer_LED.c **** 
 238:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_Enable();
 156              		.loc 1 238 0
 157 0016 FFF7FEFF 		bl	Timer_LED_Enable
 239:.\Generated_Source\PSoC4/Timer_LED.c **** }
 158              		.loc 1 239 0
 159 001a BD46     		mov	sp, r7
 160              		@ sp needed
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 8


 161 001c 80BD     		pop	{r7, pc}
 162              	.L10:
 163 001e C046     		.align	2
 164              	.L9:
 165 0020 00000000 		.word	Timer_LED_initVar
 166              		.cfi_endproc
 167              	.LFE4:
 168              		.size	Timer_LED_Start, .-Timer_LED_Start
 169              		.section	.text.Timer_LED_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	Timer_LED_Stop
 172              		.code	16
 173              		.thumb_func
 174              		.type	Timer_LED_Stop, %function
 175              	Timer_LED_Stop:
 176              	.LFB5:
 240:.\Generated_Source\PSoC4/Timer_LED.c **** 
 241:.\Generated_Source\PSoC4/Timer_LED.c **** 
 242:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_Stop
 244:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/Timer_LED.c **** *
 246:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 247:.\Generated_Source\PSoC4/Timer_LED.c **** *  Disables the Timer_LED.
 248:.\Generated_Source\PSoC4/Timer_LED.c **** *
 249:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 250:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 251:.\Generated_Source\PSoC4/Timer_LED.c **** *
 252:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 253:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 254:.\Generated_Source\PSoC4/Timer_LED.c **** *
 255:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_Stop(void)
 257:.\Generated_Source\PSoC4/Timer_LED.c **** {
 177              		.loc 1 257 0
 178              		.cfi_startproc
 179 0000 90B5     		push	{r4, r7, lr}
 180              		.cfi_def_cfa_offset 12
 181              		.cfi_offset 4, -12
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 83B0     		sub	sp, sp, #12
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 258:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/Timer_LED.c **** 
 260:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 188              		.loc 1 260 0
 189 0006 FC1D     		add	r4, r7, #7
 190 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 191 000c 031C     		mov	r3, r0
 192 000e 2370     		strb	r3, [r4]
 261:.\Generated_Source\PSoC4/Timer_LED.c **** 
 262:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_BLOCK_CONTROL_REG &= (uint32)~Timer_LED_MASK;
 193              		.loc 1 262 0
 194 0010 064B     		ldr	r3, .L12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 9


 195 0012 064A     		ldr	r2, .L12
 196 0014 1268     		ldr	r2, [r2]
 197 0016 0121     		mov	r1, #1
 198 0018 8A43     		bic	r2, r1
 199 001a 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/Timer_LED.c **** 
 264:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 200              		.loc 1 264 0
 201 001c FB1D     		add	r3, r7, #7
 202 001e 1B78     		ldrb	r3, [r3]
 203 0020 181C     		mov	r0, r3
 204 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:.\Generated_Source\PSoC4/Timer_LED.c **** }
 205              		.loc 1 265 0
 206 0026 BD46     		mov	sp, r7
 207 0028 03B0     		add	sp, sp, #12
 208              		@ sp needed
 209 002a 90BD     		pop	{r4, r7, pc}
 210              	.L13:
 211              		.align	2
 212              	.L12:
 213 002c 00002040 		.word	1075838976
 214              		.cfi_endproc
 215              	.LFE5:
 216              		.size	Timer_LED_Stop, .-Timer_LED_Stop
 217              		.section	.text.Timer_LED_SetMode,"ax",%progbits
 218              		.align	2
 219              		.global	Timer_LED_SetMode
 220              		.code	16
 221              		.thumb_func
 222              		.type	Timer_LED_SetMode, %function
 223              	Timer_LED_SetMode:
 224              	.LFB6:
 266:.\Generated_Source\PSoC4/Timer_LED.c **** 
 267:.\Generated_Source\PSoC4/Timer_LED.c **** 
 268:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetMode
 270:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/Timer_LED.c **** *
 272:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 273:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the operation mode of the Timer_LED. This function is used when
 274:.\Generated_Source\PSoC4/Timer_LED.c **** *  configured as a generic Timer_LED and the actual mode of operation is
 275:.\Generated_Source\PSoC4/Timer_LED.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/Timer_LED.c **** *
 277:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 278:.\Generated_Source\PSoC4/Timer_LED.c **** *  mode: Mode for the Timer_LED to operate in
 279:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 280:.\Generated_Source\PSoC4/Timer_LED.c **** *   - Timer_LED_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/Timer_LED.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/Timer_LED.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/Timer_LED.c **** *
 289:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 10


 290:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 291:.\Generated_Source\PSoC4/Timer_LED.c **** *
 292:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/Timer_LED.c **** {
 225              		.loc 1 294 0
 226              		.cfi_startproc
 227 0000 90B5     		push	{r4, r7, lr}
 228              		.cfi_def_cfa_offset 12
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 85B0     		sub	sp, sp, #20
 233              		.cfi_def_cfa_offset 32
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 295:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/Timer_LED.c **** 
 297:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 237              		.loc 1 297 0
 238 0008 0F23     		mov	r3, #15
 239 000a FC18     		add	r4, r7, r3
 240 000c FFF7FEFF 		bl	CyEnterCriticalSection
 241 0010 031C     		mov	r3, r0
 242 0012 2370     		strb	r3, [r4]
 298:.\Generated_Source\PSoC4/Timer_LED.c **** 
 299:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_MODE_MASK;
 243              		.loc 1 299 0
 244 0014 0A4B     		ldr	r3, .L15
 245 0016 0A4A     		ldr	r2, .L15
 246 0018 1268     		ldr	r2, [r2]
 247 001a 0A49     		ldr	r1, .L15+4
 248 001c 0A40     		and	r2, r1
 249 001e 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= mode;
 250              		.loc 1 300 0
 251 0020 074B     		ldr	r3, .L15
 252 0022 074A     		ldr	r2, .L15
 253 0024 1168     		ldr	r1, [r2]
 254 0026 7A68     		ldr	r2, [r7, #4]
 255 0028 0A43     		orr	r2, r1
 256 002a 1A60     		str	r2, [r3]
 301:.\Generated_Source\PSoC4/Timer_LED.c **** 
 302:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 257              		.loc 1 302 0
 258 002c 0F23     		mov	r3, #15
 259 002e FB18     		add	r3, r7, r3
 260 0030 1B78     		ldrb	r3, [r3]
 261 0032 181C     		mov	r0, r3
 262 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:.\Generated_Source\PSoC4/Timer_LED.c **** }
 263              		.loc 1 303 0
 264 0038 BD46     		mov	sp, r7
 265 003a 05B0     		add	sp, sp, #20
 266              		@ sp needed
 267 003c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 11


 268              	.L16:
 269 003e C046     		.align	2
 270              	.L15:
 271 0040 00012040 		.word	1075839232
 272 0044 FFFFFFF8 		.word	-117440513
 273              		.cfi_endproc
 274              	.LFE6:
 275              		.size	Timer_LED_SetMode, .-Timer_LED_SetMode
 276              		.section	.text.Timer_LED_SetQDMode,"ax",%progbits
 277              		.align	2
 278              		.global	Timer_LED_SetQDMode
 279              		.code	16
 280              		.thumb_func
 281              		.type	Timer_LED_SetQDMode, %function
 282              	Timer_LED_SetQDMode:
 283              	.LFB7:
 304:.\Generated_Source\PSoC4/Timer_LED.c **** 
 305:.\Generated_Source\PSoC4/Timer_LED.c **** 
 306:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetQDMode
 308:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/Timer_LED.c **** *
 310:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 311:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/Timer_LED.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/Timer_LED.c **** *
 314:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 315:.\Generated_Source\PSoC4/Timer_LED.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 317:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/Timer_LED.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/Timer_LED.c **** *
 322:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 323:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 324:.\Generated_Source\PSoC4/Timer_LED.c **** *
 325:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/Timer_LED.c **** {
 284              		.loc 1 327 0
 285              		.cfi_startproc
 286 0000 90B5     		push	{r4, r7, lr}
 287              		.cfi_def_cfa_offset 12
 288              		.cfi_offset 4, -12
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 85B0     		sub	sp, sp, #20
 292              		.cfi_def_cfa_offset 32
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 328:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/Timer_LED.c **** 
 330:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 296              		.loc 1 330 0
 297 0008 0F23     		mov	r3, #15
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 12


 298 000a FC18     		add	r4, r7, r3
 299 000c FFF7FEFF 		bl	CyEnterCriticalSection
 300 0010 031C     		mov	r3, r0
 301 0012 2370     		strb	r3, [r4]
 331:.\Generated_Source\PSoC4/Timer_LED.c **** 
 332:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_QUAD_MODE_MASK;
 302              		.loc 1 332 0
 303 0014 0A4B     		ldr	r3, .L18
 304 0016 0A4A     		ldr	r2, .L18
 305 0018 1268     		ldr	r2, [r2]
 306 001a 0A49     		ldr	r1, .L18+4
 307 001c 0A40     		and	r2, r1
 308 001e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= qdMode;
 309              		.loc 1 333 0
 310 0020 074B     		ldr	r3, .L18
 311 0022 074A     		ldr	r2, .L18
 312 0024 1168     		ldr	r1, [r2]
 313 0026 7A68     		ldr	r2, [r7, #4]
 314 0028 0A43     		orr	r2, r1
 315 002a 1A60     		str	r2, [r3]
 334:.\Generated_Source\PSoC4/Timer_LED.c **** 
 335:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 316              		.loc 1 335 0
 317 002c 0F23     		mov	r3, #15
 318 002e FB18     		add	r3, r7, r3
 319 0030 1B78     		ldrb	r3, [r3]
 320 0032 181C     		mov	r0, r3
 321 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:.\Generated_Source\PSoC4/Timer_LED.c **** }
 322              		.loc 1 336 0
 323 0038 BD46     		mov	sp, r7
 324 003a 05B0     		add	sp, sp, #20
 325              		@ sp needed
 326 003c 90BD     		pop	{r4, r7, pc}
 327              	.L19:
 328 003e C046     		.align	2
 329              	.L18:
 330 0040 00012040 		.word	1075839232
 331 0044 FFFF8FFF 		.word	-7340033
 332              		.cfi_endproc
 333              	.LFE7:
 334              		.size	Timer_LED_SetQDMode, .-Timer_LED_SetQDMode
 335              		.section	.text.Timer_LED_SetPrescaler,"ax",%progbits
 336              		.align	2
 337              		.global	Timer_LED_SetPrescaler
 338              		.code	16
 339              		.thumb_func
 340              		.type	Timer_LED_SetPrescaler, %function
 341              	Timer_LED_SetPrescaler:
 342              	.LFB8:
 337:.\Generated_Source\PSoC4/Timer_LED.c **** 
 338:.\Generated_Source\PSoC4/Timer_LED.c **** 
 339:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPrescaler
 341:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/Timer_LED.c **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 13


 343:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 344:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/Timer_LED.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/Timer_LED.c **** *
 347:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 348:.\Generated_Source\PSoC4/Timer_LED.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 350:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/Timer_LED.c **** *
 359:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 360:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 361:.\Generated_Source\PSoC4/Timer_LED.c **** *
 362:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/Timer_LED.c **** {
 343              		.loc 1 364 0
 344              		.cfi_startproc
 345 0000 90B5     		push	{r4, r7, lr}
 346              		.cfi_def_cfa_offset 12
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 85B0     		sub	sp, sp, #20
 351              		.cfi_def_cfa_offset 32
 352 0004 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
 365:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/Timer_LED.c **** 
 367:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 355              		.loc 1 367 0
 356 0008 0F23     		mov	r3, #15
 357 000a FC18     		add	r4, r7, r3
 358 000c FFF7FEFF 		bl	CyEnterCriticalSection
 359 0010 031C     		mov	r3, r0
 360 0012 2370     		strb	r3, [r4]
 368:.\Generated_Source\PSoC4/Timer_LED.c **** 
 369:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_PRESCALER_MASK;
 361              		.loc 1 369 0
 362 0014 0A4B     		ldr	r3, .L21
 363 0016 0A4A     		ldr	r2, .L21
 364 0018 1268     		ldr	r2, [r2]
 365 001a 0A49     		ldr	r1, .L21+4
 366 001c 0A40     		and	r2, r1
 367 001e 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= prescaler;
 368              		.loc 1 370 0
 369 0020 074B     		ldr	r3, .L21
 370 0022 074A     		ldr	r2, .L21
 371 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 14


 372 0026 7A68     		ldr	r2, [r7, #4]
 373 0028 0A43     		orr	r2, r1
 374 002a 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/Timer_LED.c **** 
 372:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 375              		.loc 1 372 0
 376 002c 0F23     		mov	r3, #15
 377 002e FB18     		add	r3, r7, r3
 378 0030 1B78     		ldrb	r3, [r3]
 379 0032 181C     		mov	r0, r3
 380 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:.\Generated_Source\PSoC4/Timer_LED.c **** }
 381              		.loc 1 373 0
 382 0038 BD46     		mov	sp, r7
 383 003a 05B0     		add	sp, sp, #20
 384              		@ sp needed
 385 003c 90BD     		pop	{r4, r7, pc}
 386              	.L22:
 387 003e C046     		.align	2
 388              	.L21:
 389 0040 00012040 		.word	1075839232
 390 0044 FF00FFFF 		.word	-65281
 391              		.cfi_endproc
 392              	.LFE8:
 393              		.size	Timer_LED_SetPrescaler, .-Timer_LED_SetPrescaler
 394              		.section	.text.Timer_LED_SetOneShot,"ax",%progbits
 395              		.align	2
 396              		.global	Timer_LED_SetOneShot
 397              		.code	16
 398              		.thumb_func
 399              		.type	Timer_LED_SetOneShot, %function
 400              	Timer_LED_SetOneShot:
 401              	.LFB9:
 374:.\Generated_Source\PSoC4/Timer_LED.c **** 
 375:.\Generated_Source\PSoC4/Timer_LED.c **** 
 376:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetOneShot
 378:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/Timer_LED.c **** *
 380:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 381:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the register that controls whether the Timer_LED runs
 382:.\Generated_Source\PSoC4/Timer_LED.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/Timer_LED.c **** *  Timer_LED operates in the continuous mode.
 384:.\Generated_Source\PSoC4/Timer_LED.c **** *
 385:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 386:.\Generated_Source\PSoC4/Timer_LED.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 388:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/Timer_LED.c **** *
 391:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 392:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 393:.\Generated_Source\PSoC4/Timer_LED.c **** *
 394:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/Timer_LED.c **** {
 402              		.loc 1 396 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 15


 403              		.cfi_startproc
 404 0000 90B5     		push	{r4, r7, lr}
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 85B0     		sub	sp, sp, #20
 410              		.cfi_def_cfa_offset 32
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
 397:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/Timer_LED.c **** 
 399:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 399 0
 415 0008 0F23     		mov	r3, #15
 416 000a FC18     		add	r4, r7, r3
 417 000c FFF7FEFF 		bl	CyEnterCriticalSection
 418 0010 031C     		mov	r3, r0
 419 0012 2370     		strb	r3, [r4]
 400:.\Generated_Source\PSoC4/Timer_LED.c **** 
 401:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_ONESHOT_MASK;
 420              		.loc 1 401 0
 421 0014 0B4B     		ldr	r3, .L24
 422 0016 0B4A     		ldr	r2, .L24
 423 0018 1268     		ldr	r2, [r2]
 424 001a 0B49     		ldr	r1, .L24+4
 425 001c 0A40     		and	r2, r1
 426 001e 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_LED_1BIT_MASK) <<
 427              		.loc 1 402 0
 428 0020 084B     		ldr	r3, .L24
 429 0022 084A     		ldr	r2, .L24
 430 0024 1168     		ldr	r1, [r2]
 431 0026 7A68     		ldr	r2, [r7, #4]
 432 0028 0120     		mov	r0, #1
 433 002a 0240     		and	r2, r0
 434 002c 9204     		lsl	r2, r2, #18
 435 002e 0A43     		orr	r2, r1
 436 0030 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC4/Timer_LED.c ****                                                                Timer_LED_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/Timer_LED.c **** 
 405:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 437              		.loc 1 405 0
 438 0032 0F23     		mov	r3, #15
 439 0034 FB18     		add	r3, r7, r3
 440 0036 1B78     		ldrb	r3, [r3]
 441 0038 181C     		mov	r0, r3
 442 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:.\Generated_Source\PSoC4/Timer_LED.c **** }
 443              		.loc 1 406 0
 444 003e BD46     		mov	sp, r7
 445 0040 05B0     		add	sp, sp, #20
 446              		@ sp needed
 447 0042 90BD     		pop	{r4, r7, pc}
 448              	.L25:
 449              		.align	2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 16


 450              	.L24:
 451 0044 00012040 		.word	1075839232
 452 0048 FFFFFBFF 		.word	-262145
 453              		.cfi_endproc
 454              	.LFE9:
 455              		.size	Timer_LED_SetOneShot, .-Timer_LED_SetOneShot
 456              		.section	.text.Timer_LED_SetPWMMode,"ax",%progbits
 457              		.align	2
 458              		.global	Timer_LED_SetPWMMode
 459              		.code	16
 460              		.thumb_func
 461              		.type	Timer_LED_SetPWMMode, %function
 462              	Timer_LED_SetPWMMode:
 463              	.LFB10:
 407:.\Generated_Source\PSoC4/Timer_LED.c **** 
 408:.\Generated_Source\PSoC4/Timer_LED.c **** 
 409:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPWMMode
 411:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/Timer_LED.c **** *
 413:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 414:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/Timer_LED.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/Timer_LED.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/Timer_LED.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/Timer_LED.c **** *  the mode.
 419:.\Generated_Source\PSoC4/Timer_LED.c **** *
 420:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 421:.\Generated_Source\PSoC4/Timer_LED.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/Timer_LED.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 424:.\Generated_Source\PSoC4/Timer_LED.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/Timer_LED.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/Timer_LED.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/Timer_LED.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/Timer_LED.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/Timer_LED.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/Timer_LED.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/Timer_LED.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/Timer_LED.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/Timer_LED.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/Timer_LED.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/Timer_LED.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/Timer_LED.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/Timer_LED.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/Timer_LED.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/Timer_LED.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/Timer_LED.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/Timer_LED.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/Timer_LED.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/Timer_LED.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/Timer_LED.c **** *
 445:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 446:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 447:.\Generated_Source\PSoC4/Timer_LED.c **** *
 448:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPWMMode(uint32 modeMask)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 17


 450:.\Generated_Source\PSoC4/Timer_LED.c **** {
 464              		.loc 1 450 0
 465              		.cfi_startproc
 466 0000 80B5     		push	{r7, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 82B0     		sub	sp, sp, #8
 471              		.cfi_def_cfa_offset 16
 472 0004 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 474 0006 7860     		str	r0, [r7, #4]
 451:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL2_REG = (modeMask & Timer_LED_6BIT_MASK);
 475              		.loc 1 451 0
 476 0008 034B     		ldr	r3, .L27
 477 000a 7A68     		ldr	r2, [r7, #4]
 478 000c 3F21     		mov	r1, #63
 479 000e 0A40     		and	r2, r1
 480 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/Timer_LED.c **** }
 481              		.loc 1 452 0
 482 0012 BD46     		mov	sp, r7
 483 0014 02B0     		add	sp, sp, #8
 484              		@ sp needed
 485 0016 80BD     		pop	{r7, pc}
 486              	.L28:
 487              		.align	2
 488              	.L27:
 489 0018 28012040 		.word	1075839272
 490              		.cfi_endproc
 491              	.LFE10:
 492              		.size	Timer_LED_SetPWMMode, .-Timer_LED_SetPWMMode
 493              		.section	.text.Timer_LED_SetPWMSyncKill,"ax",%progbits
 494              		.align	2
 495              		.global	Timer_LED_SetPWMSyncKill
 496              		.code	16
 497              		.thumb_func
 498              		.type	Timer_LED_SetPWMSyncKill, %function
 499              	Timer_LED_SetPWMSyncKill:
 500              	.LFB11:
 453:.\Generated_Source\PSoC4/Timer_LED.c **** 
 454:.\Generated_Source\PSoC4/Timer_LED.c **** 
 455:.\Generated_Source\PSoC4/Timer_LED.c **** 
 456:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/Timer_LED.c **** *
 460:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 461:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/Timer_LED.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/Timer_LED.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/Timer_LED.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/Timer_LED.c **** *
 466:.\Generated_Source\PSoC4/Timer_LED.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/Timer_LED.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/Timer_LED.c **** *
 469:.\Generated_Source\PSoC4/Timer_LED.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 18


 470:.\Generated_Source\PSoC4/Timer_LED.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/Timer_LED.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/Timer_LED.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/Timer_LED.c **** 
 474:.\Generated_Source\PSoC4/Timer_LED.c **** *
 475:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 476:.\Generated_Source\PSoC4/Timer_LED.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 478:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/Timer_LED.c **** *
 481:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 482:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 483:.\Generated_Source\PSoC4/Timer_LED.c **** *
 484:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/Timer_LED.c **** {
 501              		.loc 1 486 0
 502              		.cfi_startproc
 503 0000 90B5     		push	{r4, r7, lr}
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 85B0     		sub	sp, sp, #20
 509              		.cfi_def_cfa_offset 32
 510 0004 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 487:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/Timer_LED.c **** 
 489:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 513              		.loc 1 489 0
 514 0008 0F23     		mov	r3, #15
 515 000a FC18     		add	r4, r7, r3
 516 000c FFF7FEFF 		bl	CyEnterCriticalSection
 517 0010 031C     		mov	r3, r0
 518 0012 2370     		strb	r3, [r4]
 490:.\Generated_Source\PSoC4/Timer_LED.c **** 
 491:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_PWM_SYNC_KILL_MASK;
 519              		.loc 1 491 0
 520 0014 0B4B     		ldr	r3, .L30
 521 0016 0B4A     		ldr	r2, .L30
 522 0018 1268     		ldr	r2, [r2]
 523 001a 0421     		mov	r1, #4
 524 001c 8A43     		bic	r2, r1
 525 001e 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_LED_1BIT_MASK)  <<
 526              		.loc 1 492 0
 527 0020 084B     		ldr	r3, .L30
 528 0022 084A     		ldr	r2, .L30
 529 0024 1168     		ldr	r1, [r2]
 530 0026 7A68     		ldr	r2, [r7, #4]
 531 0028 0120     		mov	r0, #1
 532 002a 0240     		and	r2, r0
 533 002c 9200     		lsl	r2, r2, #2
 534 002e 0A43     		orr	r2, r1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 19


 535 0030 1A60     		str	r2, [r3]
 493:.\Generated_Source\PSoC4/Timer_LED.c ****                                                Timer_LED_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/Timer_LED.c **** 
 495:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 536              		.loc 1 495 0
 537 0032 0F23     		mov	r3, #15
 538 0034 FB18     		add	r3, r7, r3
 539 0036 1B78     		ldrb	r3, [r3]
 540 0038 181C     		mov	r0, r3
 541 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:.\Generated_Source\PSoC4/Timer_LED.c **** }
 542              		.loc 1 496 0
 543 003e BD46     		mov	sp, r7
 544 0040 05B0     		add	sp, sp, #20
 545              		@ sp needed
 546 0042 90BD     		pop	{r4, r7, pc}
 547              	.L31:
 548              		.align	2
 549              	.L30:
 550 0044 00012040 		.word	1075839232
 551              		.cfi_endproc
 552              	.LFE11:
 553              		.size	Timer_LED_SetPWMSyncKill, .-Timer_LED_SetPWMSyncKill
 554              		.section	.text.Timer_LED_SetPWMStopOnKill,"ax",%progbits
 555              		.align	2
 556              		.global	Timer_LED_SetPWMStopOnKill
 557              		.code	16
 558              		.thumb_func
 559              		.type	Timer_LED_SetPWMStopOnKill, %function
 560              	Timer_LED_SetPWMStopOnKill:
 561              	.LFB12:
 497:.\Generated_Source\PSoC4/Timer_LED.c **** 
 498:.\Generated_Source\PSoC4/Timer_LED.c **** 
 499:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/Timer_LED.c **** *
 503:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 504:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/Timer_LED.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/Timer_LED.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/Timer_LED.c **** *
 508:.\Generated_Source\PSoC4/Timer_LED.c **** *
 509:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 510:.\Generated_Source\PSoC4/Timer_LED.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 512:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/Timer_LED.c **** *
 515:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 516:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 517:.\Generated_Source\PSoC4/Timer_LED.c **** *
 518:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/Timer_LED.c **** {
 562              		.loc 1 520 0
 563              		.cfi_startproc
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 20


 564 0000 90B5     		push	{r4, r7, lr}
 565              		.cfi_def_cfa_offset 12
 566              		.cfi_offset 4, -12
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 32
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 521:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/Timer_LED.c **** 
 523:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 574              		.loc 1 523 0
 575 0008 0F23     		mov	r3, #15
 576 000a FC18     		add	r4, r7, r3
 577 000c FFF7FEFF 		bl	CyEnterCriticalSection
 578 0010 031C     		mov	r3, r0
 579 0012 2370     		strb	r3, [r4]
 524:.\Generated_Source\PSoC4/Timer_LED.c **** 
 525:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_PWM_STOP_KILL_MASK;
 580              		.loc 1 525 0
 581 0014 0B4B     		ldr	r3, .L33
 582 0016 0B4A     		ldr	r2, .L33
 583 0018 1268     		ldr	r2, [r2]
 584 001a 0821     		mov	r1, #8
 585 001c 8A43     		bic	r2, r1
 586 001e 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_LED_1BIT_MASK)  <<
 587              		.loc 1 526 0
 588 0020 084B     		ldr	r3, .L33
 589 0022 084A     		ldr	r2, .L33
 590 0024 1168     		ldr	r1, [r2]
 591 0026 7A68     		ldr	r2, [r7, #4]
 592 0028 0120     		mov	r0, #1
 593 002a 0240     		and	r2, r0
 594 002c D200     		lsl	r2, r2, #3
 595 002e 0A43     		orr	r2, r1
 596 0030 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/Timer_LED.c ****                                                          Timer_LED_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/Timer_LED.c **** 
 529:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 597              		.loc 1 529 0
 598 0032 0F23     		mov	r3, #15
 599 0034 FB18     		add	r3, r7, r3
 600 0036 1B78     		ldrb	r3, [r3]
 601 0038 181C     		mov	r0, r3
 602 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/Timer_LED.c **** }
 603              		.loc 1 530 0
 604 003e BD46     		mov	sp, r7
 605 0040 05B0     		add	sp, sp, #20
 606              		@ sp needed
 607 0042 90BD     		pop	{r4, r7, pc}
 608              	.L34:
 609              		.align	2
 610              	.L33:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 21


 611 0044 00012040 		.word	1075839232
 612              		.cfi_endproc
 613              	.LFE12:
 614              		.size	Timer_LED_SetPWMStopOnKill, .-Timer_LED_SetPWMStopOnKill
 615              		.section	.text.Timer_LED_SetPWMDeadTime,"ax",%progbits
 616              		.align	2
 617              		.global	Timer_LED_SetPWMDeadTime
 618              		.code	16
 619              		.thumb_func
 620              		.type	Timer_LED_SetPWMDeadTime, %function
 621              	Timer_LED_SetPWMDeadTime:
 622              	.LFB13:
 531:.\Generated_Source\PSoC4/Timer_LED.c **** 
 532:.\Generated_Source\PSoC4/Timer_LED.c **** 
 533:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/Timer_LED.c **** *
 537:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 538:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/Timer_LED.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/Timer_LED.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/Timer_LED.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/Timer_LED.c **** 
 543:.\Generated_Source\PSoC4/Timer_LED.c **** *
 544:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 545:.\Generated_Source\PSoC4/Timer_LED.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/Timer_LED.c **** *
 548:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 549:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 550:.\Generated_Source\PSoC4/Timer_LED.c **** *
 551:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/Timer_LED.c **** {
 623              		.loc 1 553 0
 624              		.cfi_startproc
 625 0000 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 12
 627              		.cfi_offset 4, -12
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 85B0     		sub	sp, sp, #20
 631              		.cfi_def_cfa_offset 32
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 554:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/Timer_LED.c **** 
 556:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 635              		.loc 1 556 0
 636 0008 0F23     		mov	r3, #15
 637 000a FC18     		add	r4, r7, r3
 638 000c FFF7FEFF 		bl	CyEnterCriticalSection
 639 0010 031C     		mov	r3, r0
 640 0012 2370     		strb	r3, [r4]
 557:.\Generated_Source\PSoC4/Timer_LED.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 22


 558:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_PRESCALER_MASK;
 641              		.loc 1 558 0
 642 0014 0B4B     		ldr	r3, .L36
 643 0016 0B4A     		ldr	r2, .L36
 644 0018 1268     		ldr	r2, [r2]
 645 001a 0B49     		ldr	r1, .L36+4
 646 001c 0A40     		and	r2, r1
 647 001e 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= ((uint32)((deadTime & Timer_LED_8BIT_MASK) <<
 648              		.loc 1 559 0
 649 0020 084B     		ldr	r3, .L36
 650 0022 084A     		ldr	r2, .L36
 651 0024 1168     		ldr	r1, [r2]
 652 0026 7A68     		ldr	r2, [r7, #4]
 653 0028 1202     		lsl	r2, r2, #8
 654 002a 1204     		lsl	r2, r2, #16
 655 002c 120C     		lsr	r2, r2, #16
 656 002e 0A43     		orr	r2, r1
 657 0030 1A60     		str	r2, [r3]
 560:.\Generated_Source\PSoC4/Timer_LED.c ****                                                           Timer_LED_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/Timer_LED.c **** 
 562:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 658              		.loc 1 562 0
 659 0032 0F23     		mov	r3, #15
 660 0034 FB18     		add	r3, r7, r3
 661 0036 1B78     		ldrb	r3, [r3]
 662 0038 181C     		mov	r0, r3
 663 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:.\Generated_Source\PSoC4/Timer_LED.c **** }
 664              		.loc 1 563 0
 665 003e BD46     		mov	sp, r7
 666 0040 05B0     		add	sp, sp, #20
 667              		@ sp needed
 668 0042 90BD     		pop	{r4, r7, pc}
 669              	.L37:
 670              		.align	2
 671              	.L36:
 672 0044 00012040 		.word	1075839232
 673 0048 FF00FFFF 		.word	-65281
 674              		.cfi_endproc
 675              	.LFE13:
 676              		.size	Timer_LED_SetPWMDeadTime, .-Timer_LED_SetPWMDeadTime
 677              		.section	.text.Timer_LED_SetPWMInvert,"ax",%progbits
 678              		.align	2
 679              		.global	Timer_LED_SetPWMInvert
 680              		.code	16
 681              		.thumb_func
 682              		.type	Timer_LED_SetPWMInvert, %function
 683              	Timer_LED_SetPWMInvert:
 684              	.LFB14:
 564:.\Generated_Source\PSoC4/Timer_LED.c **** 
 565:.\Generated_Source\PSoC4/Timer_LED.c **** 
 566:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPWMInvert
 568:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/Timer_LED.c **** *
 570:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 23


 571:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/Timer_LED.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/Timer_LED.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/Timer_LED.c **** *
 575:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 576:.\Generated_Source\PSoC4/Timer_LED.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 578:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/Timer_LED.c **** *         - Timer_LED_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/Timer_LED.c **** *
 581:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 582:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 583:.\Generated_Source\PSoC4/Timer_LED.c **** *
 584:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/Timer_LED.c **** {
 685              		.loc 1 586 0
 686              		.cfi_startproc
 687 0000 90B5     		push	{r4, r7, lr}
 688              		.cfi_def_cfa_offset 12
 689              		.cfi_offset 4, -12
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 85B0     		sub	sp, sp, #20
 693              		.cfi_def_cfa_offset 32
 694 0004 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/Timer_LED.c **** 
 589:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 697              		.loc 1 589 0
 698 0008 0F23     		mov	r3, #15
 699 000a FC18     		add	r4, r7, r3
 700 000c FFF7FEFF 		bl	CyEnterCriticalSection
 701 0010 031C     		mov	r3, r0
 702 0012 2370     		strb	r3, [r4]
 590:.\Generated_Source\PSoC4/Timer_LED.c **** 
 591:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_INV_OUT_MASK;
 703              		.loc 1 591 0
 704 0014 0A4B     		ldr	r3, .L39
 705 0016 0A4A     		ldr	r2, .L39
 706 0018 1268     		ldr	r2, [r2]
 707 001a 0A49     		ldr	r1, .L39+4
 708 001c 0A40     		and	r2, r1
 709 001e 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= mask;
 710              		.loc 1 592 0
 711 0020 074B     		ldr	r3, .L39
 712 0022 074A     		ldr	r2, .L39
 713 0024 1168     		ldr	r1, [r2]
 714 0026 7A68     		ldr	r2, [r7, #4]
 715 0028 0A43     		orr	r2, r1
 716 002a 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/Timer_LED.c **** 
 594:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 717              		.loc 1 594 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 24


 718 002c 0F23     		mov	r3, #15
 719 002e FB18     		add	r3, r7, r3
 720 0030 1B78     		ldrb	r3, [r3]
 721 0032 181C     		mov	r0, r3
 722 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:.\Generated_Source\PSoC4/Timer_LED.c **** }
 723              		.loc 1 595 0
 724 0038 BD46     		mov	sp, r7
 725 003a 05B0     		add	sp, sp, #20
 726              		@ sp needed
 727 003c 90BD     		pop	{r4, r7, pc}
 728              	.L40:
 729 003e C046     		.align	2
 730              	.L39:
 731 0040 00012040 		.word	1075839232
 732 0044 FFFFCFFF 		.word	-3145729
 733              		.cfi_endproc
 734              	.LFE14:
 735              		.size	Timer_LED_SetPWMInvert, .-Timer_LED_SetPWMInvert
 736              		.section	.text.Timer_LED_WriteCounter,"ax",%progbits
 737              		.align	2
 738              		.global	Timer_LED_WriteCounter
 739              		.code	16
 740              		.thumb_func
 741              		.type	Timer_LED_WriteCounter, %function
 742              	Timer_LED_WriteCounter:
 743              	.LFB15:
 596:.\Generated_Source\PSoC4/Timer_LED.c **** 
 597:.\Generated_Source\PSoC4/Timer_LED.c **** 
 598:.\Generated_Source\PSoC4/Timer_LED.c **** 
 599:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_WriteCounter
 601:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/Timer_LED.c **** *
 603:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 604:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/Timer_LED.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/Timer_LED.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/Timer_LED.c **** *
 608:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 609:.\Generated_Source\PSoC4/Timer_LED.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/Timer_LED.c **** *
 611:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 612:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 613:.\Generated_Source\PSoC4/Timer_LED.c **** *
 614:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/Timer_LED.c **** {
 744              		.loc 1 616 0
 745              		.cfi_startproc
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 82B0     		sub	sp, sp, #8
 751              		.cfi_def_cfa_offset 16
 752 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 25


 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_COUNTER_REG = (count & Timer_LED_16BIT_MASK);
 755              		.loc 1 617 0
 756 0008 034B     		ldr	r3, .L42
 757 000a 7A68     		ldr	r2, [r7, #4]
 758 000c 1204     		lsl	r2, r2, #16
 759 000e 120C     		lsr	r2, r2, #16
 760 0010 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/Timer_LED.c **** }
 761              		.loc 1 618 0
 762 0012 BD46     		mov	sp, r7
 763 0014 02B0     		add	sp, sp, #8
 764              		@ sp needed
 765 0016 80BD     		pop	{r7, pc}
 766              	.L43:
 767              		.align	2
 768              	.L42:
 769 0018 08012040 		.word	1075839240
 770              		.cfi_endproc
 771              	.LFE15:
 772              		.size	Timer_LED_WriteCounter, .-Timer_LED_WriteCounter
 773              		.section	.text.Timer_LED_ReadCounter,"ax",%progbits
 774              		.align	2
 775              		.global	Timer_LED_ReadCounter
 776              		.code	16
 777              		.thumb_func
 778              		.type	Timer_LED_ReadCounter, %function
 779              	Timer_LED_ReadCounter:
 780              	.LFB16:
 619:.\Generated_Source\PSoC4/Timer_LED.c **** 
 620:.\Generated_Source\PSoC4/Timer_LED.c **** 
 621:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadCounter
 623:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/Timer_LED.c **** *
 625:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 626:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/Timer_LED.c **** *
 628:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 629:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 630:.\Generated_Source\PSoC4/Timer_LED.c **** *
 631:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 632:.\Generated_Source\PSoC4/Timer_LED.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/Timer_LED.c **** *
 634:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadCounter(void)
 636:.\Generated_Source\PSoC4/Timer_LED.c **** {
 781              		.loc 1 636 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_COUNTER_REG & Timer_LED_16BIT_MASK);
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 26


 789              		.loc 1 637 0
 790 0004 034B     		ldr	r3, .L46
 791 0006 1B68     		ldr	r3, [r3]
 792 0008 1B04     		lsl	r3, r3, #16
 793 000a 1B0C     		lsr	r3, r3, #16
 638:.\Generated_Source\PSoC4/Timer_LED.c **** }
 794              		.loc 1 638 0
 795 000c 181C     		mov	r0, r3
 796 000e BD46     		mov	sp, r7
 797              		@ sp needed
 798 0010 80BD     		pop	{r7, pc}
 799              	.L47:
 800 0012 C046     		.align	2
 801              	.L46:
 802 0014 08012040 		.word	1075839240
 803              		.cfi_endproc
 804              	.LFE16:
 805              		.size	Timer_LED_ReadCounter, .-Timer_LED_ReadCounter
 806              		.section	.text.Timer_LED_SetCounterMode,"ax",%progbits
 807              		.align	2
 808              		.global	Timer_LED_SetCounterMode
 809              		.code	16
 810              		.thumb_func
 811              		.type	Timer_LED_SetCounterMode, %function
 812              	Timer_LED_SetCounterMode:
 813              	.LFB17:
 639:.\Generated_Source\PSoC4/Timer_LED.c **** 
 640:.\Generated_Source\PSoC4/Timer_LED.c **** 
 641:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetCounterMode
 643:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/Timer_LED.c **** *
 645:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 646:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/Timer_LED.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/Timer_LED.c **** *
 649:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 650:.\Generated_Source\PSoC4/Timer_LED.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 652:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/Timer_LED.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/Timer_LED.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/Timer_LED.c **** *                                         and period
 659:.\Generated_Source\PSoC4/Timer_LED.c **** *
 660:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 661:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 662:.\Generated_Source\PSoC4/Timer_LED.c **** *
 663:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/Timer_LED.c **** {
 814              		.loc 1 665 0
 815              		.cfi_startproc
 816 0000 90B5     		push	{r4, r7, lr}
 817              		.cfi_def_cfa_offset 12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 27


 818              		.cfi_offset 4, -12
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 85B0     		sub	sp, sp, #20
 822              		.cfi_def_cfa_offset 32
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 666:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/Timer_LED.c **** 
 668:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 826              		.loc 1 668 0
 827 0008 0F23     		mov	r3, #15
 828 000a FC18     		add	r4, r7, r3
 829 000c FFF7FEFF 		bl	CyEnterCriticalSection
 830 0010 031C     		mov	r3, r0
 831 0012 2370     		strb	r3, [r4]
 669:.\Generated_Source\PSoC4/Timer_LED.c **** 
 670:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_UPDOWN_MASK;
 832              		.loc 1 670 0
 833 0014 0A4B     		ldr	r3, .L49
 834 0016 0A4A     		ldr	r2, .L49
 835 0018 1268     		ldr	r2, [r2]
 836 001a 0A49     		ldr	r1, .L49+4
 837 001c 0A40     		and	r2, r1
 838 001e 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= counterMode;
 839              		.loc 1 671 0
 840 0020 074B     		ldr	r3, .L49
 841 0022 074A     		ldr	r2, .L49
 842 0024 1168     		ldr	r1, [r2]
 843 0026 7A68     		ldr	r2, [r7, #4]
 844 0028 0A43     		orr	r2, r1
 845 002a 1A60     		str	r2, [r3]
 672:.\Generated_Source\PSoC4/Timer_LED.c **** 
 673:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 846              		.loc 1 673 0
 847 002c 0F23     		mov	r3, #15
 848 002e FB18     		add	r3, r7, r3
 849 0030 1B78     		ldrb	r3, [r3]
 850 0032 181C     		mov	r0, r3
 851 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:.\Generated_Source\PSoC4/Timer_LED.c **** }
 852              		.loc 1 674 0
 853 0038 BD46     		mov	sp, r7
 854 003a 05B0     		add	sp, sp, #20
 855              		@ sp needed
 856 003c 90BD     		pop	{r4, r7, pc}
 857              	.L50:
 858 003e C046     		.align	2
 859              	.L49:
 860 0040 00012040 		.word	1075839232
 861 0044 FFFFFCFF 		.word	-196609
 862              		.cfi_endproc
 863              	.LFE17:
 864              		.size	Timer_LED_SetCounterMode, .-Timer_LED_SetCounterMode
 865              		.section	.text.Timer_LED_WritePeriod,"ax",%progbits
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 28


 866              		.align	2
 867              		.global	Timer_LED_WritePeriod
 868              		.code	16
 869              		.thumb_func
 870              		.type	Timer_LED_WritePeriod, %function
 871              	Timer_LED_WritePeriod:
 872              	.LFB18:
 675:.\Generated_Source\PSoC4/Timer_LED.c **** 
 676:.\Generated_Source\PSoC4/Timer_LED.c **** 
 677:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_WritePeriod
 679:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/Timer_LED.c **** *
 681:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 682:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/Timer_LED.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/Timer_LED.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/Timer_LED.c **** *
 686:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 687:.\Generated_Source\PSoC4/Timer_LED.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/Timer_LED.c **** *
 689:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 690:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 691:.\Generated_Source\PSoC4/Timer_LED.c **** *
 692:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/Timer_LED.c **** {
 873              		.loc 1 694 0
 874              		.cfi_startproc
 875 0000 80B5     		push	{r7, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 7, -8
 878              		.cfi_offset 14, -4
 879 0002 82B0     		sub	sp, sp, #8
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
 883 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_PERIOD_REG = (period & Timer_LED_16BIT_MASK);
 884              		.loc 1 695 0
 885 0008 034B     		ldr	r3, .L52
 886 000a 7A68     		ldr	r2, [r7, #4]
 887 000c 1204     		lsl	r2, r2, #16
 888 000e 120C     		lsr	r2, r2, #16
 889 0010 1A60     		str	r2, [r3]
 696:.\Generated_Source\PSoC4/Timer_LED.c **** }
 890              		.loc 1 696 0
 891 0012 BD46     		mov	sp, r7
 892 0014 02B0     		add	sp, sp, #8
 893              		@ sp needed
 894 0016 80BD     		pop	{r7, pc}
 895              	.L53:
 896              		.align	2
 897              	.L52:
 898 0018 14012040 		.word	1075839252
 899              		.cfi_endproc
 900              	.LFE18:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 29


 901              		.size	Timer_LED_WritePeriod, .-Timer_LED_WritePeriod
 902              		.section	.text.Timer_LED_ReadPeriod,"ax",%progbits
 903              		.align	2
 904              		.global	Timer_LED_ReadPeriod
 905              		.code	16
 906              		.thumb_func
 907              		.type	Timer_LED_ReadPeriod, %function
 908              	Timer_LED_ReadPeriod:
 909              	.LFB19:
 697:.\Generated_Source\PSoC4/Timer_LED.c **** 
 698:.\Generated_Source\PSoC4/Timer_LED.c **** 
 699:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadPeriod
 701:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/Timer_LED.c **** *
 703:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 704:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/Timer_LED.c **** *
 706:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 707:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 708:.\Generated_Source\PSoC4/Timer_LED.c **** *
 709:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 710:.\Generated_Source\PSoC4/Timer_LED.c **** *  Period value
 711:.\Generated_Source\PSoC4/Timer_LED.c **** *
 712:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/Timer_LED.c **** {
 910              		.loc 1 714 0
 911              		.cfi_startproc
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_PERIOD_REG & Timer_LED_16BIT_MASK);
 918              		.loc 1 715 0
 919 0004 034B     		ldr	r3, .L56
 920 0006 1B68     		ldr	r3, [r3]
 921 0008 1B04     		lsl	r3, r3, #16
 922 000a 1B0C     		lsr	r3, r3, #16
 716:.\Generated_Source\PSoC4/Timer_LED.c **** }
 923              		.loc 1 716 0
 924 000c 181C     		mov	r0, r3
 925 000e BD46     		mov	sp, r7
 926              		@ sp needed
 927 0010 80BD     		pop	{r7, pc}
 928              	.L57:
 929 0012 C046     		.align	2
 930              	.L56:
 931 0014 14012040 		.word	1075839252
 932              		.cfi_endproc
 933              	.LFE19:
 934              		.size	Timer_LED_ReadPeriod, .-Timer_LED_ReadPeriod
 935              		.section	.text.Timer_LED_SetCompareSwap,"ax",%progbits
 936              		.align	2
 937              		.global	Timer_LED_SetCompareSwap
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 30


 938              		.code	16
 939              		.thumb_func
 940              		.type	Timer_LED_SetCompareSwap, %function
 941              	Timer_LED_SetCompareSwap:
 942              	.LFB20:
 717:.\Generated_Source\PSoC4/Timer_LED.c **** 
 718:.\Generated_Source\PSoC4/Timer_LED.c **** 
 719:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetCompareSwap
 721:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/Timer_LED.c **** *
 723:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 724:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/Timer_LED.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/Timer_LED.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/Timer_LED.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/Timer_LED.c **** *
 729:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 730:.\Generated_Source\PSoC4/Timer_LED.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 732:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/Timer_LED.c **** *
 735:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 736:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 737:.\Generated_Source\PSoC4/Timer_LED.c **** *
 738:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/Timer_LED.c **** {
 943              		.loc 1 740 0
 944              		.cfi_startproc
 945 0000 90B5     		push	{r4, r7, lr}
 946              		.cfi_def_cfa_offset 12
 947              		.cfi_offset 4, -12
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 85B0     		sub	sp, sp, #20
 951              		.cfi_def_cfa_offset 32
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 954 0006 7860     		str	r0, [r7, #4]
 741:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/Timer_LED.c **** 
 743:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 955              		.loc 1 743 0
 956 0008 0F23     		mov	r3, #15
 957 000a FC18     		add	r4, r7, r3
 958 000c FFF7FEFF 		bl	CyEnterCriticalSection
 959 0010 031C     		mov	r3, r0
 960 0012 2370     		strb	r3, [r4]
 744:.\Generated_Source\PSoC4/Timer_LED.c **** 
 745:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_RELOAD_CC_MASK;
 961              		.loc 1 745 0
 962 0014 0B4B     		ldr	r3, .L59
 963 0016 0B4A     		ldr	r2, .L59
 964 0018 1268     		ldr	r2, [r2]
 965 001a 0121     		mov	r1, #1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 31


 966 001c 8A43     		bic	r2, r1
 967 001e 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= (swapEnable & Timer_LED_1BIT_MASK);
 968              		.loc 1 746 0
 969 0020 084B     		ldr	r3, .L59
 970 0022 084A     		ldr	r2, .L59
 971 0024 1168     		ldr	r1, [r2]
 972 0026 7A68     		ldr	r2, [r7, #4]
 973 0028 0120     		mov	r0, #1
 974 002a 0240     		and	r2, r0
 975 002c 0A43     		orr	r2, r1
 976 002e 1A60     		str	r2, [r3]
 747:.\Generated_Source\PSoC4/Timer_LED.c **** 
 748:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 977              		.loc 1 748 0
 978 0030 0F23     		mov	r3, #15
 979 0032 FB18     		add	r3, r7, r3
 980 0034 1B78     		ldrb	r3, [r3]
 981 0036 181C     		mov	r0, r3
 982 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:.\Generated_Source\PSoC4/Timer_LED.c **** }
 983              		.loc 1 749 0
 984 003c BD46     		mov	sp, r7
 985 003e 05B0     		add	sp, sp, #20
 986              		@ sp needed
 987 0040 90BD     		pop	{r4, r7, pc}
 988              	.L60:
 989 0042 C046     		.align	2
 990              	.L59:
 991 0044 00012040 		.word	1075839232
 992              		.cfi_endproc
 993              	.LFE20:
 994              		.size	Timer_LED_SetCompareSwap, .-Timer_LED_SetCompareSwap
 995              		.section	.text.Timer_LED_WritePeriodBuf,"ax",%progbits
 996              		.align	2
 997              		.global	Timer_LED_WritePeriodBuf
 998              		.code	16
 999              		.thumb_func
 1000              		.type	Timer_LED_WritePeriodBuf, %function
 1001              	Timer_LED_WritePeriodBuf:
 1002              	.LFB21:
 750:.\Generated_Source\PSoC4/Timer_LED.c **** 
 751:.\Generated_Source\PSoC4/Timer_LED.c **** 
 752:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_WritePeriodBuf
 754:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/Timer_LED.c **** *
 756:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 757:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/Timer_LED.c **** *
 759:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 760:.\Generated_Source\PSoC4/Timer_LED.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/Timer_LED.c **** *
 762:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 763:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 764:.\Generated_Source\PSoC4/Timer_LED.c **** *
 765:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 32


 766:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1003              		.loc 1 767 0
 1004              		.cfi_startproc
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 1013 0006 7860     		str	r0, [r7, #4]
 768:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_PERIOD_BUF_REG = (periodBuf & Timer_LED_16BIT_MASK);
 1014              		.loc 1 768 0
 1015 0008 034B     		ldr	r3, .L62
 1016 000a 7A68     		ldr	r2, [r7, #4]
 1017 000c 1204     		lsl	r2, r2, #16
 1018 000e 120C     		lsr	r2, r2, #16
 1019 0010 1A60     		str	r2, [r3]
 769:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1020              		.loc 1 769 0
 1021 0012 BD46     		mov	sp, r7
 1022 0014 02B0     		add	sp, sp, #8
 1023              		@ sp needed
 1024 0016 80BD     		pop	{r7, pc}
 1025              	.L63:
 1026              		.align	2
 1027              	.L62:
 1028 0018 18012040 		.word	1075839256
 1029              		.cfi_endproc
 1030              	.LFE21:
 1031              		.size	Timer_LED_WritePeriodBuf, .-Timer_LED_WritePeriodBuf
 1032              		.section	.text.Timer_LED_ReadPeriodBuf,"ax",%progbits
 1033              		.align	2
 1034              		.global	Timer_LED_ReadPeriodBuf
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	Timer_LED_ReadPeriodBuf, %function
 1038              	Timer_LED_ReadPeriodBuf:
 1039              	.LFB22:
 770:.\Generated_Source\PSoC4/Timer_LED.c **** 
 771:.\Generated_Source\PSoC4/Timer_LED.c **** 
 772:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/Timer_LED.c **** *
 776:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 777:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/Timer_LED.c **** *
 779:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 780:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 781:.\Generated_Source\PSoC4/Timer_LED.c **** *
 782:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 783:.\Generated_Source\PSoC4/Timer_LED.c **** *  Period value
 784:.\Generated_Source\PSoC4/Timer_LED.c **** *
 785:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 33


 786:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1040              		.loc 1 787 0
 1041              		.cfi_startproc
 1042 0000 80B5     		push	{r7, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 788:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_PERIOD_BUF_REG & Timer_LED_16BIT_MASK);
 1048              		.loc 1 788 0
 1049 0004 034B     		ldr	r3, .L66
 1050 0006 1B68     		ldr	r3, [r3]
 1051 0008 1B04     		lsl	r3, r3, #16
 1052 000a 1B0C     		lsr	r3, r3, #16
 789:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1053              		.loc 1 789 0
 1054 000c 181C     		mov	r0, r3
 1055 000e BD46     		mov	sp, r7
 1056              		@ sp needed
 1057 0010 80BD     		pop	{r7, pc}
 1058              	.L67:
 1059 0012 C046     		.align	2
 1060              	.L66:
 1061 0014 18012040 		.word	1075839256
 1062              		.cfi_endproc
 1063              	.LFE22:
 1064              		.size	Timer_LED_ReadPeriodBuf, .-Timer_LED_ReadPeriodBuf
 1065              		.section	.text.Timer_LED_SetPeriodSwap,"ax",%progbits
 1066              		.align	2
 1067              		.global	Timer_LED_SetPeriodSwap
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	Timer_LED_SetPeriodSwap, %function
 1071              	Timer_LED_SetPeriodSwap:
 1072              	.LFB23:
 790:.\Generated_Source\PSoC4/Timer_LED.c **** 
 791:.\Generated_Source\PSoC4/Timer_LED.c **** 
 792:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetPeriodSwap
 794:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/Timer_LED.c **** *
 796:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 797:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/Timer_LED.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/Timer_LED.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/Timer_LED.c **** *  switch event.
 801:.\Generated_Source\PSoC4/Timer_LED.c **** *
 802:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 803:.\Generated_Source\PSoC4/Timer_LED.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
 805:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/Timer_LED.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/Timer_LED.c **** *
 808:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 809:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 34


 810:.\Generated_Source\PSoC4/Timer_LED.c **** *
 811:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1073              		.loc 1 813 0
 1074              		.cfi_startproc
 1075 0000 90B5     		push	{r4, r7, lr}
 1076              		.cfi_def_cfa_offset 12
 1077              		.cfi_offset 4, -12
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 85B0     		sub	sp, sp, #20
 1081              		.cfi_def_cfa_offset 32
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/Timer_LED.c **** 
 816:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1085              		.loc 1 816 0
 1086 0008 0F23     		mov	r3, #15
 1087 000a FC18     		add	r4, r7, r3
 1088 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1089 0010 031C     		mov	r3, r0
 1090 0012 2370     		strb	r3, [r4]
 817:.\Generated_Source\PSoC4/Timer_LED.c **** 
 818:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG &= (uint32)~Timer_LED_RELOAD_PERIOD_MASK;
 1091              		.loc 1 818 0
 1092 0014 0B4B     		ldr	r3, .L69
 1093 0016 0B4A     		ldr	r2, .L69
 1094 0018 1268     		ldr	r2, [r2]
 1095 001a 0221     		mov	r1, #2
 1096 001c 8A43     		bic	r2, r1
 1097 001e 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_CONTROL_REG |= ((uint32)((swapEnable & Timer_LED_1BIT_MASK) <<
 1098              		.loc 1 819 0
 1099 0020 084B     		ldr	r3, .L69
 1100 0022 084A     		ldr	r2, .L69
 1101 0024 1168     		ldr	r1, [r2]
 1102 0026 7A68     		ldr	r2, [r7, #4]
 1103 0028 0120     		mov	r0, #1
 1104 002a 0240     		and	r2, r0
 1105 002c 5200     		lsl	r2, r2, #1
 1106 002e 0A43     		orr	r2, r1
 1107 0030 1A60     		str	r2, [r3]
 820:.\Generated_Source\PSoC4/Timer_LED.c ****                                                             Timer_LED_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/Timer_LED.c **** 
 822:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1108              		.loc 1 822 0
 1109 0032 0F23     		mov	r3, #15
 1110 0034 FB18     		add	r3, r7, r3
 1111 0036 1B78     		ldrb	r3, [r3]
 1112 0038 181C     		mov	r0, r3
 1113 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1114              		.loc 1 823 0
 1115 003e BD46     		mov	sp, r7
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 35


 1116 0040 05B0     		add	sp, sp, #20
 1117              		@ sp needed
 1118 0042 90BD     		pop	{r4, r7, pc}
 1119              	.L70:
 1120              		.align	2
 1121              	.L69:
 1122 0044 00012040 		.word	1075839232
 1123              		.cfi_endproc
 1124              	.LFE23:
 1125              		.size	Timer_LED_SetPeriodSwap, .-Timer_LED_SetPeriodSwap
 1126              		.section	.text.Timer_LED_WriteCompare,"ax",%progbits
 1127              		.align	2
 1128              		.global	Timer_LED_WriteCompare
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	Timer_LED_WriteCompare, %function
 1132              	Timer_LED_WriteCompare:
 1133              	.LFB24:
 824:.\Generated_Source\PSoC4/Timer_LED.c **** 
 825:.\Generated_Source\PSoC4/Timer_LED.c **** 
 826:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_WriteCompare
 828:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/Timer_LED.c **** *
 830:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 831:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/Timer_LED.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/Timer_LED.c **** *
 834:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 835:.\Generated_Source\PSoC4/Timer_LED.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/Timer_LED.c **** *
 837:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 838:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 839:.\Generated_Source\PSoC4/Timer_LED.c **** *
 840:.\Generated_Source\PSoC4/Timer_LED.c **** * Note:
 841:.\Generated_Source\PSoC4/Timer_LED.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/Timer_LED.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/Timer_LED.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/Timer_LED.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/Timer_LED.c **** *
 848:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1134              		.loc 1 850 0
 1135              		.cfi_startproc
 1136 0000 80B5     		push	{r7, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 82B0     		sub	sp, sp, #8
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 36


 852:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/Timer_LED.c **** 
 855:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/Timer_LED.c ****         currentMode = ((Timer_LED_CONTROL_REG & Timer_LED_UPDOWN_MASK) >> Timer_LED_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/Timer_LED.c **** 
 858:.\Generated_Source\PSoC4/Timer_LED.c ****         if (((uint32)Timer_LED__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 860:.\Generated_Source\PSoC4/Timer_LED.c ****             compare++;
 861:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 862:.\Generated_Source\PSoC4/Timer_LED.c ****         else if (((uint32)Timer_LED__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 864:.\Generated_Source\PSoC4/Timer_LED.c ****             compare--;
 865:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 866:.\Generated_Source\PSoC4/Timer_LED.c ****         else
 867:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 868:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 869:.\Generated_Source\PSoC4/Timer_LED.c ****         
 870:.\Generated_Source\PSoC4/Timer_LED.c ****     
 871:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/Timer_LED.c ****     
 873:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_COMP_CAP_REG = (compare & Timer_LED_16BIT_MASK);
 1145              		.loc 1 873 0
 1146 0008 034B     		ldr	r3, .L72
 1147 000a 7A68     		ldr	r2, [r7, #4]
 1148 000c 1204     		lsl	r2, r2, #16
 1149 000e 120C     		lsr	r2, r2, #16
 1150 0010 1A60     		str	r2, [r3]
 874:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1151              		.loc 1 874 0
 1152 0012 BD46     		mov	sp, r7
 1153 0014 02B0     		add	sp, sp, #8
 1154              		@ sp needed
 1155 0016 80BD     		pop	{r7, pc}
 1156              	.L73:
 1157              		.align	2
 1158              	.L72:
 1159 0018 0C012040 		.word	1075839244
 1160              		.cfi_endproc
 1161              	.LFE24:
 1162              		.size	Timer_LED_WriteCompare, .-Timer_LED_WriteCompare
 1163              		.section	.text.Timer_LED_ReadCompare,"ax",%progbits
 1164              		.align	2
 1165              		.global	Timer_LED_ReadCompare
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	Timer_LED_ReadCompare, %function
 1169              	Timer_LED_ReadCompare:
 1170              	.LFB25:
 875:.\Generated_Source\PSoC4/Timer_LED.c **** 
 876:.\Generated_Source\PSoC4/Timer_LED.c **** 
 877:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadCompare
 879:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/Timer_LED.c **** *
 881:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 882:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 37


 883:.\Generated_Source\PSoC4/Timer_LED.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/Timer_LED.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/Timer_LED.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/Timer_LED.c **** *
 888:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 889:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 890:.\Generated_Source\PSoC4/Timer_LED.c **** *
 891:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 892:.\Generated_Source\PSoC4/Timer_LED.c **** *  Compare value
 893:.\Generated_Source\PSoC4/Timer_LED.c **** *
 894:.\Generated_Source\PSoC4/Timer_LED.c **** * Note:
 895:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/Timer_LED.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/Timer_LED.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/Timer_LED.c **** *
 899:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadCompare(void)
 901:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1171              		.loc 1 901 0
 1172              		.cfi_startproc
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/Timer_LED.c **** 
 907:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/Timer_LED.c ****         currentMode = ((Timer_LED_CONTROL_REG & Timer_LED_UPDOWN_MASK) >> Timer_LED_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/Timer_LED.c ****         
 910:.\Generated_Source\PSoC4/Timer_LED.c ****         regVal = Timer_LED_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/Timer_LED.c ****         
 912:.\Generated_Source\PSoC4/Timer_LED.c ****         if (((uint32)Timer_LED__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 914:.\Generated_Source\PSoC4/Timer_LED.c ****             regVal--;
 915:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 916:.\Generated_Source\PSoC4/Timer_LED.c ****         else if (((uint32)Timer_LED__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 918:.\Generated_Source\PSoC4/Timer_LED.c ****             regVal++;
 919:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 920:.\Generated_Source\PSoC4/Timer_LED.c ****         else
 921:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 922:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 923:.\Generated_Source\PSoC4/Timer_LED.c **** 
 924:.\Generated_Source\PSoC4/Timer_LED.c ****         return (regVal & Timer_LED_16BIT_MASK);
 925:.\Generated_Source\PSoC4/Timer_LED.c ****     #else
 926:.\Generated_Source\PSoC4/Timer_LED.c ****         return (Timer_LED_COMP_CAP_REG & Timer_LED_16BIT_MASK);
 1179              		.loc 1 926 0
 1180 0004 034B     		ldr	r3, .L76
 1181 0006 1B68     		ldr	r3, [r3]
 1182 0008 1B04     		lsl	r3, r3, #16
 1183 000a 1B0C     		lsr	r3, r3, #16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 38


 927:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1184              		.loc 1 928 0
 1185 000c 181C     		mov	r0, r3
 1186 000e BD46     		mov	sp, r7
 1187              		@ sp needed
 1188 0010 80BD     		pop	{r7, pc}
 1189              	.L77:
 1190 0012 C046     		.align	2
 1191              	.L76:
 1192 0014 0C012040 		.word	1075839244
 1193              		.cfi_endproc
 1194              	.LFE25:
 1195              		.size	Timer_LED_ReadCompare, .-Timer_LED_ReadCompare
 1196              		.section	.text.Timer_LED_WriteCompareBuf,"ax",%progbits
 1197              		.align	2
 1198              		.global	Timer_LED_WriteCompareBuf
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	Timer_LED_WriteCompareBuf, %function
 1202              	Timer_LED_WriteCompareBuf:
 1203              	.LFB26:
 929:.\Generated_Source\PSoC4/Timer_LED.c **** 
 930:.\Generated_Source\PSoC4/Timer_LED.c **** 
 931:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_WriteCompareBuf
 933:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/Timer_LED.c **** *
 935:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 936:.\Generated_Source\PSoC4/Timer_LED.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/Timer_LED.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/Timer_LED.c **** *
 939:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 940:.\Generated_Source\PSoC4/Timer_LED.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/Timer_LED.c **** *
 942:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 943:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 944:.\Generated_Source\PSoC4/Timer_LED.c **** *
 945:.\Generated_Source\PSoC4/Timer_LED.c **** * Note:
 946:.\Generated_Source\PSoC4/Timer_LED.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/Timer_LED.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/Timer_LED.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/Timer_LED.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/Timer_LED.c **** *
 953:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1204              		.loc 1 955 0
 1205              		.cfi_startproc
 1206 0000 80B5     		push	{r7, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 7, -8
 1209              		.cfi_offset 14, -4
 1210 0002 82B0     		sub	sp, sp, #8
 1211              		.cfi_def_cfa_offset 16
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 39


 1212 0004 00AF     		add	r7, sp, #0
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
 956:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/Timer_LED.c **** 
 960:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/Timer_LED.c ****         currentMode = ((Timer_LED_CONTROL_REG & Timer_LED_UPDOWN_MASK) >> Timer_LED_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/Timer_LED.c **** 
 963:.\Generated_Source\PSoC4/Timer_LED.c ****         if (((uint32)Timer_LED__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 965:.\Generated_Source\PSoC4/Timer_LED.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 967:.\Generated_Source\PSoC4/Timer_LED.c ****         else if (((uint32)Timer_LED__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 969:.\Generated_Source\PSoC4/Timer_LED.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 971:.\Generated_Source\PSoC4/Timer_LED.c ****         else
 972:.\Generated_Source\PSoC4/Timer_LED.c ****         {
 973:.\Generated_Source\PSoC4/Timer_LED.c ****         }
 974:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/Timer_LED.c ****     
 976:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_COMP_CAP_BUF_REG = (compareBuf & Timer_LED_16BIT_MASK);
 1215              		.loc 1 976 0
 1216 0008 034B     		ldr	r3, .L79
 1217 000a 7A68     		ldr	r2, [r7, #4]
 1218 000c 1204     		lsl	r2, r2, #16
 1219 000e 120C     		lsr	r2, r2, #16
 1220 0010 1A60     		str	r2, [r3]
 977:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1221              		.loc 1 977 0
 1222 0012 BD46     		mov	sp, r7
 1223 0014 02B0     		add	sp, sp, #8
 1224              		@ sp needed
 1225 0016 80BD     		pop	{r7, pc}
 1226              	.L80:
 1227              		.align	2
 1228              	.L79:
 1229 0018 10012040 		.word	1075839248
 1230              		.cfi_endproc
 1231              	.LFE26:
 1232              		.size	Timer_LED_WriteCompareBuf, .-Timer_LED_WriteCompareBuf
 1233              		.section	.text.Timer_LED_ReadCompareBuf,"ax",%progbits
 1234              		.align	2
 1235              		.global	Timer_LED_ReadCompareBuf
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	Timer_LED_ReadCompareBuf, %function
 1239              	Timer_LED_ReadCompareBuf:
 1240              	.LFB27:
 978:.\Generated_Source\PSoC4/Timer_LED.c **** 
 979:.\Generated_Source\PSoC4/Timer_LED.c **** 
 980:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadCompareBuf
 982:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/Timer_LED.c **** *
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 40


 984:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
 985:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/Timer_LED.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/Timer_LED.c **** *
 988:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
 989:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
 990:.\Generated_Source\PSoC4/Timer_LED.c **** *
 991:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
 992:.\Generated_Source\PSoC4/Timer_LED.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/Timer_LED.c **** *
 994:.\Generated_Source\PSoC4/Timer_LED.c **** * Note:
 995:.\Generated_Source\PSoC4/Timer_LED.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/Timer_LED.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/Timer_LED.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/Timer_LED.c **** *
 999:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1241              		.loc 1 1001 0
 1242              		.cfi_startproc
 1243 0000 80B5     		push	{r7, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
1002:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/Timer_LED.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/Timer_LED.c **** 
1007:.\Generated_Source\PSoC4/Timer_LED.c ****     #if (Timer_LED_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/Timer_LED.c ****         currentMode = ((Timer_LED_CONTROL_REG & Timer_LED_UPDOWN_MASK) >> Timer_LED_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/Timer_LED.c **** 
1010:.\Generated_Source\PSoC4/Timer_LED.c ****         regVal = Timer_LED_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/Timer_LED.c ****         
1012:.\Generated_Source\PSoC4/Timer_LED.c ****         if (((uint32)Timer_LED__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/Timer_LED.c ****         {
1014:.\Generated_Source\PSoC4/Timer_LED.c ****             regVal--;
1015:.\Generated_Source\PSoC4/Timer_LED.c ****         }
1016:.\Generated_Source\PSoC4/Timer_LED.c ****         else if (((uint32)Timer_LED__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/Timer_LED.c ****         {
1018:.\Generated_Source\PSoC4/Timer_LED.c ****             regVal++;
1019:.\Generated_Source\PSoC4/Timer_LED.c ****         }
1020:.\Generated_Source\PSoC4/Timer_LED.c ****         else
1021:.\Generated_Source\PSoC4/Timer_LED.c ****         {
1022:.\Generated_Source\PSoC4/Timer_LED.c ****         }
1023:.\Generated_Source\PSoC4/Timer_LED.c **** 
1024:.\Generated_Source\PSoC4/Timer_LED.c ****         return (regVal & Timer_LED_16BIT_MASK);
1025:.\Generated_Source\PSoC4/Timer_LED.c ****     #else
1026:.\Generated_Source\PSoC4/Timer_LED.c ****         return (Timer_LED_COMP_CAP_BUF_REG & Timer_LED_16BIT_MASK);
 1249              		.loc 1 1026 0
 1250 0004 034B     		ldr	r3, .L83
 1251 0006 1B68     		ldr	r3, [r3]
 1252 0008 1B04     		lsl	r3, r3, #16
 1253 000a 1B0C     		lsr	r3, r3, #16
1027:.\Generated_Source\PSoC4/Timer_LED.c ****     #endif /* (Timer_LED_CY_TCPWM_4000) */
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 41


1028:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1254              		.loc 1 1028 0
 1255 000c 181C     		mov	r0, r3
 1256 000e BD46     		mov	sp, r7
 1257              		@ sp needed
 1258 0010 80BD     		pop	{r7, pc}
 1259              	.L84:
 1260 0012 C046     		.align	2
 1261              	.L83:
 1262 0014 10012040 		.word	1075839248
 1263              		.cfi_endproc
 1264              	.LFE27:
 1265              		.size	Timer_LED_ReadCompareBuf, .-Timer_LED_ReadCompareBuf
 1266              		.section	.text.Timer_LED_ReadCapture,"ax",%progbits
 1267              		.align	2
 1268              		.global	Timer_LED_ReadCapture
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	Timer_LED_ReadCapture, %function
 1272              	Timer_LED_ReadCapture:
 1273              	.LFB28:
1029:.\Generated_Source\PSoC4/Timer_LED.c **** 
1030:.\Generated_Source\PSoC4/Timer_LED.c **** 
1031:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadCapture
1033:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/Timer_LED.c **** *
1035:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1036:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/Timer_LED.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/Timer_LED.c **** *
1039:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1040:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1041:.\Generated_Source\PSoC4/Timer_LED.c **** *
1042:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1043:.\Generated_Source\PSoC4/Timer_LED.c **** *  Capture value
1044:.\Generated_Source\PSoC4/Timer_LED.c **** *
1045:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadCapture(void)
1047:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1274              		.loc 1 1047 0
 1275              		.cfi_startproc
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
1048:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_COMP_CAP_REG & Timer_LED_16BIT_MASK);
 1282              		.loc 1 1048 0
 1283 0004 034B     		ldr	r3, .L87
 1284 0006 1B68     		ldr	r3, [r3]
 1285 0008 1B04     		lsl	r3, r3, #16
 1286 000a 1B0C     		lsr	r3, r3, #16
1049:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1287              		.loc 1 1049 0
 1288 000c 181C     		mov	r0, r3
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 42


 1289 000e BD46     		mov	sp, r7
 1290              		@ sp needed
 1291 0010 80BD     		pop	{r7, pc}
 1292              	.L88:
 1293 0012 C046     		.align	2
 1294              	.L87:
 1295 0014 0C012040 		.word	1075839244
 1296              		.cfi_endproc
 1297              	.LFE28:
 1298              		.size	Timer_LED_ReadCapture, .-Timer_LED_ReadCapture
 1299              		.section	.text.Timer_LED_ReadCaptureBuf,"ax",%progbits
 1300              		.align	2
 1301              		.global	Timer_LED_ReadCaptureBuf
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	Timer_LED_ReadCaptureBuf, %function
 1305              	Timer_LED_ReadCaptureBuf:
 1306              	.LFB29:
1050:.\Generated_Source\PSoC4/Timer_LED.c **** 
1051:.\Generated_Source\PSoC4/Timer_LED.c **** 
1052:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/Timer_LED.c **** *
1056:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1057:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/Timer_LED.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/Timer_LED.c **** *
1060:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1061:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1062:.\Generated_Source\PSoC4/Timer_LED.c **** *
1063:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1064:.\Generated_Source\PSoC4/Timer_LED.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/Timer_LED.c **** *
1066:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1307              		.loc 1 1068 0
 1308              		.cfi_startproc
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_COMP_CAP_BUF_REG & Timer_LED_16BIT_MASK);
 1315              		.loc 1 1069 0
 1316 0004 034B     		ldr	r3, .L91
 1317 0006 1B68     		ldr	r3, [r3]
 1318 0008 1B04     		lsl	r3, r3, #16
 1319 000a 1B0C     		lsr	r3, r3, #16
1070:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1320              		.loc 1 1070 0
 1321 000c 181C     		mov	r0, r3
 1322 000e BD46     		mov	sp, r7
 1323              		@ sp needed
 1324 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 43


 1325              	.L92:
 1326 0012 C046     		.align	2
 1327              	.L91:
 1328 0014 10012040 		.word	1075839248
 1329              		.cfi_endproc
 1330              	.LFE29:
 1331              		.size	Timer_LED_ReadCaptureBuf, .-Timer_LED_ReadCaptureBuf
 1332              		.section	.text.Timer_LED_SetCaptureMode,"ax",%progbits
 1333              		.align	2
 1334              		.global	Timer_LED_SetCaptureMode
 1335              		.code	16
 1336              		.thumb_func
 1337              		.type	Timer_LED_SetCaptureMode, %function
 1338              	Timer_LED_SetCaptureMode:
 1339              	.LFB30:
1071:.\Generated_Source\PSoC4/Timer_LED.c **** 
1072:.\Generated_Source\PSoC4/Timer_LED.c **** 
1073:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetCaptureMode
1075:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/Timer_LED.c **** *
1077:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1078:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/Timer_LED.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/Timer_LED.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/Timer_LED.c **** *
1082:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1083:.\Generated_Source\PSoC4/Timer_LED.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1085:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/Timer_LED.c **** *
1090:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1091:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1092:.\Generated_Source\PSoC4/Timer_LED.c **** *
1093:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1340              		.loc 1 1095 0
 1341              		.cfi_startproc
 1342 0000 90B5     		push	{r4, r7, lr}
 1343              		.cfi_def_cfa_offset 12
 1344              		.cfi_offset 4, -12
 1345              		.cfi_offset 7, -8
 1346              		.cfi_offset 14, -4
 1347 0002 85B0     		sub	sp, sp, #20
 1348              		.cfi_def_cfa_offset 32
 1349 0004 00AF     		add	r7, sp, #0
 1350              		.cfi_def_cfa_register 7
 1351 0006 7860     		str	r0, [r7, #4]
1096:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/Timer_LED.c **** 
1098:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1352              		.loc 1 1098 0
 1353 0008 0F23     		mov	r3, #15
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 44


 1354 000a FC18     		add	r4, r7, r3
 1355 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1356 0010 031C     		mov	r3, r0
 1357 0012 2370     		strb	r3, [r4]
1099:.\Generated_Source\PSoC4/Timer_LED.c **** 
1100:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG &= (uint32)~Timer_LED_CAPTURE_MASK;
 1358              		.loc 1 1100 0
 1359 0014 0A4B     		ldr	r3, .L94
 1360 0016 0A4A     		ldr	r2, .L94
 1361 0018 1268     		ldr	r2, [r2]
 1362 001a 0321     		mov	r1, #3
 1363 001c 8A43     		bic	r2, r1
 1364 001e 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG |= triggerMode;
 1365              		.loc 1 1101 0
 1366 0020 074B     		ldr	r3, .L94
 1367 0022 074A     		ldr	r2, .L94
 1368 0024 1168     		ldr	r1, [r2]
 1369 0026 7A68     		ldr	r2, [r7, #4]
 1370 0028 0A43     		orr	r2, r1
 1371 002a 1A60     		str	r2, [r3]
1102:.\Generated_Source\PSoC4/Timer_LED.c **** 
1103:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1372              		.loc 1 1103 0
 1373 002c 0F23     		mov	r3, #15
 1374 002e FB18     		add	r3, r7, r3
 1375 0030 1B78     		ldrb	r3, [r3]
 1376 0032 181C     		mov	r0, r3
 1377 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1378              		.loc 1 1104 0
 1379 0038 BD46     		mov	sp, r7
 1380 003a 05B0     		add	sp, sp, #20
 1381              		@ sp needed
 1382 003c 90BD     		pop	{r4, r7, pc}
 1383              	.L95:
 1384 003e C046     		.align	2
 1385              	.L94:
 1386 0040 24012040 		.word	1075839268
 1387              		.cfi_endproc
 1388              	.LFE30:
 1389              		.size	Timer_LED_SetCaptureMode, .-Timer_LED_SetCaptureMode
 1390              		.section	.text.Timer_LED_SetReloadMode,"ax",%progbits
 1391              		.align	2
 1392              		.global	Timer_LED_SetReloadMode
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	Timer_LED_SetReloadMode, %function
 1396              	Timer_LED_SetReloadMode:
 1397              	.LFB31:
1105:.\Generated_Source\PSoC4/Timer_LED.c **** 
1106:.\Generated_Source\PSoC4/Timer_LED.c **** 
1107:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetReloadMode
1109:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/Timer_LED.c **** *
1111:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 45


1112:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/Timer_LED.c **** *  input.
1114:.\Generated_Source\PSoC4/Timer_LED.c **** *
1115:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1116:.\Generated_Source\PSoC4/Timer_LED.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1118:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/Timer_LED.c **** *
1123:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1124:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1125:.\Generated_Source\PSoC4/Timer_LED.c **** *
1126:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1398              		.loc 1 1128 0
 1399              		.cfi_startproc
 1400 0000 90B5     		push	{r4, r7, lr}
 1401              		.cfi_def_cfa_offset 12
 1402              		.cfi_offset 4, -12
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 85B0     		sub	sp, sp, #20
 1406              		.cfi_def_cfa_offset 32
 1407 0004 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
 1409 0006 7860     		str	r0, [r7, #4]
1129:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/Timer_LED.c **** 
1131:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1410              		.loc 1 1131 0
 1411 0008 0F23     		mov	r3, #15
 1412 000a FC18     		add	r4, r7, r3
 1413 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1414 0010 031C     		mov	r3, r0
 1415 0012 2370     		strb	r3, [r4]
1132:.\Generated_Source\PSoC4/Timer_LED.c **** 
1133:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG &= (uint32)~Timer_LED_RELOAD_MASK;
 1416              		.loc 1 1133 0
 1417 0014 0A4B     		ldr	r3, .L97
 1418 0016 0A4A     		ldr	r2, .L97
 1419 0018 1268     		ldr	r2, [r2]
 1420 001a 3021     		mov	r1, #48
 1421 001c 8A43     		bic	r2, r1
 1422 001e 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_LED_RELOAD_SHIFT));
 1423              		.loc 1 1134 0
 1424 0020 074B     		ldr	r3, .L97
 1425 0022 074A     		ldr	r2, .L97
 1426 0024 1168     		ldr	r1, [r2]
 1427 0026 7A68     		ldr	r2, [r7, #4]
 1428 0028 1201     		lsl	r2, r2, #4
 1429 002a 0A43     		orr	r2, r1
 1430 002c 1A60     		str	r2, [r3]
1135:.\Generated_Source\PSoC4/Timer_LED.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 46


1136:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1431              		.loc 1 1136 0
 1432 002e 0F23     		mov	r3, #15
 1433 0030 FB18     		add	r3, r7, r3
 1434 0032 1B78     		ldrb	r3, [r3]
 1435 0034 181C     		mov	r0, r3
 1436 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1437              		.loc 1 1137 0
 1438 003a BD46     		mov	sp, r7
 1439 003c 05B0     		add	sp, sp, #20
 1440              		@ sp needed
 1441 003e 90BD     		pop	{r4, r7, pc}
 1442              	.L98:
 1443              		.align	2
 1444              	.L97:
 1445 0040 24012040 		.word	1075839268
 1446              		.cfi_endproc
 1447              	.LFE31:
 1448              		.size	Timer_LED_SetReloadMode, .-Timer_LED_SetReloadMode
 1449              		.section	.text.Timer_LED_SetStartMode,"ax",%progbits
 1450              		.align	2
 1451              		.global	Timer_LED_SetStartMode
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	Timer_LED_SetStartMode, %function
 1455              	Timer_LED_SetStartMode:
 1456              	.LFB32:
1138:.\Generated_Source\PSoC4/Timer_LED.c **** 
1139:.\Generated_Source\PSoC4/Timer_LED.c **** 
1140:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetStartMode
1142:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/Timer_LED.c **** *
1144:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1145:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/Timer_LED.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/Timer_LED.c **** *
1148:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1149:.\Generated_Source\PSoC4/Timer_LED.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1151:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/Timer_LED.c **** *
1156:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1157:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1158:.\Generated_Source\PSoC4/Timer_LED.c **** *
1159:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1457              		.loc 1 1161 0
 1458              		.cfi_startproc
 1459 0000 90B5     		push	{r4, r7, lr}
 1460              		.cfi_def_cfa_offset 12
 1461              		.cfi_offset 4, -12
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 47


 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 85B0     		sub	sp, sp, #20
 1465              		.cfi_def_cfa_offset 32
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 1468 0006 7860     		str	r0, [r7, #4]
1162:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/Timer_LED.c **** 
1164:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1469              		.loc 1 1164 0
 1470 0008 0F23     		mov	r3, #15
 1471 000a FC18     		add	r4, r7, r3
 1472 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1473 0010 031C     		mov	r3, r0
 1474 0012 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/Timer_LED.c **** 
1166:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG &= (uint32)~Timer_LED_START_MASK;
 1475              		.loc 1 1166 0
 1476 0014 0A4B     		ldr	r3, .L100
 1477 0016 0A4A     		ldr	r2, .L100
 1478 0018 1268     		ldr	r2, [r2]
 1479 001a 0A49     		ldr	r1, .L100+4
 1480 001c 0A40     		and	r2, r1
 1481 001e 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_LED_START_SHIFT));
 1482              		.loc 1 1167 0
 1483 0020 074B     		ldr	r3, .L100
 1484 0022 074A     		ldr	r2, .L100
 1485 0024 1168     		ldr	r1, [r2]
 1486 0026 7A68     		ldr	r2, [r7, #4]
 1487 0028 1202     		lsl	r2, r2, #8
 1488 002a 0A43     		orr	r2, r1
 1489 002c 1A60     		str	r2, [r3]
1168:.\Generated_Source\PSoC4/Timer_LED.c **** 
1169:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1490              		.loc 1 1169 0
 1491 002e 0F23     		mov	r3, #15
 1492 0030 FB18     		add	r3, r7, r3
 1493 0032 1B78     		ldrb	r3, [r3]
 1494 0034 181C     		mov	r0, r3
 1495 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1496              		.loc 1 1170 0
 1497 003a BD46     		mov	sp, r7
 1498 003c 05B0     		add	sp, sp, #20
 1499              		@ sp needed
 1500 003e 90BD     		pop	{r4, r7, pc}
 1501              	.L101:
 1502              		.align	2
 1503              	.L100:
 1504 0040 24012040 		.word	1075839268
 1505 0044 FFFCFFFF 		.word	-769
 1506              		.cfi_endproc
 1507              	.LFE32:
 1508              		.size	Timer_LED_SetStartMode, .-Timer_LED_SetStartMode
 1509              		.section	.text.Timer_LED_SetStopMode,"ax",%progbits
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 48


 1510              		.align	2
 1511              		.global	Timer_LED_SetStopMode
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	Timer_LED_SetStopMode, %function
 1515              	Timer_LED_SetStopMode:
 1516              	.LFB33:
1171:.\Generated_Source\PSoC4/Timer_LED.c **** 
1172:.\Generated_Source\PSoC4/Timer_LED.c **** 
1173:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetStopMode
1175:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/Timer_LED.c **** *
1177:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1178:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/Timer_LED.c **** *
1180:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1181:.\Generated_Source\PSoC4/Timer_LED.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1183:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/Timer_LED.c **** *
1188:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1189:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1190:.\Generated_Source\PSoC4/Timer_LED.c **** *
1191:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1517              		.loc 1 1193 0
 1518              		.cfi_startproc
 1519 0000 90B5     		push	{r4, r7, lr}
 1520              		.cfi_def_cfa_offset 12
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 7, -8
 1523              		.cfi_offset 14, -4
 1524 0002 85B0     		sub	sp, sp, #20
 1525              		.cfi_def_cfa_offset 32
 1526 0004 00AF     		add	r7, sp, #0
 1527              		.cfi_def_cfa_register 7
 1528 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/Timer_LED.c **** 
1196:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1529              		.loc 1 1196 0
 1530 0008 0F23     		mov	r3, #15
 1531 000a FC18     		add	r4, r7, r3
 1532 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1533 0010 031C     		mov	r3, r0
 1534 0012 2370     		strb	r3, [r4]
1197:.\Generated_Source\PSoC4/Timer_LED.c **** 
1198:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG &= (uint32)~Timer_LED_STOP_MASK;
 1535              		.loc 1 1198 0
 1536 0014 0A4B     		ldr	r3, .L103
 1537 0016 0A4A     		ldr	r2, .L103
 1538 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 49


 1539 001a C021     		mov	r1, #192
 1540 001c 8A43     		bic	r2, r1
 1541 001e 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_LED_STOP_SHIFT));
 1542              		.loc 1 1199 0
 1543 0020 074B     		ldr	r3, .L103
 1544 0022 074A     		ldr	r2, .L103
 1545 0024 1168     		ldr	r1, [r2]
 1546 0026 7A68     		ldr	r2, [r7, #4]
 1547 0028 9201     		lsl	r2, r2, #6
 1548 002a 0A43     		orr	r2, r1
 1549 002c 1A60     		str	r2, [r3]
1200:.\Generated_Source\PSoC4/Timer_LED.c **** 
1201:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1550              		.loc 1 1201 0
 1551 002e 0F23     		mov	r3, #15
 1552 0030 FB18     		add	r3, r7, r3
 1553 0032 1B78     		ldrb	r3, [r3]
 1554 0034 181C     		mov	r0, r3
 1555 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1556              		.loc 1 1202 0
 1557 003a BD46     		mov	sp, r7
 1558 003c 05B0     		add	sp, sp, #20
 1559              		@ sp needed
 1560 003e 90BD     		pop	{r4, r7, pc}
 1561              	.L104:
 1562              		.align	2
 1563              	.L103:
 1564 0040 24012040 		.word	1075839268
 1565              		.cfi_endproc
 1566              	.LFE33:
 1567              		.size	Timer_LED_SetStopMode, .-Timer_LED_SetStopMode
 1568              		.section	.text.Timer_LED_SetCountMode,"ax",%progbits
 1569              		.align	2
 1570              		.global	Timer_LED_SetCountMode
 1571              		.code	16
 1572              		.thumb_func
 1573              		.type	Timer_LED_SetCountMode, %function
 1574              	Timer_LED_SetCountMode:
 1575              	.LFB34:
1203:.\Generated_Source\PSoC4/Timer_LED.c **** 
1204:.\Generated_Source\PSoC4/Timer_LED.c **** 
1205:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetCountMode
1207:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/Timer_LED.c **** *
1209:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1210:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/Timer_LED.c **** *  input.
1212:.\Generated_Source\PSoC4/Timer_LED.c **** *
1213:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1214:.\Generated_Source\PSoC4/Timer_LED.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1216:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_FALLING   - Falling edge
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 50


1219:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/Timer_LED.c **** *
1221:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1222:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1223:.\Generated_Source\PSoC4/Timer_LED.c **** *
1224:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1576              		.loc 1 1226 0
 1577              		.cfi_startproc
 1578 0000 90B5     		push	{r4, r7, lr}
 1579              		.cfi_def_cfa_offset 12
 1580              		.cfi_offset 4, -12
 1581              		.cfi_offset 7, -8
 1582              		.cfi_offset 14, -4
 1583 0002 85B0     		sub	sp, sp, #20
 1584              		.cfi_def_cfa_offset 32
 1585 0004 00AF     		add	r7, sp, #0
 1586              		.cfi_def_cfa_register 7
 1587 0006 7860     		str	r0, [r7, #4]
1227:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/Timer_LED.c **** 
1229:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1588              		.loc 1 1229 0
 1589 0008 0F23     		mov	r3, #15
 1590 000a FC18     		add	r4, r7, r3
 1591 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1592 0010 031C     		mov	r3, r0
 1593 0012 2370     		strb	r3, [r4]
1230:.\Generated_Source\PSoC4/Timer_LED.c **** 
1231:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG &= (uint32)~Timer_LED_COUNT_MASK;
 1594              		.loc 1 1231 0
 1595 0014 0A4B     		ldr	r3, .L106
 1596 0016 0A4A     		ldr	r2, .L106
 1597 0018 1268     		ldr	r2, [r2]
 1598 001a 0C21     		mov	r1, #12
 1599 001c 8A43     		bic	r2, r1
 1600 001e 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_LED_COUNT_SHIFT));
 1601              		.loc 1 1232 0
 1602 0020 074B     		ldr	r3, .L106
 1603 0022 074A     		ldr	r2, .L106
 1604 0024 1168     		ldr	r1, [r2]
 1605 0026 7A68     		ldr	r2, [r7, #4]
 1606 0028 9200     		lsl	r2, r2, #2
 1607 002a 0A43     		orr	r2, r1
 1608 002c 1A60     		str	r2, [r3]
1233:.\Generated_Source\PSoC4/Timer_LED.c **** 
1234:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1609              		.loc 1 1234 0
 1610 002e 0F23     		mov	r3, #15
 1611 0030 FB18     		add	r3, r7, r3
 1612 0032 1B78     		ldrb	r3, [r3]
 1613 0034 181C     		mov	r0, r3
 1614 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1615              		.loc 1 1235 0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 51


 1616 003a BD46     		mov	sp, r7
 1617 003c 05B0     		add	sp, sp, #20
 1618              		@ sp needed
 1619 003e 90BD     		pop	{r4, r7, pc}
 1620              	.L107:
 1621              		.align	2
 1622              	.L106:
 1623 0040 24012040 		.word	1075839268
 1624              		.cfi_endproc
 1625              	.LFE34:
 1626              		.size	Timer_LED_SetCountMode, .-Timer_LED_SetCountMode
 1627              		.section	.text.Timer_LED_TriggerCommand,"ax",%progbits
 1628              		.align	2
 1629              		.global	Timer_LED_TriggerCommand
 1630              		.code	16
 1631              		.thumb_func
 1632              		.type	Timer_LED_TriggerCommand, %function
 1633              	Timer_LED_TriggerCommand:
 1634              	.LFB35:
1236:.\Generated_Source\PSoC4/Timer_LED.c **** 
1237:.\Generated_Source\PSoC4/Timer_LED.c **** 
1238:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_TriggerCommand
1240:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/Timer_LED.c **** *
1242:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1243:.\Generated_Source\PSoC4/Timer_LED.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/Timer_LED.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/Timer_LED.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/Timer_LED.c **** *
1247:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1248:.\Generated_Source\PSoC4/Timer_LED.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/Timer_LED.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/Timer_LED.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/Timer_LED.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/Timer_LED.c **** *        define.
1253:.\Generated_Source\PSoC4/Timer_LED.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/Timer_LED.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1256:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/Timer_LED.c **** *
1261:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1262:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1263:.\Generated_Source\PSoC4/Timer_LED.c **** *
1264:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1635              		.loc 1 1266 0
 1636              		.cfi_startproc
 1637 0000 90B5     		push	{r4, r7, lr}
 1638              		.cfi_def_cfa_offset 12
 1639              		.cfi_offset 4, -12
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 52


 1642 0002 85B0     		sub	sp, sp, #20
 1643              		.cfi_def_cfa_offset 32
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
 1646 0006 7860     		str	r0, [r7, #4]
 1647 0008 3960     		str	r1, [r7]
1267:.\Generated_Source\PSoC4/Timer_LED.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/Timer_LED.c **** 
1269:.\Generated_Source\PSoC4/Timer_LED.c ****     enableInterrupts = CyEnterCriticalSection();
 1648              		.loc 1 1269 0
 1649 000a 0F23     		mov	r3, #15
 1650 000c FC18     		add	r4, r7, r3
 1651 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1652 0012 031C     		mov	r3, r0
 1653 0014 2370     		strb	r3, [r4]
1270:.\Generated_Source\PSoC4/Timer_LED.c **** 
1271:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_COMMAND_REG = ((uint32)(mask << command));
 1654              		.loc 1 1271 0
 1655 0016 074B     		ldr	r3, .L109
 1656 0018 3A68     		ldr	r2, [r7]
 1657 001a 7968     		ldr	r1, [r7, #4]
 1658 001c 9140     		lsl	r1, r1, r2
 1659 001e 0A1C     		mov	r2, r1
 1660 0020 1A60     		str	r2, [r3]
1272:.\Generated_Source\PSoC4/Timer_LED.c **** 
1273:.\Generated_Source\PSoC4/Timer_LED.c ****     CyExitCriticalSection(enableInterrupts);
 1661              		.loc 1 1273 0
 1662 0022 0F23     		mov	r3, #15
 1663 0024 FB18     		add	r3, r7, r3
 1664 0026 1B78     		ldrb	r3, [r3]
 1665 0028 181C     		mov	r0, r3
 1666 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1667              		.loc 1 1274 0
 1668 002e BD46     		mov	sp, r7
 1669 0030 05B0     		add	sp, sp, #20
 1670              		@ sp needed
 1671 0032 90BD     		pop	{r4, r7, pc}
 1672              	.L110:
 1673              		.align	2
 1674              	.L109:
 1675 0034 08002040 		.word	1075838984
 1676              		.cfi_endproc
 1677              	.LFE35:
 1678              		.size	Timer_LED_TriggerCommand, .-Timer_LED_TriggerCommand
 1679              		.section	.text.Timer_LED_ReadStatus,"ax",%progbits
 1680              		.align	2
 1681              		.global	Timer_LED_ReadStatus
 1682              		.code	16
 1683              		.thumb_func
 1684              		.type	Timer_LED_ReadStatus, %function
 1685              	Timer_LED_ReadStatus:
 1686              	.LFB36:
1275:.\Generated_Source\PSoC4/Timer_LED.c **** 
1276:.\Generated_Source\PSoC4/Timer_LED.c **** 
1277:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ReadStatus
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 53


1279:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/Timer_LED.c **** *
1281:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1282:.\Generated_Source\PSoC4/Timer_LED.c **** *  Reads the status of the Timer_LED.
1283:.\Generated_Source\PSoC4/Timer_LED.c **** *
1284:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1285:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1286:.\Generated_Source\PSoC4/Timer_LED.c **** *
1287:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1288:.\Generated_Source\PSoC4/Timer_LED.c **** *  Status
1289:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1290:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/Timer_LED.c **** *
1293:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_ReadStatus(void)
1295:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1687              		.loc 1 1295 0
 1688              		.cfi_startproc
 1689 0000 80B5     		push	{r7, lr}
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 7, -8
 1692              		.cfi_offset 14, -4
 1693 0002 00AF     		add	r7, sp, #0
 1694              		.cfi_def_cfa_register 7
1296:.\Generated_Source\PSoC4/Timer_LED.c ****     return ((Timer_LED_STATUS_REG >> Timer_LED_RUNNING_STATUS_SHIFT) |
 1695              		.loc 1 1296 0
 1696 0004 054B     		ldr	r3, .L113
 1697 0006 1B68     		ldr	r3, [r3]
 1698 0008 9A0F     		lsr	r2, r3, #30
1297:.\Generated_Source\PSoC4/Timer_LED.c ****             (Timer_LED_STATUS_REG & Timer_LED_STATUS_DOWN));
 1699              		.loc 1 1297 0
 1700 000a 044B     		ldr	r3, .L113
 1701 000c 1B68     		ldr	r3, [r3]
 1702 000e 0121     		mov	r1, #1
 1703 0010 0B40     		and	r3, r1
1296:.\Generated_Source\PSoC4/Timer_LED.c ****     return ((Timer_LED_STATUS_REG >> Timer_LED_RUNNING_STATUS_SHIFT) |
 1704              		.loc 1 1296 0
 1705 0012 1343     		orr	r3, r2
1298:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1706              		.loc 1 1298 0
 1707 0014 181C     		mov	r0, r3
 1708 0016 BD46     		mov	sp, r7
 1709              		@ sp needed
 1710 0018 80BD     		pop	{r7, pc}
 1711              	.L114:
 1712 001a C046     		.align	2
 1713              	.L113:
 1714 001c 04012040 		.word	1075839236
 1715              		.cfi_endproc
 1716              	.LFE36:
 1717              		.size	Timer_LED_ReadStatus, .-Timer_LED_ReadStatus
 1718              		.section	.text.Timer_LED_SetInterruptMode,"ax",%progbits
 1719              		.align	2
 1720              		.global	Timer_LED_SetInterruptMode
 1721              		.code	16
 1722              		.thumb_func
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 54


 1723              		.type	Timer_LED_SetInterruptMode, %function
 1724              	Timer_LED_SetInterruptMode:
 1725              	.LFB37:
1299:.\Generated_Source\PSoC4/Timer_LED.c **** 
1300:.\Generated_Source\PSoC4/Timer_LED.c **** 
1301:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetInterruptMode
1303:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/Timer_LED.c **** *
1305:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1306:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/Timer_LED.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/Timer_LED.c **** *
1309:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1310:.\Generated_Source\PSoC4/Timer_LED.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1312:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/Timer_LED.c **** *
1315:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1316:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1317:.\Generated_Source\PSoC4/Timer_LED.c **** *
1318:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1726              		.loc 1 1320 0
 1727              		.cfi_startproc
 1728 0000 80B5     		push	{r7, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 7, -8
 1731              		.cfi_offset 14, -4
 1732 0002 82B0     		sub	sp, sp, #8
 1733              		.cfi_def_cfa_offset 16
 1734 0004 00AF     		add	r7, sp, #0
 1735              		.cfi_def_cfa_register 7
 1736 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_INTERRUPT_MASK_REG =  interruptMask;
 1737              		.loc 1 1321 0
 1738 0008 024B     		ldr	r3, .L116
 1739 000a 7A68     		ldr	r2, [r7, #4]
 1740 000c 1A60     		str	r2, [r3]
1322:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1741              		.loc 1 1322 0
 1742 000e BD46     		mov	sp, r7
 1743 0010 02B0     		add	sp, sp, #8
 1744              		@ sp needed
 1745 0012 80BD     		pop	{r7, pc}
 1746              	.L117:
 1747              		.align	2
 1748              	.L116:
 1749 0014 38012040 		.word	1075839288
 1750              		.cfi_endproc
 1751              	.LFE37:
 1752              		.size	Timer_LED_SetInterruptMode, .-Timer_LED_SetInterruptMode
 1753              		.section	.text.Timer_LED_GetInterruptSourceMasked,"ax",%progbits
 1754              		.align	2
 1755              		.global	Timer_LED_GetInterruptSourceMasked
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 55


 1756              		.code	16
 1757              		.thumb_func
 1758              		.type	Timer_LED_GetInterruptSourceMasked, %function
 1759              	Timer_LED_GetInterruptSourceMasked:
 1760              	.LFB38:
1323:.\Generated_Source\PSoC4/Timer_LED.c **** 
1324:.\Generated_Source\PSoC4/Timer_LED.c **** 
1325:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/Timer_LED.c **** *
1329:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1330:.\Generated_Source\PSoC4/Timer_LED.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/Timer_LED.c **** *
1332:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1333:.\Generated_Source\PSoC4/Timer_LED.c **** *   None
1334:.\Generated_Source\PSoC4/Timer_LED.c **** *
1335:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1336:.\Generated_Source\PSoC4/Timer_LED.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1338:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/Timer_LED.c **** *
1341:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1761              		.loc 1 1343 0
 1762              		.cfi_startproc
 1763 0000 80B5     		push	{r7, lr}
 1764              		.cfi_def_cfa_offset 8
 1765              		.cfi_offset 7, -8
 1766              		.cfi_offset 14, -4
 1767 0002 00AF     		add	r7, sp, #0
 1768              		.cfi_def_cfa_register 7
1344:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_INTERRUPT_MASKED_REG);
 1769              		.loc 1 1344 0
 1770 0004 024B     		ldr	r3, .L120
 1771 0006 1B68     		ldr	r3, [r3]
1345:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1772              		.loc 1 1345 0
 1773 0008 181C     		mov	r0, r3
 1774 000a BD46     		mov	sp, r7
 1775              		@ sp needed
 1776 000c 80BD     		pop	{r7, pc}
 1777              	.L121:
 1778 000e C046     		.align	2
 1779              	.L120:
 1780 0010 3C012040 		.word	1075839292
 1781              		.cfi_endproc
 1782              	.LFE38:
 1783              		.size	Timer_LED_GetInterruptSourceMasked, .-Timer_LED_GetInterruptSourceMasked
 1784              		.section	.text.Timer_LED_GetInterruptSource,"ax",%progbits
 1785              		.align	2
 1786              		.global	Timer_LED_GetInterruptSource
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	Timer_LED_GetInterruptSource, %function
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 56


 1790              	Timer_LED_GetInterruptSource:
 1791              	.LFB39:
1346:.\Generated_Source\PSoC4/Timer_LED.c **** 
1347:.\Generated_Source\PSoC4/Timer_LED.c **** 
1348:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_GetInterruptSource
1350:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/Timer_LED.c **** *
1352:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1353:.\Generated_Source\PSoC4/Timer_LED.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/Timer_LED.c **** *
1355:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1356:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1357:.\Generated_Source\PSoC4/Timer_LED.c **** *
1358:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1359:.\Generated_Source\PSoC4/Timer_LED.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1361:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/Timer_LED.c **** *
1364:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/Timer_LED.c **** uint32 Timer_LED_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1792              		.loc 1 1366 0
 1793              		.cfi_startproc
 1794 0000 80B5     		push	{r7, lr}
 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 7, -8
 1797              		.cfi_offset 14, -4
 1798 0002 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
1367:.\Generated_Source\PSoC4/Timer_LED.c ****     return (Timer_LED_INTERRUPT_REQ_REG);
 1800              		.loc 1 1367 0
 1801 0004 024B     		ldr	r3, .L124
 1802 0006 1B68     		ldr	r3, [r3]
1368:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1803              		.loc 1 1368 0
 1804 0008 181C     		mov	r0, r3
 1805 000a BD46     		mov	sp, r7
 1806              		@ sp needed
 1807 000c 80BD     		pop	{r7, pc}
 1808              	.L125:
 1809 000e C046     		.align	2
 1810              	.L124:
 1811 0010 30012040 		.word	1075839280
 1812              		.cfi_endproc
 1813              	.LFE39:
 1814              		.size	Timer_LED_GetInterruptSource, .-Timer_LED_GetInterruptSource
 1815              		.section	.text.Timer_LED_ClearInterrupt,"ax",%progbits
 1816              		.align	2
 1817              		.global	Timer_LED_ClearInterrupt
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	Timer_LED_ClearInterrupt, %function
 1821              	Timer_LED_ClearInterrupt:
 1822              	.LFB40:
1369:.\Generated_Source\PSoC4/Timer_LED.c **** 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 57


1370:.\Generated_Source\PSoC4/Timer_LED.c **** 
1371:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_ClearInterrupt
1373:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/Timer_LED.c **** *
1375:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1376:.\Generated_Source\PSoC4/Timer_LED.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/Timer_LED.c **** *
1378:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1379:.\Generated_Source\PSoC4/Timer_LED.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1381:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/Timer_LED.c **** *
1384:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1385:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1386:.\Generated_Source\PSoC4/Timer_LED.c **** *
1387:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1823              		.loc 1 1389 0
 1824              		.cfi_startproc
 1825 0000 80B5     		push	{r7, lr}
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 7, -8
 1828              		.cfi_offset 14, -4
 1829 0002 82B0     		sub	sp, sp, #8
 1830              		.cfi_def_cfa_offset 16
 1831 0004 00AF     		add	r7, sp, #0
 1832              		.cfi_def_cfa_register 7
 1833 0006 7860     		str	r0, [r7, #4]
1390:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_INTERRUPT_REQ_REG = interruptMask;
 1834              		.loc 1 1390 0
 1835 0008 024B     		ldr	r3, .L127
 1836 000a 7A68     		ldr	r2, [r7, #4]
 1837 000c 1A60     		str	r2, [r3]
1391:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1838              		.loc 1 1391 0
 1839 000e BD46     		mov	sp, r7
 1840 0010 02B0     		add	sp, sp, #8
 1841              		@ sp needed
 1842 0012 80BD     		pop	{r7, pc}
 1843              	.L128:
 1844              		.align	2
 1845              	.L127:
 1846 0014 30012040 		.word	1075839280
 1847              		.cfi_endproc
 1848              	.LFE40:
 1849              		.size	Timer_LED_ClearInterrupt, .-Timer_LED_ClearInterrupt
 1850              		.section	.text.Timer_LED_SetInterrupt,"ax",%progbits
 1851              		.align	2
 1852              		.global	Timer_LED_SetInterrupt
 1853              		.code	16
 1854              		.thumb_func
 1855              		.type	Timer_LED_SetInterrupt, %function
 1856              	Timer_LED_SetInterrupt:
 1857              	.LFB41:
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 58


1392:.\Generated_Source\PSoC4/Timer_LED.c **** 
1393:.\Generated_Source\PSoC4/Timer_LED.c **** 
1394:.\Generated_Source\PSoC4/Timer_LED.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/Timer_LED.c **** * Function Name: Timer_LED_SetInterrupt
1396:.\Generated_Source\PSoC4/Timer_LED.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/Timer_LED.c **** *
1398:.\Generated_Source\PSoC4/Timer_LED.c **** * Summary:
1399:.\Generated_Source\PSoC4/Timer_LED.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/Timer_LED.c **** *
1401:.\Generated_Source\PSoC4/Timer_LED.c **** * Parameters:
1402:.\Generated_Source\PSoC4/Timer_LED.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/Timer_LED.c **** *   Values:
1404:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/Timer_LED.c **** *     - Timer_LED_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/Timer_LED.c **** *
1407:.\Generated_Source\PSoC4/Timer_LED.c **** * Return:
1408:.\Generated_Source\PSoC4/Timer_LED.c **** *  None
1409:.\Generated_Source\PSoC4/Timer_LED.c **** *
1410:.\Generated_Source\PSoC4/Timer_LED.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/Timer_LED.c **** void Timer_LED_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/Timer_LED.c **** {
 1858              		.loc 1 1412 0
 1859              		.cfi_startproc
 1860 0000 80B5     		push	{r7, lr}
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 82B0     		sub	sp, sp, #8
 1865              		.cfi_def_cfa_offset 16
 1866 0004 00AF     		add	r7, sp, #0
 1867              		.cfi_def_cfa_register 7
 1868 0006 7860     		str	r0, [r7, #4]
1413:.\Generated_Source\PSoC4/Timer_LED.c ****     Timer_LED_INTERRUPT_SET_REG = interruptMask;
 1869              		.loc 1 1413 0
 1870 0008 024B     		ldr	r3, .L130
 1871 000a 7A68     		ldr	r2, [r7, #4]
 1872 000c 1A60     		str	r2, [r3]
1414:.\Generated_Source\PSoC4/Timer_LED.c **** }
 1873              		.loc 1 1414 0
 1874 000e BD46     		mov	sp, r7
 1875 0010 02B0     		add	sp, sp, #8
 1876              		@ sp needed
 1877 0012 80BD     		pop	{r7, pc}
 1878              	.L131:
 1879              		.align	2
 1880              	.L130:
 1881 0014 34012040 		.word	1075839284
 1882              		.cfi_endproc
 1883              	.LFE41:
 1884              		.size	Timer_LED_SetInterrupt, .-Timer_LED_SetInterrupt
 1885              		.text
 1886              	.Letext0:
 1887              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1888              		.section	.debug_info,"",%progbits
 1889              	.Ldebug_info0:
 1890 0000 F0060000 		.4byte	0x6f0
 1891 0004 0400     		.2byte	0x4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 59


 1892 0006 00000000 		.4byte	.Ldebug_abbrev0
 1893 000a 04       		.byte	0x4
 1894 000b 01       		.uleb128 0x1
 1895 000c 10050000 		.4byte	.LASF76
 1896 0010 01       		.byte	0x1
 1897 0011 6F020000 		.4byte	.LASF77
 1898 0015 C7050000 		.4byte	.LASF78
 1899 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1900 001d 00000000 		.4byte	0
 1901 0021 00000000 		.4byte	.Ldebug_line0
 1902 0025 02       		.uleb128 0x2
 1903 0026 01       		.byte	0x1
 1904 0027 06       		.byte	0x6
 1905 0028 AD000000 		.4byte	.LASF0
 1906 002c 02       		.uleb128 0x2
 1907 002d 01       		.byte	0x1
 1908 002e 08       		.byte	0x8
 1909 002f 9B030000 		.4byte	.LASF1
 1910 0033 02       		.uleb128 0x2
 1911 0034 02       		.byte	0x2
 1912 0035 05       		.byte	0x5
 1913 0036 D5030000 		.4byte	.LASF2
 1914 003a 02       		.uleb128 0x2
 1915 003b 02       		.byte	0x2
 1916 003c 07       		.byte	0x7
 1917 003d F0010000 		.4byte	.LASF3
 1918 0041 02       		.uleb128 0x2
 1919 0042 04       		.byte	0x4
 1920 0043 05       		.byte	0x5
 1921 0044 E5000000 		.4byte	.LASF4
 1922 0048 02       		.uleb128 0x2
 1923 0049 04       		.byte	0x4
 1924 004a 07       		.byte	0x7
 1925 004b D5010000 		.4byte	.LASF5
 1926 004f 02       		.uleb128 0x2
 1927 0050 08       		.byte	0x8
 1928 0051 05       		.byte	0x5
 1929 0052 9F000000 		.4byte	.LASF6
 1930 0056 02       		.uleb128 0x2
 1931 0057 08       		.byte	0x8
 1932 0058 07       		.byte	0x7
 1933 0059 3A000000 		.4byte	.LASF7
 1934 005d 03       		.uleb128 0x3
 1935 005e 04       		.byte	0x4
 1936 005f 05       		.byte	0x5
 1937 0060 696E7400 		.ascii	"int\000"
 1938 0064 02       		.uleb128 0x2
 1939 0065 04       		.byte	0x4
 1940 0066 07       		.byte	0x7
 1941 0067 A6010000 		.4byte	.LASF8
 1942 006b 04       		.uleb128 0x4
 1943 006c EE000000 		.4byte	.LASF9
 1944 0070 02       		.byte	0x2
 1945 0071 9801     		.2byte	0x198
 1946 0073 2C000000 		.4byte	0x2c
 1947 0077 04       		.uleb128 0x4
 1948 0078 FB000000 		.4byte	.LASF10
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 60


 1949 007c 02       		.byte	0x2
 1950 007d 9A01     		.2byte	0x19a
 1951 007f 48000000 		.4byte	0x48
 1952 0083 02       		.uleb128 0x2
 1953 0084 04       		.byte	0x4
 1954 0085 04       		.byte	0x4
 1955 0086 62030000 		.4byte	.LASF11
 1956 008a 02       		.uleb128 0x2
 1957 008b 08       		.byte	0x8
 1958 008c 04       		.byte	0x4
 1959 008d F4000000 		.4byte	.LASF12
 1960 0091 02       		.uleb128 0x2
 1961 0092 01       		.byte	0x1
 1962 0093 08       		.byte	0x8
 1963 0094 11040000 		.4byte	.LASF13
 1964 0098 04       		.uleb128 0x4
 1965 0099 A5020000 		.4byte	.LASF14
 1966 009d 02       		.byte	0x2
 1967 009e 4402     		.2byte	0x244
 1968 00a0 A4000000 		.4byte	0xa4
 1969 00a4 05       		.uleb128 0x5
 1970 00a5 77000000 		.4byte	0x77
 1971 00a9 02       		.uleb128 0x2
 1972 00aa 04       		.byte	0x4
 1973 00ab 07       		.byte	0x7
 1974 00ac F3020000 		.4byte	.LASF15
 1975 00b0 06       		.uleb128 0x6
 1976 00b1 01050000 		.4byte	.LASF16
 1977 00b5 01       		.byte	0x1
 1978 00b6 26       		.byte	0x26
 1979 00b7 00000000 		.4byte	.LFB2
 1980 00bb 40000000 		.4byte	.LFE2-.LFB2
 1981 00bf 01       		.uleb128 0x1
 1982 00c0 9C       		.byte	0x9c
 1983 00c1 07       		.uleb128 0x7
 1984 00c2 94020000 		.4byte	.LASF18
 1985 00c6 01       		.byte	0x1
 1986 00c7 B1       		.byte	0xb1
 1987 00c8 00000000 		.4byte	.LFB3
 1988 00cc 38000000 		.4byte	.LFE3-.LFB3
 1989 00d0 01       		.uleb128 0x1
 1990 00d1 9C       		.byte	0x9c
 1991 00d2 E5000000 		.4byte	0xe5
 1992 00d6 08       		.uleb128 0x8
 1993 00d7 86040000 		.4byte	.LASF20
 1994 00db 01       		.byte	0x1
 1995 00dc B3       		.byte	0xb3
 1996 00dd 6B000000 		.4byte	0x6b
 1997 00e1 02       		.uleb128 0x2
 1998 00e2 91       		.byte	0x91
 1999 00e3 6F       		.sleb128 -17
 2000 00e4 00       		.byte	0
 2001 00e5 06       		.uleb128 0x6
 2002 00e6 72030000 		.4byte	.LASF17
 2003 00ea 01       		.byte	0x1
 2004 00eb E6       		.byte	0xe6
 2005 00ec 00000000 		.4byte	.LFB4
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 61


 2006 00f0 24000000 		.4byte	.LFE4-.LFB4
 2007 00f4 01       		.uleb128 0x1
 2008 00f5 9C       		.byte	0x9c
 2009 00f6 09       		.uleb128 0x9
 2010 00f7 1D030000 		.4byte	.LASF19
 2011 00fb 01       		.byte	0x1
 2012 00fc 0001     		.2byte	0x100
 2013 00fe 00000000 		.4byte	.LFB5
 2014 0102 30000000 		.4byte	.LFE5-.LFB5
 2015 0106 01       		.uleb128 0x1
 2016 0107 9C       		.byte	0x9c
 2017 0108 1C010000 		.4byte	0x11c
 2018 010c 0A       		.uleb128 0xa
 2019 010d 86040000 		.4byte	.LASF20
 2020 0111 01       		.byte	0x1
 2021 0112 0201     		.2byte	0x102
 2022 0114 6B000000 		.4byte	0x6b
 2023 0118 02       		.uleb128 0x2
 2024 0119 91       		.byte	0x91
 2025 011a 6F       		.sleb128 -17
 2026 011b 00       		.byte	0
 2027 011c 09       		.uleb128 0x9
 2028 011d 9E050000 		.4byte	.LASF21
 2029 0121 01       		.byte	0x1
 2030 0122 2501     		.2byte	0x125
 2031 0124 00000000 		.4byte	.LFB6
 2032 0128 48000000 		.4byte	.LFE6-.LFB6
 2033 012c 01       		.uleb128 0x1
 2034 012d 9C       		.byte	0x9c
 2035 012e 51010000 		.4byte	0x151
 2036 0132 0B       		.uleb128 0xb
 2037 0133 16040000 		.4byte	.LASF23
 2038 0137 01       		.byte	0x1
 2039 0138 2501     		.2byte	0x125
 2040 013a 77000000 		.4byte	0x77
 2041 013e 02       		.uleb128 0x2
 2042 013f 91       		.byte	0x91
 2043 0140 64       		.sleb128 -28
 2044 0141 0A       		.uleb128 0xa
 2045 0142 86040000 		.4byte	.LASF20
 2046 0146 01       		.byte	0x1
 2047 0147 2701     		.2byte	0x127
 2048 0149 6B000000 		.4byte	0x6b
 2049 014d 02       		.uleb128 0x2
 2050 014e 91       		.byte	0x91
 2051 014f 6F       		.sleb128 -17
 2052 0150 00       		.byte	0
 2053 0151 09       		.uleb128 0x9
 2054 0152 1C020000 		.4byte	.LASF22
 2055 0156 01       		.byte	0x1
 2056 0157 4601     		.2byte	0x146
 2057 0159 00000000 		.4byte	.LFB7
 2058 015d 48000000 		.4byte	.LFE7-.LFB7
 2059 0161 01       		.uleb128 0x1
 2060 0162 9C       		.byte	0x9c
 2061 0163 86010000 		.4byte	0x186
 2062 0167 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 62


 2063 0168 6A000000 		.4byte	.LASF24
 2064 016c 01       		.byte	0x1
 2065 016d 4601     		.2byte	0x146
 2066 016f 77000000 		.4byte	0x77
 2067 0173 02       		.uleb128 0x2
 2068 0174 91       		.byte	0x91
 2069 0175 64       		.sleb128 -28
 2070 0176 0A       		.uleb128 0xa
 2071 0177 86040000 		.4byte	.LASF20
 2072 017b 01       		.byte	0x1
 2073 017c 4801     		.2byte	0x148
 2074 017e 6B000000 		.4byte	0x6b
 2075 0182 02       		.uleb128 0x2
 2076 0183 91       		.byte	0x91
 2077 0184 6F       		.sleb128 -17
 2078 0185 00       		.byte	0
 2079 0186 09       		.uleb128 0x9
 2080 0187 AB020000 		.4byte	.LASF25
 2081 018b 01       		.byte	0x1
 2082 018c 6B01     		.2byte	0x16b
 2083 018e 00000000 		.4byte	.LFB8
 2084 0192 48000000 		.4byte	.LFE8-.LFB8
 2085 0196 01       		.uleb128 0x1
 2086 0197 9C       		.byte	0x9c
 2087 0198 BB010000 		.4byte	0x1bb
 2088 019c 0B       		.uleb128 0xb
 2089 019d 68030000 		.4byte	.LASF26
 2090 01a1 01       		.byte	0x1
 2091 01a2 6B01     		.2byte	0x16b
 2092 01a4 77000000 		.4byte	0x77
 2093 01a8 02       		.uleb128 0x2
 2094 01a9 91       		.byte	0x91
 2095 01aa 64       		.sleb128 -28
 2096 01ab 0A       		.uleb128 0xa
 2097 01ac 86040000 		.4byte	.LASF20
 2098 01b0 01       		.byte	0x1
 2099 01b1 6D01     		.2byte	0x16d
 2100 01b3 6B000000 		.4byte	0x6b
 2101 01b7 02       		.uleb128 0x2
 2102 01b8 91       		.byte	0x91
 2103 01b9 6F       		.sleb128 -17
 2104 01ba 00       		.byte	0
 2105 01bb 09       		.uleb128 0x9
 2106 01bc D0000000 		.4byte	.LASF27
 2107 01c0 01       		.byte	0x1
 2108 01c1 8B01     		.2byte	0x18b
 2109 01c3 00000000 		.4byte	.LFB9
 2110 01c7 4C000000 		.4byte	.LFE9-.LFB9
 2111 01cb 01       		.uleb128 0x1
 2112 01cc 9C       		.byte	0x9c
 2113 01cd F0010000 		.4byte	0x1f0
 2114 01d1 0B       		.uleb128 0xb
 2115 01d2 61020000 		.4byte	.LASF28
 2116 01d6 01       		.byte	0x1
 2117 01d7 8B01     		.2byte	0x18b
 2118 01d9 77000000 		.4byte	0x77
 2119 01dd 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 63


 2120 01de 91       		.byte	0x91
 2121 01df 64       		.sleb128 -28
 2122 01e0 0A       		.uleb128 0xa
 2123 01e1 86040000 		.4byte	.LASF20
 2124 01e5 01       		.byte	0x1
 2125 01e6 8D01     		.2byte	0x18d
 2126 01e8 6B000000 		.4byte	0x6b
 2127 01ec 02       		.uleb128 0x2
 2128 01ed 91       		.byte	0x91
 2129 01ee 6F       		.sleb128 -17
 2130 01ef 00       		.byte	0
 2131 01f0 0C       		.uleb128 0xc
 2132 01f1 5B010000 		.4byte	.LASF29
 2133 01f5 01       		.byte	0x1
 2134 01f6 C101     		.2byte	0x1c1
 2135 01f8 00000000 		.4byte	.LFB10
 2136 01fc 1C000000 		.4byte	.LFE10-.LFB10
 2137 0200 01       		.uleb128 0x1
 2138 0201 9C       		.byte	0x9c
 2139 0202 16020000 		.4byte	0x216
 2140 0206 0B       		.uleb128 0xb
 2141 0207 E7010000 		.4byte	.LASF30
 2142 020b 01       		.byte	0x1
 2143 020c C101     		.2byte	0x1c1
 2144 020e 77000000 		.4byte	0x77
 2145 0212 02       		.uleb128 0x2
 2146 0213 91       		.byte	0x91
 2147 0214 74       		.sleb128 -12
 2148 0215 00       		.byte	0
 2149 0216 09       		.uleb128 0x9
 2150 0217 F2050000 		.4byte	.LASF31
 2151 021b 01       		.byte	0x1
 2152 021c E501     		.2byte	0x1e5
 2153 021e 00000000 		.4byte	.LFB11
 2154 0222 48000000 		.4byte	.LFE11-.LFB11
 2155 0226 01       		.uleb128 0x1
 2156 0227 9C       		.byte	0x9c
 2157 0228 4B020000 		.4byte	0x24b
 2158 022c 0B       		.uleb128 0xb
 2159 022d FC020000 		.4byte	.LASF32
 2160 0231 01       		.byte	0x1
 2161 0232 E501     		.2byte	0x1e5
 2162 0234 77000000 		.4byte	0x77
 2163 0238 02       		.uleb128 0x2
 2164 0239 91       		.byte	0x91
 2165 023a 64       		.sleb128 -28
 2166 023b 0A       		.uleb128 0xa
 2167 023c 86040000 		.4byte	.LASF20
 2168 0240 01       		.byte	0x1
 2169 0241 E701     		.2byte	0x1e7
 2170 0243 6B000000 		.4byte	0x6b
 2171 0247 02       		.uleb128 0x2
 2172 0248 91       		.byte	0x91
 2173 0249 6F       		.sleb128 -17
 2174 024a 00       		.byte	0
 2175 024b 09       		.uleb128 0x9
 2176 024c 46020000 		.4byte	.LASF33
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 64


 2177 0250 01       		.byte	0x1
 2178 0251 0702     		.2byte	0x207
 2179 0253 00000000 		.4byte	.LFB12
 2180 0257 48000000 		.4byte	.LFE12-.LFB12
 2181 025b 01       		.uleb128 0x1
 2182 025c 9C       		.byte	0x9c
 2183 025d 80020000 		.4byte	0x280
 2184 0261 0B       		.uleb128 0xb
 2185 0262 A9030000 		.4byte	.LASF34
 2186 0266 01       		.byte	0x1
 2187 0267 0702     		.2byte	0x207
 2188 0269 77000000 		.4byte	0x77
 2189 026d 02       		.uleb128 0x2
 2190 026e 91       		.byte	0x91
 2191 026f 64       		.sleb128 -28
 2192 0270 0A       		.uleb128 0xa
 2193 0271 86040000 		.4byte	.LASF20
 2194 0275 01       		.byte	0x1
 2195 0276 0902     		.2byte	0x209
 2196 0278 6B000000 		.4byte	0x6b
 2197 027c 02       		.uleb128 0x2
 2198 027d 91       		.byte	0x91
 2199 027e 6F       		.sleb128 -17
 2200 027f 00       		.byte	0
 2201 0280 09       		.uleb128 0x9
 2202 0281 13010000 		.4byte	.LASF35
 2203 0285 01       		.byte	0x1
 2204 0286 2802     		.2byte	0x228
 2205 0288 00000000 		.4byte	.LFB13
 2206 028c 4C000000 		.4byte	.LFE13-.LFB13
 2207 0290 01       		.uleb128 0x1
 2208 0291 9C       		.byte	0x9c
 2209 0292 B5020000 		.4byte	0x2b5
 2210 0296 0B       		.uleb128 0xb
 2211 0297 70010000 		.4byte	.LASF36
 2212 029b 01       		.byte	0x1
 2213 029c 2802     		.2byte	0x228
 2214 029e 77000000 		.4byte	0x77
 2215 02a2 02       		.uleb128 0x2
 2216 02a3 91       		.byte	0x91
 2217 02a4 64       		.sleb128 -28
 2218 02a5 0A       		.uleb128 0xa
 2219 02a6 86040000 		.4byte	.LASF20
 2220 02aa 01       		.byte	0x1
 2221 02ab 2A02     		.2byte	0x22a
 2222 02ad 6B000000 		.4byte	0x6b
 2223 02b1 02       		.uleb128 0x2
 2224 02b2 91       		.byte	0x91
 2225 02b3 6F       		.sleb128 -17
 2226 02b4 00       		.byte	0
 2227 02b5 09       		.uleb128 0x9
 2228 02b6 79010000 		.4byte	.LASF37
 2229 02ba 01       		.byte	0x1
 2230 02bb 4902     		.2byte	0x249
 2231 02bd 00000000 		.4byte	.LFB14
 2232 02c1 48000000 		.4byte	.LFE14-.LFB14
 2233 02c5 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 65


 2234 02c6 9C       		.byte	0x9c
 2235 02c7 EA020000 		.4byte	0x2ea
 2236 02cb 0B       		.uleb128 0xb
 2237 02cc 0E010000 		.4byte	.LASF38
 2238 02d0 01       		.byte	0x1
 2239 02d1 4902     		.2byte	0x249
 2240 02d3 77000000 		.4byte	0x77
 2241 02d7 02       		.uleb128 0x2
 2242 02d8 91       		.byte	0x91
 2243 02d9 64       		.sleb128 -28
 2244 02da 0A       		.uleb128 0xa
 2245 02db 86040000 		.4byte	.LASF20
 2246 02df 01       		.byte	0x1
 2247 02e0 4B02     		.2byte	0x24b
 2248 02e2 6B000000 		.4byte	0x6b
 2249 02e6 02       		.uleb128 0x2
 2250 02e7 91       		.byte	0x91
 2251 02e8 6F       		.sleb128 -17
 2252 02e9 00       		.byte	0
 2253 02ea 0C       		.uleb128 0xc
 2254 02eb B9000000 		.4byte	.LASF39
 2255 02ef 01       		.byte	0x1
 2256 02f0 6702     		.2byte	0x267
 2257 02f2 00000000 		.4byte	.LFB15
 2258 02f6 1C000000 		.4byte	.LFE15-.LFB15
 2259 02fa 01       		.uleb128 0x1
 2260 02fb 9C       		.byte	0x9c
 2261 02fc 10030000 		.4byte	0x310
 2262 0300 0B       		.uleb128 0xb
 2263 0301 00000000 		.4byte	.LASF40
 2264 0305 01       		.byte	0x1
 2265 0306 6702     		.2byte	0x267
 2266 0308 77000000 		.4byte	0x77
 2267 030c 02       		.uleb128 0x2
 2268 030d 91       		.byte	0x91
 2269 030e 74       		.sleb128 -12
 2270 030f 00       		.byte	0
 2271 0310 0D       		.uleb128 0xd
 2272 0311 2C030000 		.4byte	.LASF45
 2273 0315 01       		.byte	0x1
 2274 0316 7B02     		.2byte	0x27b
 2275 0318 77000000 		.4byte	0x77
 2276 031c 00000000 		.4byte	.LFB16
 2277 0320 18000000 		.4byte	.LFE16-.LFB16
 2278 0324 01       		.uleb128 0x1
 2279 0325 9C       		.byte	0x9c
 2280 0326 09       		.uleb128 0x9
 2281 0327 82030000 		.4byte	.LASF41
 2282 032b 01       		.byte	0x1
 2283 032c 9802     		.2byte	0x298
 2284 032e 00000000 		.4byte	.LFB17
 2285 0332 48000000 		.4byte	.LFE17-.LFB17
 2286 0336 01       		.uleb128 0x1
 2287 0337 9C       		.byte	0x9c
 2288 0338 5B030000 		.4byte	0x35b
 2289 033c 0B       		.uleb128 0xb
 2290 033d 1B040000 		.4byte	.LASF42
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 66


 2291 0341 01       		.byte	0x1
 2292 0342 9802     		.2byte	0x298
 2293 0344 77000000 		.4byte	0x77
 2294 0348 02       		.uleb128 0x2
 2295 0349 91       		.byte	0x91
 2296 034a 64       		.sleb128 -28
 2297 034b 0A       		.uleb128 0xa
 2298 034c 86040000 		.4byte	.LASF20
 2299 0350 01       		.byte	0x1
 2300 0351 9A02     		.2byte	0x29a
 2301 0353 6B000000 		.4byte	0x6b
 2302 0357 02       		.uleb128 0x2
 2303 0358 91       		.byte	0x91
 2304 0359 6F       		.sleb128 -17
 2305 035a 00       		.byte	0
 2306 035b 0C       		.uleb128 0xc
 2307 035c 27040000 		.4byte	.LASF43
 2308 0360 01       		.byte	0x1
 2309 0361 B502     		.2byte	0x2b5
 2310 0363 00000000 		.4byte	.LFB18
 2311 0367 1C000000 		.4byte	.LFE18-.LFB18
 2312 036b 01       		.uleb128 0x1
 2313 036c 9C       		.byte	0x9c
 2314 036d 81030000 		.4byte	0x381
 2315 0371 0B       		.uleb128 0xb
 2316 0372 33000000 		.4byte	.LASF44
 2317 0376 01       		.byte	0x1
 2318 0377 B502     		.2byte	0x2b5
 2319 0379 77000000 		.4byte	0x77
 2320 037d 02       		.uleb128 0x2
 2321 037e 91       		.byte	0x91
 2322 037f 74       		.sleb128 -12
 2323 0380 00       		.byte	0
 2324 0381 0D       		.uleb128 0xd
 2325 0382 8A000000 		.4byte	.LASF46
 2326 0386 01       		.byte	0x1
 2327 0387 C902     		.2byte	0x2c9
 2328 0389 77000000 		.4byte	0x77
 2329 038d 00000000 		.4byte	.LFB19
 2330 0391 18000000 		.4byte	.LFE19-.LFB19
 2331 0395 01       		.uleb128 0x1
 2332 0396 9C       		.byte	0x9c
 2333 0397 09       		.uleb128 0x9
 2334 0398 B0040000 		.4byte	.LASF47
 2335 039c 01       		.byte	0x1
 2336 039d E302     		.2byte	0x2e3
 2337 039f 00000000 		.4byte	.LFB20
 2338 03a3 48000000 		.4byte	.LFE20-.LFB20
 2339 03a7 01       		.uleb128 0x1
 2340 03a8 9C       		.byte	0x9c
 2341 03a9 CC030000 		.4byte	0x3cc
 2342 03ad 0B       		.uleb128 0xb
 2343 03ae DF030000 		.4byte	.LASF48
 2344 03b2 01       		.byte	0x1
 2345 03b3 E302     		.2byte	0x2e3
 2346 03b5 77000000 		.4byte	0x77
 2347 03b9 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 67


 2348 03ba 91       		.byte	0x91
 2349 03bb 64       		.sleb128 -28
 2350 03bc 0A       		.uleb128 0xa
 2351 03bd 86040000 		.4byte	.LASF20
 2352 03c1 01       		.byte	0x1
 2353 03c2 E502     		.2byte	0x2e5
 2354 03c4 6B000000 		.4byte	0x6b
 2355 03c8 02       		.uleb128 0x2
 2356 03c9 91       		.byte	0x91
 2357 03ca 6F       		.sleb128 -17
 2358 03cb 00       		.byte	0
 2359 03cc 0C       		.uleb128 0xc
 2360 03cd 03020000 		.4byte	.LASF49
 2361 03d1 01       		.byte	0x1
 2362 03d2 FE02     		.2byte	0x2fe
 2363 03d4 00000000 		.4byte	.LFB21
 2364 03d8 1C000000 		.4byte	.LFE21-.LFB21
 2365 03dc 01       		.uleb128 0x1
 2366 03dd 9C       		.byte	0x9c
 2367 03de F2030000 		.4byte	0x3f2
 2368 03e2 0B       		.uleb128 0xb
 2369 03e3 5F040000 		.4byte	.LASF50
 2370 03e7 01       		.byte	0x1
 2371 03e8 FE02     		.2byte	0x2fe
 2372 03ea 77000000 		.4byte	0x77
 2373 03ee 02       		.uleb128 0x2
 2374 03ef 91       		.byte	0x91
 2375 03f0 74       		.sleb128 -12
 2376 03f1 00       		.byte	0
 2377 03f2 0D       		.uleb128 0xd
 2378 03f3 C2020000 		.4byte	.LASF51
 2379 03f7 01       		.byte	0x1
 2380 03f8 1203     		.2byte	0x312
 2381 03fa 77000000 		.4byte	0x77
 2382 03fe 00000000 		.4byte	.LFB22
 2383 0402 18000000 		.4byte	.LFE22-.LFB22
 2384 0406 01       		.uleb128 0x1
 2385 0407 9C       		.byte	0x9c
 2386 0408 09       		.uleb128 0x9
 2387 0409 2C010000 		.4byte	.LASF52
 2388 040d 01       		.byte	0x1
 2389 040e 2C03     		.2byte	0x32c
 2390 0410 00000000 		.4byte	.LFB23
 2391 0414 48000000 		.4byte	.LFE23-.LFB23
 2392 0418 01       		.uleb128 0x1
 2393 0419 9C       		.byte	0x9c
 2394 041a 3D040000 		.4byte	0x43d
 2395 041e 0B       		.uleb128 0xb
 2396 041f DF030000 		.4byte	.LASF48
 2397 0423 01       		.byte	0x1
 2398 0424 2C03     		.2byte	0x32c
 2399 0426 77000000 		.4byte	0x77
 2400 042a 02       		.uleb128 0x2
 2401 042b 91       		.byte	0x91
 2402 042c 64       		.sleb128 -28
 2403 042d 0A       		.uleb128 0xa
 2404 042e 86040000 		.4byte	.LASF20
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 68


 2405 0432 01       		.byte	0x1
 2406 0433 2E03     		.2byte	0x32e
 2407 0435 6B000000 		.4byte	0x6b
 2408 0439 02       		.uleb128 0x2
 2409 043a 91       		.byte	0x91
 2410 043b 6F       		.sleb128 -17
 2411 043c 00       		.byte	0
 2412 043d 0C       		.uleb128 0xc
 2413 043e 1C000000 		.4byte	.LASF53
 2414 0442 01       		.byte	0x1
 2415 0443 5103     		.2byte	0x351
 2416 0445 00000000 		.4byte	.LFB24
 2417 0449 1C000000 		.4byte	.LFE24-.LFB24
 2418 044d 01       		.uleb128 0x1
 2419 044e 9C       		.byte	0x9c
 2420 044f 63040000 		.4byte	0x463
 2421 0453 0B       		.uleb128 0xb
 2422 0454 42030000 		.4byte	.LASF54
 2423 0458 01       		.byte	0x1
 2424 0459 5103     		.2byte	0x351
 2425 045b 77000000 		.4byte	0x77
 2426 045f 02       		.uleb128 0x2
 2427 0460 91       		.byte	0x91
 2428 0461 74       		.sleb128 -12
 2429 0462 00       		.byte	0
 2430 0463 0D       		.uleb128 0xd
 2431 0464 30020000 		.4byte	.LASF55
 2432 0468 01       		.byte	0x1
 2433 0469 8403     		.2byte	0x384
 2434 046b 77000000 		.4byte	0x77
 2435 046f 00000000 		.4byte	.LFB25
 2436 0473 18000000 		.4byte	.LFE25-.LFB25
 2437 0477 01       		.uleb128 0x1
 2438 0478 9C       		.byte	0x9c
 2439 0479 0C       		.uleb128 0xc
 2440 047a B3010000 		.4byte	.LASF56
 2441 047e 01       		.byte	0x1
 2442 047f BA03     		.2byte	0x3ba
 2443 0481 00000000 		.4byte	.LFB26
 2444 0485 1C000000 		.4byte	.LFE26-.LFB26
 2445 0489 01       		.uleb128 0x1
 2446 048a 9C       		.byte	0x9c
 2447 048b 9F040000 		.4byte	0x49f
 2448 048f 0B       		.uleb128 0xb
 2449 0490 3D040000 		.4byte	.LASF57
 2450 0494 01       		.byte	0x1
 2451 0495 BA03     		.2byte	0x3ba
 2452 0497 77000000 		.4byte	0x77
 2453 049b 02       		.uleb128 0x2
 2454 049c 91       		.byte	0x91
 2455 049d 74       		.sleb128 -12
 2456 049e 00       		.byte	0
 2457 049f 0D       		.uleb128 0xd
 2458 04a0 97040000 		.4byte	.LASF58
 2459 04a4 01       		.byte	0x1
 2460 04a5 E803     		.2byte	0x3e8
 2461 04a7 77000000 		.4byte	0x77
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 69


 2462 04ab 00000000 		.4byte	.LFB27
 2463 04af 18000000 		.4byte	.LFE27-.LFB27
 2464 04b3 01       		.uleb128 0x1
 2465 04b4 9C       		.byte	0x9c
 2466 04b5 0D       		.uleb128 0xd
 2467 04b6 90010000 		.4byte	.LASF59
 2468 04ba 01       		.byte	0x1
 2469 04bb 1604     		.2byte	0x416
 2470 04bd 77000000 		.4byte	0x77
 2471 04c1 00000000 		.4byte	.LFB28
 2472 04c5 18000000 		.4byte	.LFE28-.LFB28
 2473 04c9 01       		.uleb128 0x1
 2474 04ca 9C       		.byte	0x9c
 2475 04cb 0D       		.uleb128 0xd
 2476 04cc DA020000 		.4byte	.LASF60
 2477 04d0 01       		.byte	0x1
 2478 04d1 2B04     		.2byte	0x42b
 2479 04d3 77000000 		.4byte	0x77
 2480 04d7 00000000 		.4byte	.LFB29
 2481 04db 18000000 		.4byte	.LFE29-.LFB29
 2482 04df 01       		.uleb128 0x1
 2483 04e0 9C       		.byte	0x9c
 2484 04e1 09       		.uleb128 0x9
 2485 04e2 F8030000 		.4byte	.LASF61
 2486 04e6 01       		.byte	0x1
 2487 04e7 4604     		.2byte	0x446
 2488 04e9 00000000 		.4byte	.LFB30
 2489 04ed 44000000 		.4byte	.LFE30-.LFB30
 2490 04f1 01       		.uleb128 0x1
 2491 04f2 9C       		.byte	0x9c
 2492 04f3 16050000 		.4byte	0x516
 2493 04f7 0B       		.uleb128 0xb
 2494 04f8 02010000 		.4byte	.LASF62
 2495 04fc 01       		.byte	0x1
 2496 04fd 4604     		.2byte	0x446
 2497 04ff 77000000 		.4byte	0x77
 2498 0503 02       		.uleb128 0x2
 2499 0504 91       		.byte	0x91
 2500 0505 64       		.sleb128 -28
 2501 0506 0A       		.uleb128 0xa
 2502 0507 86040000 		.4byte	.LASF20
 2503 050b 01       		.byte	0x1
 2504 050c 4804     		.2byte	0x448
 2505 050e 6B000000 		.4byte	0x6b
 2506 0512 02       		.uleb128 0x2
 2507 0513 91       		.byte	0x91
 2508 0514 6F       		.sleb128 -17
 2509 0515 00       		.byte	0
 2510 0516 09       		.uleb128 0x9
 2511 0517 4A030000 		.4byte	.LASF63
 2512 051b 01       		.byte	0x1
 2513 051c 6704     		.2byte	0x467
 2514 051e 00000000 		.4byte	.LFB31
 2515 0522 44000000 		.4byte	.LFE31-.LFB31
 2516 0526 01       		.uleb128 0x1
 2517 0527 9C       		.byte	0x9c
 2518 0528 4B050000 		.4byte	0x54b
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 70


 2519 052c 0B       		.uleb128 0xb
 2520 052d 02010000 		.4byte	.LASF62
 2521 0531 01       		.byte	0x1
 2522 0532 6704     		.2byte	0x467
 2523 0534 77000000 		.4byte	0x77
 2524 0538 02       		.uleb128 0x2
 2525 0539 91       		.byte	0x91
 2526 053a 64       		.sleb128 -28
 2527 053b 0A       		.uleb128 0xa
 2528 053c 86040000 		.4byte	.LASF20
 2529 0540 01       		.byte	0x1
 2530 0541 6904     		.2byte	0x469
 2531 0543 6B000000 		.4byte	0x6b
 2532 0547 02       		.uleb128 0x2
 2533 0548 91       		.byte	0x91
 2534 0549 6F       		.sleb128 -17
 2535 054a 00       		.byte	0
 2536 054b 09       		.uleb128 0x9
 2537 054c 48040000 		.4byte	.LASF64
 2538 0550 01       		.byte	0x1
 2539 0551 8804     		.2byte	0x488
 2540 0553 00000000 		.4byte	.LFB32
 2541 0557 48000000 		.4byte	.LFE32-.LFB32
 2542 055b 01       		.uleb128 0x1
 2543 055c 9C       		.byte	0x9c
 2544 055d 80050000 		.4byte	0x580
 2545 0561 0B       		.uleb128 0xb
 2546 0562 02010000 		.4byte	.LASF62
 2547 0566 01       		.byte	0x1
 2548 0567 8804     		.2byte	0x488
 2549 0569 77000000 		.4byte	0x77
 2550 056d 02       		.uleb128 0x2
 2551 056e 91       		.byte	0x91
 2552 056f 64       		.sleb128 -28
 2553 0570 0A       		.uleb128 0xa
 2554 0571 86040000 		.4byte	.LASF20
 2555 0575 01       		.byte	0x1
 2556 0576 8A04     		.2byte	0x48a
 2557 0578 6B000000 		.4byte	0x6b
 2558 057c 02       		.uleb128 0x2
 2559 057d 91       		.byte	0x91
 2560 057e 6F       		.sleb128 -17
 2561 057f 00       		.byte	0
 2562 0580 09       		.uleb128 0x9
 2563 0581 06000000 		.4byte	.LASF65
 2564 0585 01       		.byte	0x1
 2565 0586 A804     		.2byte	0x4a8
 2566 0588 00000000 		.4byte	.LFB33
 2567 058c 44000000 		.4byte	.LFE33-.LFB33
 2568 0590 01       		.uleb128 0x1
 2569 0591 9C       		.byte	0x9c
 2570 0592 B5050000 		.4byte	0x5b5
 2571 0596 0B       		.uleb128 0xb
 2572 0597 02010000 		.4byte	.LASF62
 2573 059b 01       		.byte	0x1
 2574 059c A804     		.2byte	0x4a8
 2575 059e 77000000 		.4byte	0x77
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 71


 2576 05a2 02       		.uleb128 0x2
 2577 05a3 91       		.byte	0x91
 2578 05a4 64       		.sleb128 -28
 2579 05a5 0A       		.uleb128 0xa
 2580 05a6 86040000 		.4byte	.LASF20
 2581 05aa 01       		.byte	0x1
 2582 05ab AA04     		.2byte	0x4aa
 2583 05ad 6B000000 		.4byte	0x6b
 2584 05b1 02       		.uleb128 0x2
 2585 05b2 91       		.byte	0x91
 2586 05b3 6F       		.sleb128 -17
 2587 05b4 00       		.byte	0
 2588 05b5 09       		.uleb128 0x9
 2589 05b6 B0050000 		.4byte	.LASF66
 2590 05ba 01       		.byte	0x1
 2591 05bb C904     		.2byte	0x4c9
 2592 05bd 00000000 		.4byte	.LFB34
 2593 05c1 44000000 		.4byte	.LFE34-.LFB34
 2594 05c5 01       		.uleb128 0x1
 2595 05c6 9C       		.byte	0x9c
 2596 05c7 EA050000 		.4byte	0x5ea
 2597 05cb 0B       		.uleb128 0xb
 2598 05cc 02010000 		.4byte	.LASF62
 2599 05d0 01       		.byte	0x1
 2600 05d1 C904     		.2byte	0x4c9
 2601 05d3 77000000 		.4byte	0x77
 2602 05d7 02       		.uleb128 0x2
 2603 05d8 91       		.byte	0x91
 2604 05d9 64       		.sleb128 -28
 2605 05da 0A       		.uleb128 0xa
 2606 05db 86040000 		.4byte	.LASF20
 2607 05df 01       		.byte	0x1
 2608 05e0 CB04     		.2byte	0x4cb
 2609 05e2 6B000000 		.4byte	0x6b
 2610 05e6 02       		.uleb128 0x2
 2611 05e7 91       		.byte	0x91
 2612 05e8 6F       		.sleb128 -17
 2613 05e9 00       		.byte	0
 2614 05ea 09       		.uleb128 0x9
 2615 05eb 51000000 		.4byte	.LASF67
 2616 05ef 01       		.byte	0x1
 2617 05f0 F104     		.2byte	0x4f1
 2618 05f2 00000000 		.4byte	.LFB35
 2619 05f6 38000000 		.4byte	.LFE35-.LFB35
 2620 05fa 01       		.uleb128 0x1
 2621 05fb 9C       		.byte	0x9c
 2622 05fc 2E060000 		.4byte	0x62e
 2623 0600 0B       		.uleb128 0xb
 2624 0601 0E010000 		.4byte	.LASF38
 2625 0605 01       		.byte	0x1
 2626 0606 F104     		.2byte	0x4f1
 2627 0608 77000000 		.4byte	0x77
 2628 060c 02       		.uleb128 0x2
 2629 060d 91       		.byte	0x91
 2630 060e 64       		.sleb128 -28
 2631 060f 0B       		.uleb128 0xb
 2632 0610 CD010000 		.4byte	.LASF68
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 72


 2633 0614 01       		.byte	0x1
 2634 0615 F104     		.2byte	0x4f1
 2635 0617 77000000 		.4byte	0x77
 2636 061b 02       		.uleb128 0x2
 2637 061c 91       		.byte	0x91
 2638 061d 60       		.sleb128 -32
 2639 061e 0A       		.uleb128 0xa
 2640 061f 86040000 		.4byte	.LASF20
 2641 0623 01       		.byte	0x1
 2642 0624 F304     		.2byte	0x4f3
 2643 0626 6B000000 		.4byte	0x6b
 2644 062a 02       		.uleb128 0x2
 2645 062b 91       		.byte	0x91
 2646 062c 6F       		.sleb128 -17
 2647 062d 00       		.byte	0
 2648 062e 0D       		.uleb128 0xd
 2649 062f EC040000 		.4byte	.LASF69
 2650 0633 01       		.byte	0x1
 2651 0634 0E05     		.2byte	0x50e
 2652 0636 77000000 		.4byte	0x77
 2653 063a 00000000 		.4byte	.LFB36
 2654 063e 20000000 		.4byte	.LFE36-.LFB36
 2655 0642 01       		.uleb128 0x1
 2656 0643 9C       		.byte	0x9c
 2657 0644 0C       		.uleb128 0xc
 2658 0645 BA030000 		.4byte	.LASF70
 2659 0649 01       		.byte	0x1
 2660 064a 2705     		.2byte	0x527
 2661 064c 00000000 		.4byte	.LFB37
 2662 0650 18000000 		.4byte	.LFE37-.LFB37
 2663 0654 01       		.uleb128 0x1
 2664 0655 9C       		.byte	0x9c
 2665 0656 6A060000 		.4byte	0x66a
 2666 065a 0B       		.uleb128 0xb
 2667 065b EA030000 		.4byte	.LASF71
 2668 065f 01       		.byte	0x1
 2669 0660 2705     		.2byte	0x527
 2670 0662 77000000 		.4byte	0x77
 2671 0666 02       		.uleb128 0x2
 2672 0667 91       		.byte	0x91
 2673 0668 74       		.sleb128 -12
 2674 0669 00       		.byte	0
 2675 066a 0D       		.uleb128 0xd
 2676 066b C9040000 		.4byte	.LASF72
 2677 066f 01       		.byte	0x1
 2678 0670 3E05     		.2byte	0x53e
 2679 0672 77000000 		.4byte	0x77
 2680 0676 00000000 		.4byte	.LFB38
 2681 067a 14000000 		.4byte	.LFE38-.LFB38
 2682 067e 01       		.uleb128 0x1
 2683 067f 9C       		.byte	0x9c
 2684 0680 0D       		.uleb128 0xd
 2685 0681 69040000 		.4byte	.LASF73
 2686 0685 01       		.byte	0x1
 2687 0686 5505     		.2byte	0x555
 2688 0688 77000000 		.4byte	0x77
 2689 068c 00000000 		.4byte	.LFB39
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 73


 2690 0690 14000000 		.4byte	.LFE39-.LFB39
 2691 0694 01       		.uleb128 0x1
 2692 0695 9C       		.byte	0x9c
 2693 0696 0C       		.uleb128 0xc
 2694 0697 71000000 		.4byte	.LASF74
 2695 069b 01       		.byte	0x1
 2696 069c 6C05     		.2byte	0x56c
 2697 069e 00000000 		.4byte	.LFB40
 2698 06a2 18000000 		.4byte	.LFE40-.LFB40
 2699 06a6 01       		.uleb128 0x1
 2700 06a7 9C       		.byte	0x9c
 2701 06a8 BC060000 		.4byte	0x6bc
 2702 06ac 0B       		.uleb128 0xb
 2703 06ad EA030000 		.4byte	.LASF71
 2704 06b1 01       		.byte	0x1
 2705 06b2 6C05     		.2byte	0x56c
 2706 06b4 77000000 		.4byte	0x77
 2707 06b8 02       		.uleb128 0x2
 2708 06b9 91       		.byte	0x91
 2709 06ba 74       		.sleb128 -12
 2710 06bb 00       		.byte	0
 2711 06bc 0C       		.uleb128 0xc
 2712 06bd 44010000 		.4byte	.LASF75
 2713 06c1 01       		.byte	0x1
 2714 06c2 8305     		.2byte	0x583
 2715 06c4 00000000 		.4byte	.LFB41
 2716 06c8 18000000 		.4byte	.LFE41-.LFB41
 2717 06cc 01       		.uleb128 0x1
 2718 06cd 9C       		.byte	0x9c
 2719 06ce E2060000 		.4byte	0x6e2
 2720 06d2 0B       		.uleb128 0xb
 2721 06d3 EA030000 		.4byte	.LASF71
 2722 06d7 01       		.byte	0x1
 2723 06d8 8305     		.2byte	0x583
 2724 06da 77000000 		.4byte	0x77
 2725 06de 02       		.uleb128 0x2
 2726 06df 91       		.byte	0x91
 2727 06e0 74       		.sleb128 -12
 2728 06e1 00       		.byte	0
 2729 06e2 0E       		.uleb128 0xe
 2730 06e3 0B030000 		.4byte	.LASF79
 2731 06e7 01       		.byte	0x1
 2732 06e8 15       		.byte	0x15
 2733 06e9 6B000000 		.4byte	0x6b
 2734 06ed 05       		.uleb128 0x5
 2735 06ee 03       		.byte	0x3
 2736 06ef 00000000 		.4byte	Timer_LED_initVar
 2737 06f3 00       		.byte	0
 2738              		.section	.debug_abbrev,"",%progbits
 2739              	.Ldebug_abbrev0:
 2740 0000 01       		.uleb128 0x1
 2741 0001 11       		.uleb128 0x11
 2742 0002 01       		.byte	0x1
 2743 0003 25       		.uleb128 0x25
 2744 0004 0E       		.uleb128 0xe
 2745 0005 13       		.uleb128 0x13
 2746 0006 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 74


 2747 0007 03       		.uleb128 0x3
 2748 0008 0E       		.uleb128 0xe
 2749 0009 1B       		.uleb128 0x1b
 2750 000a 0E       		.uleb128 0xe
 2751 000b 55       		.uleb128 0x55
 2752 000c 17       		.uleb128 0x17
 2753 000d 11       		.uleb128 0x11
 2754 000e 01       		.uleb128 0x1
 2755 000f 10       		.uleb128 0x10
 2756 0010 17       		.uleb128 0x17
 2757 0011 00       		.byte	0
 2758 0012 00       		.byte	0
 2759 0013 02       		.uleb128 0x2
 2760 0014 24       		.uleb128 0x24
 2761 0015 00       		.byte	0
 2762 0016 0B       		.uleb128 0xb
 2763 0017 0B       		.uleb128 0xb
 2764 0018 3E       		.uleb128 0x3e
 2765 0019 0B       		.uleb128 0xb
 2766 001a 03       		.uleb128 0x3
 2767 001b 0E       		.uleb128 0xe
 2768 001c 00       		.byte	0
 2769 001d 00       		.byte	0
 2770 001e 03       		.uleb128 0x3
 2771 001f 24       		.uleb128 0x24
 2772 0020 00       		.byte	0
 2773 0021 0B       		.uleb128 0xb
 2774 0022 0B       		.uleb128 0xb
 2775 0023 3E       		.uleb128 0x3e
 2776 0024 0B       		.uleb128 0xb
 2777 0025 03       		.uleb128 0x3
 2778 0026 08       		.uleb128 0x8
 2779 0027 00       		.byte	0
 2780 0028 00       		.byte	0
 2781 0029 04       		.uleb128 0x4
 2782 002a 16       		.uleb128 0x16
 2783 002b 00       		.byte	0
 2784 002c 03       		.uleb128 0x3
 2785 002d 0E       		.uleb128 0xe
 2786 002e 3A       		.uleb128 0x3a
 2787 002f 0B       		.uleb128 0xb
 2788 0030 3B       		.uleb128 0x3b
 2789 0031 05       		.uleb128 0x5
 2790 0032 49       		.uleb128 0x49
 2791 0033 13       		.uleb128 0x13
 2792 0034 00       		.byte	0
 2793 0035 00       		.byte	0
 2794 0036 05       		.uleb128 0x5
 2795 0037 35       		.uleb128 0x35
 2796 0038 00       		.byte	0
 2797 0039 49       		.uleb128 0x49
 2798 003a 13       		.uleb128 0x13
 2799 003b 00       		.byte	0
 2800 003c 00       		.byte	0
 2801 003d 06       		.uleb128 0x6
 2802 003e 2E       		.uleb128 0x2e
 2803 003f 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 75


 2804 0040 3F       		.uleb128 0x3f
 2805 0041 19       		.uleb128 0x19
 2806 0042 03       		.uleb128 0x3
 2807 0043 0E       		.uleb128 0xe
 2808 0044 3A       		.uleb128 0x3a
 2809 0045 0B       		.uleb128 0xb
 2810 0046 3B       		.uleb128 0x3b
 2811 0047 0B       		.uleb128 0xb
 2812 0048 27       		.uleb128 0x27
 2813 0049 19       		.uleb128 0x19
 2814 004a 11       		.uleb128 0x11
 2815 004b 01       		.uleb128 0x1
 2816 004c 12       		.uleb128 0x12
 2817 004d 06       		.uleb128 0x6
 2818 004e 40       		.uleb128 0x40
 2819 004f 18       		.uleb128 0x18
 2820 0050 9642     		.uleb128 0x2116
 2821 0052 19       		.uleb128 0x19
 2822 0053 00       		.byte	0
 2823 0054 00       		.byte	0
 2824 0055 07       		.uleb128 0x7
 2825 0056 2E       		.uleb128 0x2e
 2826 0057 01       		.byte	0x1
 2827 0058 3F       		.uleb128 0x3f
 2828 0059 19       		.uleb128 0x19
 2829 005a 03       		.uleb128 0x3
 2830 005b 0E       		.uleb128 0xe
 2831 005c 3A       		.uleb128 0x3a
 2832 005d 0B       		.uleb128 0xb
 2833 005e 3B       		.uleb128 0x3b
 2834 005f 0B       		.uleb128 0xb
 2835 0060 27       		.uleb128 0x27
 2836 0061 19       		.uleb128 0x19
 2837 0062 11       		.uleb128 0x11
 2838 0063 01       		.uleb128 0x1
 2839 0064 12       		.uleb128 0x12
 2840 0065 06       		.uleb128 0x6
 2841 0066 40       		.uleb128 0x40
 2842 0067 18       		.uleb128 0x18
 2843 0068 9642     		.uleb128 0x2116
 2844 006a 19       		.uleb128 0x19
 2845 006b 01       		.uleb128 0x1
 2846 006c 13       		.uleb128 0x13
 2847 006d 00       		.byte	0
 2848 006e 00       		.byte	0
 2849 006f 08       		.uleb128 0x8
 2850 0070 34       		.uleb128 0x34
 2851 0071 00       		.byte	0
 2852 0072 03       		.uleb128 0x3
 2853 0073 0E       		.uleb128 0xe
 2854 0074 3A       		.uleb128 0x3a
 2855 0075 0B       		.uleb128 0xb
 2856 0076 3B       		.uleb128 0x3b
 2857 0077 0B       		.uleb128 0xb
 2858 0078 49       		.uleb128 0x49
 2859 0079 13       		.uleb128 0x13
 2860 007a 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 76


 2861 007b 18       		.uleb128 0x18
 2862 007c 00       		.byte	0
 2863 007d 00       		.byte	0
 2864 007e 09       		.uleb128 0x9
 2865 007f 2E       		.uleb128 0x2e
 2866 0080 01       		.byte	0x1
 2867 0081 3F       		.uleb128 0x3f
 2868 0082 19       		.uleb128 0x19
 2869 0083 03       		.uleb128 0x3
 2870 0084 0E       		.uleb128 0xe
 2871 0085 3A       		.uleb128 0x3a
 2872 0086 0B       		.uleb128 0xb
 2873 0087 3B       		.uleb128 0x3b
 2874 0088 05       		.uleb128 0x5
 2875 0089 27       		.uleb128 0x27
 2876 008a 19       		.uleb128 0x19
 2877 008b 11       		.uleb128 0x11
 2878 008c 01       		.uleb128 0x1
 2879 008d 12       		.uleb128 0x12
 2880 008e 06       		.uleb128 0x6
 2881 008f 40       		.uleb128 0x40
 2882 0090 18       		.uleb128 0x18
 2883 0091 9642     		.uleb128 0x2116
 2884 0093 19       		.uleb128 0x19
 2885 0094 01       		.uleb128 0x1
 2886 0095 13       		.uleb128 0x13
 2887 0096 00       		.byte	0
 2888 0097 00       		.byte	0
 2889 0098 0A       		.uleb128 0xa
 2890 0099 34       		.uleb128 0x34
 2891 009a 00       		.byte	0
 2892 009b 03       		.uleb128 0x3
 2893 009c 0E       		.uleb128 0xe
 2894 009d 3A       		.uleb128 0x3a
 2895 009e 0B       		.uleb128 0xb
 2896 009f 3B       		.uleb128 0x3b
 2897 00a0 05       		.uleb128 0x5
 2898 00a1 49       		.uleb128 0x49
 2899 00a2 13       		.uleb128 0x13
 2900 00a3 02       		.uleb128 0x2
 2901 00a4 18       		.uleb128 0x18
 2902 00a5 00       		.byte	0
 2903 00a6 00       		.byte	0
 2904 00a7 0B       		.uleb128 0xb
 2905 00a8 05       		.uleb128 0x5
 2906 00a9 00       		.byte	0
 2907 00aa 03       		.uleb128 0x3
 2908 00ab 0E       		.uleb128 0xe
 2909 00ac 3A       		.uleb128 0x3a
 2910 00ad 0B       		.uleb128 0xb
 2911 00ae 3B       		.uleb128 0x3b
 2912 00af 05       		.uleb128 0x5
 2913 00b0 49       		.uleb128 0x49
 2914 00b1 13       		.uleb128 0x13
 2915 00b2 02       		.uleb128 0x2
 2916 00b3 18       		.uleb128 0x18
 2917 00b4 00       		.byte	0
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 77


 2918 00b5 00       		.byte	0
 2919 00b6 0C       		.uleb128 0xc
 2920 00b7 2E       		.uleb128 0x2e
 2921 00b8 01       		.byte	0x1
 2922 00b9 3F       		.uleb128 0x3f
 2923 00ba 19       		.uleb128 0x19
 2924 00bb 03       		.uleb128 0x3
 2925 00bc 0E       		.uleb128 0xe
 2926 00bd 3A       		.uleb128 0x3a
 2927 00be 0B       		.uleb128 0xb
 2928 00bf 3B       		.uleb128 0x3b
 2929 00c0 05       		.uleb128 0x5
 2930 00c1 27       		.uleb128 0x27
 2931 00c2 19       		.uleb128 0x19
 2932 00c3 11       		.uleb128 0x11
 2933 00c4 01       		.uleb128 0x1
 2934 00c5 12       		.uleb128 0x12
 2935 00c6 06       		.uleb128 0x6
 2936 00c7 40       		.uleb128 0x40
 2937 00c8 18       		.uleb128 0x18
 2938 00c9 9742     		.uleb128 0x2117
 2939 00cb 19       		.uleb128 0x19
 2940 00cc 01       		.uleb128 0x1
 2941 00cd 13       		.uleb128 0x13
 2942 00ce 00       		.byte	0
 2943 00cf 00       		.byte	0
 2944 00d0 0D       		.uleb128 0xd
 2945 00d1 2E       		.uleb128 0x2e
 2946 00d2 00       		.byte	0
 2947 00d3 3F       		.uleb128 0x3f
 2948 00d4 19       		.uleb128 0x19
 2949 00d5 03       		.uleb128 0x3
 2950 00d6 0E       		.uleb128 0xe
 2951 00d7 3A       		.uleb128 0x3a
 2952 00d8 0B       		.uleb128 0xb
 2953 00d9 3B       		.uleb128 0x3b
 2954 00da 05       		.uleb128 0x5
 2955 00db 27       		.uleb128 0x27
 2956 00dc 19       		.uleb128 0x19
 2957 00dd 49       		.uleb128 0x49
 2958 00de 13       		.uleb128 0x13
 2959 00df 11       		.uleb128 0x11
 2960 00e0 01       		.uleb128 0x1
 2961 00e1 12       		.uleb128 0x12
 2962 00e2 06       		.uleb128 0x6
 2963 00e3 40       		.uleb128 0x40
 2964 00e4 18       		.uleb128 0x18
 2965 00e5 9742     		.uleb128 0x2117
 2966 00e7 19       		.uleb128 0x19
 2967 00e8 00       		.byte	0
 2968 00e9 00       		.byte	0
 2969 00ea 0E       		.uleb128 0xe
 2970 00eb 34       		.uleb128 0x34
 2971 00ec 00       		.byte	0
 2972 00ed 03       		.uleb128 0x3
 2973 00ee 0E       		.uleb128 0xe
 2974 00ef 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 78


 2975 00f0 0B       		.uleb128 0xb
 2976 00f1 3B       		.uleb128 0x3b
 2977 00f2 0B       		.uleb128 0xb
 2978 00f3 49       		.uleb128 0x49
 2979 00f4 13       		.uleb128 0x13
 2980 00f5 3F       		.uleb128 0x3f
 2981 00f6 19       		.uleb128 0x19
 2982 00f7 02       		.uleb128 0x2
 2983 00f8 18       		.uleb128 0x18
 2984 00f9 00       		.byte	0
 2985 00fa 00       		.byte	0
 2986 00fb 00       		.byte	0
 2987              		.section	.debug_aranges,"",%progbits
 2988 0000 54010000 		.4byte	0x154
 2989 0004 0200     		.2byte	0x2
 2990 0006 00000000 		.4byte	.Ldebug_info0
 2991 000a 04       		.byte	0x4
 2992 000b 00       		.byte	0
 2993 000c 0000     		.2byte	0
 2994 000e 0000     		.2byte	0
 2995 0010 00000000 		.4byte	.LFB2
 2996 0014 40000000 		.4byte	.LFE2-.LFB2
 2997 0018 00000000 		.4byte	.LFB3
 2998 001c 38000000 		.4byte	.LFE3-.LFB3
 2999 0020 00000000 		.4byte	.LFB4
 3000 0024 24000000 		.4byte	.LFE4-.LFB4
 3001 0028 00000000 		.4byte	.LFB5
 3002 002c 30000000 		.4byte	.LFE5-.LFB5
 3003 0030 00000000 		.4byte	.LFB6
 3004 0034 48000000 		.4byte	.LFE6-.LFB6
 3005 0038 00000000 		.4byte	.LFB7
 3006 003c 48000000 		.4byte	.LFE7-.LFB7
 3007 0040 00000000 		.4byte	.LFB8
 3008 0044 48000000 		.4byte	.LFE8-.LFB8
 3009 0048 00000000 		.4byte	.LFB9
 3010 004c 4C000000 		.4byte	.LFE9-.LFB9
 3011 0050 00000000 		.4byte	.LFB10
 3012 0054 1C000000 		.4byte	.LFE10-.LFB10
 3013 0058 00000000 		.4byte	.LFB11
 3014 005c 48000000 		.4byte	.LFE11-.LFB11
 3015 0060 00000000 		.4byte	.LFB12
 3016 0064 48000000 		.4byte	.LFE12-.LFB12
 3017 0068 00000000 		.4byte	.LFB13
 3018 006c 4C000000 		.4byte	.LFE13-.LFB13
 3019 0070 00000000 		.4byte	.LFB14
 3020 0074 48000000 		.4byte	.LFE14-.LFB14
 3021 0078 00000000 		.4byte	.LFB15
 3022 007c 1C000000 		.4byte	.LFE15-.LFB15
 3023 0080 00000000 		.4byte	.LFB16
 3024 0084 18000000 		.4byte	.LFE16-.LFB16
 3025 0088 00000000 		.4byte	.LFB17
 3026 008c 48000000 		.4byte	.LFE17-.LFB17
 3027 0090 00000000 		.4byte	.LFB18
 3028 0094 1C000000 		.4byte	.LFE18-.LFB18
 3029 0098 00000000 		.4byte	.LFB19
 3030 009c 18000000 		.4byte	.LFE19-.LFB19
 3031 00a0 00000000 		.4byte	.LFB20
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 79


 3032 00a4 48000000 		.4byte	.LFE20-.LFB20
 3033 00a8 00000000 		.4byte	.LFB21
 3034 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3035 00b0 00000000 		.4byte	.LFB22
 3036 00b4 18000000 		.4byte	.LFE22-.LFB22
 3037 00b8 00000000 		.4byte	.LFB23
 3038 00bc 48000000 		.4byte	.LFE23-.LFB23
 3039 00c0 00000000 		.4byte	.LFB24
 3040 00c4 1C000000 		.4byte	.LFE24-.LFB24
 3041 00c8 00000000 		.4byte	.LFB25
 3042 00cc 18000000 		.4byte	.LFE25-.LFB25
 3043 00d0 00000000 		.4byte	.LFB26
 3044 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3045 00d8 00000000 		.4byte	.LFB27
 3046 00dc 18000000 		.4byte	.LFE27-.LFB27
 3047 00e0 00000000 		.4byte	.LFB28
 3048 00e4 18000000 		.4byte	.LFE28-.LFB28
 3049 00e8 00000000 		.4byte	.LFB29
 3050 00ec 18000000 		.4byte	.LFE29-.LFB29
 3051 00f0 00000000 		.4byte	.LFB30
 3052 00f4 44000000 		.4byte	.LFE30-.LFB30
 3053 00f8 00000000 		.4byte	.LFB31
 3054 00fc 44000000 		.4byte	.LFE31-.LFB31
 3055 0100 00000000 		.4byte	.LFB32
 3056 0104 48000000 		.4byte	.LFE32-.LFB32
 3057 0108 00000000 		.4byte	.LFB33
 3058 010c 44000000 		.4byte	.LFE33-.LFB33
 3059 0110 00000000 		.4byte	.LFB34
 3060 0114 44000000 		.4byte	.LFE34-.LFB34
 3061 0118 00000000 		.4byte	.LFB35
 3062 011c 38000000 		.4byte	.LFE35-.LFB35
 3063 0120 00000000 		.4byte	.LFB36
 3064 0124 20000000 		.4byte	.LFE36-.LFB36
 3065 0128 00000000 		.4byte	.LFB37
 3066 012c 18000000 		.4byte	.LFE37-.LFB37
 3067 0130 00000000 		.4byte	.LFB38
 3068 0134 14000000 		.4byte	.LFE38-.LFB38
 3069 0138 00000000 		.4byte	.LFB39
 3070 013c 14000000 		.4byte	.LFE39-.LFB39
 3071 0140 00000000 		.4byte	.LFB40
 3072 0144 18000000 		.4byte	.LFE40-.LFB40
 3073 0148 00000000 		.4byte	.LFB41
 3074 014c 18000000 		.4byte	.LFE41-.LFB41
 3075 0150 00000000 		.4byte	0
 3076 0154 00000000 		.4byte	0
 3077              		.section	.debug_ranges,"",%progbits
 3078              	.Ldebug_ranges0:
 3079 0000 00000000 		.4byte	.LFB2
 3080 0004 40000000 		.4byte	.LFE2
 3081 0008 00000000 		.4byte	.LFB3
 3082 000c 38000000 		.4byte	.LFE3
 3083 0010 00000000 		.4byte	.LFB4
 3084 0014 24000000 		.4byte	.LFE4
 3085 0018 00000000 		.4byte	.LFB5
 3086 001c 30000000 		.4byte	.LFE5
 3087 0020 00000000 		.4byte	.LFB6
 3088 0024 48000000 		.4byte	.LFE6
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 80


 3089 0028 00000000 		.4byte	.LFB7
 3090 002c 48000000 		.4byte	.LFE7
 3091 0030 00000000 		.4byte	.LFB8
 3092 0034 48000000 		.4byte	.LFE8
 3093 0038 00000000 		.4byte	.LFB9
 3094 003c 4C000000 		.4byte	.LFE9
 3095 0040 00000000 		.4byte	.LFB10
 3096 0044 1C000000 		.4byte	.LFE10
 3097 0048 00000000 		.4byte	.LFB11
 3098 004c 48000000 		.4byte	.LFE11
 3099 0050 00000000 		.4byte	.LFB12
 3100 0054 48000000 		.4byte	.LFE12
 3101 0058 00000000 		.4byte	.LFB13
 3102 005c 4C000000 		.4byte	.LFE13
 3103 0060 00000000 		.4byte	.LFB14
 3104 0064 48000000 		.4byte	.LFE14
 3105 0068 00000000 		.4byte	.LFB15
 3106 006c 1C000000 		.4byte	.LFE15
 3107 0070 00000000 		.4byte	.LFB16
 3108 0074 18000000 		.4byte	.LFE16
 3109 0078 00000000 		.4byte	.LFB17
 3110 007c 48000000 		.4byte	.LFE17
 3111 0080 00000000 		.4byte	.LFB18
 3112 0084 1C000000 		.4byte	.LFE18
 3113 0088 00000000 		.4byte	.LFB19
 3114 008c 18000000 		.4byte	.LFE19
 3115 0090 00000000 		.4byte	.LFB20
 3116 0094 48000000 		.4byte	.LFE20
 3117 0098 00000000 		.4byte	.LFB21
 3118 009c 1C000000 		.4byte	.LFE21
 3119 00a0 00000000 		.4byte	.LFB22
 3120 00a4 18000000 		.4byte	.LFE22
 3121 00a8 00000000 		.4byte	.LFB23
 3122 00ac 48000000 		.4byte	.LFE23
 3123 00b0 00000000 		.4byte	.LFB24
 3124 00b4 1C000000 		.4byte	.LFE24
 3125 00b8 00000000 		.4byte	.LFB25
 3126 00bc 18000000 		.4byte	.LFE25
 3127 00c0 00000000 		.4byte	.LFB26
 3128 00c4 1C000000 		.4byte	.LFE26
 3129 00c8 00000000 		.4byte	.LFB27
 3130 00cc 18000000 		.4byte	.LFE27
 3131 00d0 00000000 		.4byte	.LFB28
 3132 00d4 18000000 		.4byte	.LFE28
 3133 00d8 00000000 		.4byte	.LFB29
 3134 00dc 18000000 		.4byte	.LFE29
 3135 00e0 00000000 		.4byte	.LFB30
 3136 00e4 44000000 		.4byte	.LFE30
 3137 00e8 00000000 		.4byte	.LFB31
 3138 00ec 44000000 		.4byte	.LFE31
 3139 00f0 00000000 		.4byte	.LFB32
 3140 00f4 48000000 		.4byte	.LFE32
 3141 00f8 00000000 		.4byte	.LFB33
 3142 00fc 44000000 		.4byte	.LFE33
 3143 0100 00000000 		.4byte	.LFB34
 3144 0104 44000000 		.4byte	.LFE34
 3145 0108 00000000 		.4byte	.LFB35
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 81


 3146 010c 38000000 		.4byte	.LFE35
 3147 0110 00000000 		.4byte	.LFB36
 3148 0114 20000000 		.4byte	.LFE36
 3149 0118 00000000 		.4byte	.LFB37
 3150 011c 18000000 		.4byte	.LFE37
 3151 0120 00000000 		.4byte	.LFB38
 3152 0124 14000000 		.4byte	.LFE38
 3153 0128 00000000 		.4byte	.LFB39
 3154 012c 14000000 		.4byte	.LFE39
 3155 0130 00000000 		.4byte	.LFB40
 3156 0134 18000000 		.4byte	.LFE40
 3157 0138 00000000 		.4byte	.LFB41
 3158 013c 18000000 		.4byte	.LFE41
 3159 0140 00000000 		.4byte	0
 3160 0144 00000000 		.4byte	0
 3161              		.section	.debug_line,"",%progbits
 3162              	.Ldebug_line0:
 3163 0000 71030000 		.section	.debug_str,"MS",%progbits,1
 3163      02004800 
 3163      00000201 
 3163      FB0E0D00 
 3163      01010101 
 3164              	.LASF40:
 3165 0000 636F756E 		.ascii	"count\000"
 3165      7400
 3166              	.LASF65:
 3167 0006 54696D65 		.ascii	"Timer_LED_SetStopMode\000"
 3167      725F4C45 
 3167      445F5365 
 3167      7453746F 
 3167      704D6F64 
 3168              	.LASF53:
 3169 001c 54696D65 		.ascii	"Timer_LED_WriteCompare\000"
 3169      725F4C45 
 3169      445F5772 
 3169      69746543 
 3169      6F6D7061 
 3170              	.LASF44:
 3171 0033 70657269 		.ascii	"period\000"
 3171      6F6400
 3172              	.LASF7:
 3173 003a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3173      206C6F6E 
 3173      6720756E 
 3173      7369676E 
 3173      65642069 
 3174              	.LASF67:
 3175 0051 54696D65 		.ascii	"Timer_LED_TriggerCommand\000"
 3175      725F4C45 
 3175      445F5472 
 3175      69676765 
 3175      72436F6D 
 3176              	.LASF24:
 3177 006a 71644D6F 		.ascii	"qdMode\000"
 3177      646500
 3178              	.LASF74:
 3179 0071 54696D65 		.ascii	"Timer_LED_ClearInterrupt\000"
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 82


 3179      725F4C45 
 3179      445F436C 
 3179      65617249 
 3179      6E746572 
 3180              	.LASF46:
 3181 008a 54696D65 		.ascii	"Timer_LED_ReadPeriod\000"
 3181      725F4C45 
 3181      445F5265 
 3181      61645065 
 3181      72696F64 
 3182              	.LASF6:
 3183 009f 6C6F6E67 		.ascii	"long long int\000"
 3183      206C6F6E 
 3183      6720696E 
 3183      7400
 3184              	.LASF0:
 3185 00ad 7369676E 		.ascii	"signed char\000"
 3185      65642063 
 3185      68617200 
 3186              	.LASF39:
 3187 00b9 54696D65 		.ascii	"Timer_LED_WriteCounter\000"
 3187      725F4C45 
 3187      445F5772 
 3187      69746543 
 3187      6F756E74 
 3188              	.LASF27:
 3189 00d0 54696D65 		.ascii	"Timer_LED_SetOneShot\000"
 3189      725F4C45 
 3189      445F5365 
 3189      744F6E65 
 3189      53686F74 
 3190              	.LASF4:
 3191 00e5 6C6F6E67 		.ascii	"long int\000"
 3191      20696E74 
 3191      00
 3192              	.LASF9:
 3193 00ee 75696E74 		.ascii	"uint8\000"
 3193      3800
 3194              	.LASF12:
 3195 00f4 646F7562 		.ascii	"double\000"
 3195      6C6500
 3196              	.LASF10:
 3197 00fb 75696E74 		.ascii	"uint32\000"
 3197      333200
 3198              	.LASF62:
 3199 0102 74726967 		.ascii	"triggerMode\000"
 3199      6765724D 
 3199      6F646500 
 3200              	.LASF38:
 3201 010e 6D61736B 		.ascii	"mask\000"
 3201      00
 3202              	.LASF35:
 3203 0113 54696D65 		.ascii	"Timer_LED_SetPWMDeadTime\000"
 3203      725F4C45 
 3203      445F5365 
 3203      7450574D 
 3203      44656164 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 83


 3204              	.LASF52:
 3205 012c 54696D65 		.ascii	"Timer_LED_SetPeriodSwap\000"
 3205      725F4C45 
 3205      445F5365 
 3205      74506572 
 3205      696F6453 
 3206              	.LASF75:
 3207 0144 54696D65 		.ascii	"Timer_LED_SetInterrupt\000"
 3207      725F4C45 
 3207      445F5365 
 3207      74496E74 
 3207      65727275 
 3208              	.LASF29:
 3209 015b 54696D65 		.ascii	"Timer_LED_SetPWMMode\000"
 3209      725F4C45 
 3209      445F5365 
 3209      7450574D 
 3209      4D6F6465 
 3210              	.LASF36:
 3211 0170 64656164 		.ascii	"deadTime\000"
 3211      54696D65 
 3211      00
 3212              	.LASF37:
 3213 0179 54696D65 		.ascii	"Timer_LED_SetPWMInvert\000"
 3213      725F4C45 
 3213      445F5365 
 3213      7450574D 
 3213      496E7665 
 3214              	.LASF59:
 3215 0190 54696D65 		.ascii	"Timer_LED_ReadCapture\000"
 3215      725F4C45 
 3215      445F5265 
 3215      61644361 
 3215      70747572 
 3216              	.LASF8:
 3217 01a6 756E7369 		.ascii	"unsigned int\000"
 3217      676E6564 
 3217      20696E74 
 3217      00
 3218              	.LASF56:
 3219 01b3 54696D65 		.ascii	"Timer_LED_WriteCompareBuf\000"
 3219      725F4C45 
 3219      445F5772 
 3219      69746543 
 3219      6F6D7061 
 3220              	.LASF68:
 3221 01cd 636F6D6D 		.ascii	"command\000"
 3221      616E6400 
 3222              	.LASF5:
 3223 01d5 6C6F6E67 		.ascii	"long unsigned int\000"
 3223      20756E73 
 3223      69676E65 
 3223      6420696E 
 3223      7400
 3224              	.LASF30:
 3225 01e7 6D6F6465 		.ascii	"modeMask\000"
 3225      4D61736B 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 84


 3225      00
 3226              	.LASF3:
 3227 01f0 73686F72 		.ascii	"short unsigned int\000"
 3227      7420756E 
 3227      7369676E 
 3227      65642069 
 3227      6E7400
 3228              	.LASF49:
 3229 0203 54696D65 		.ascii	"Timer_LED_WritePeriodBuf\000"
 3229      725F4C45 
 3229      445F5772 
 3229      69746550 
 3229      6572696F 
 3230              	.LASF22:
 3231 021c 54696D65 		.ascii	"Timer_LED_SetQDMode\000"
 3231      725F4C45 
 3231      445F5365 
 3231      7451444D 
 3231      6F646500 
 3232              	.LASF55:
 3233 0230 54696D65 		.ascii	"Timer_LED_ReadCompare\000"
 3233      725F4C45 
 3233      445F5265 
 3233      6164436F 
 3233      6D706172 
 3234              	.LASF33:
 3235 0246 54696D65 		.ascii	"Timer_LED_SetPWMStopOnKill\000"
 3235      725F4C45 
 3235      445F5365 
 3235      7450574D 
 3235      53746F70 
 3236              	.LASF28:
 3237 0261 6F6E6553 		.ascii	"oneShotEnable\000"
 3237      686F7445 
 3237      6E61626C 
 3237      6500
 3238              	.LASF77:
 3239 026f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Timer_LED.c\000"
 3239      6E657261 
 3239      7465645F 
 3239      536F7572 
 3239      63655C50 
 3240              	.LASF18:
 3241 0294 54696D65 		.ascii	"Timer_LED_Enable\000"
 3241      725F4C45 
 3241      445F456E 
 3241      61626C65 
 3241      00
 3242              	.LASF14:
 3243 02a5 72656733 		.ascii	"reg32\000"
 3243      3200
 3244              	.LASF25:
 3245 02ab 54696D65 		.ascii	"Timer_LED_SetPrescaler\000"
 3245      725F4C45 
 3245      445F5365 
 3245      74507265 
 3245      7363616C 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 85


 3246              	.LASF51:
 3247 02c2 54696D65 		.ascii	"Timer_LED_ReadPeriodBuf\000"
 3247      725F4C45 
 3247      445F5265 
 3247      61645065 
 3247      72696F64 
 3248              	.LASF60:
 3249 02da 54696D65 		.ascii	"Timer_LED_ReadCaptureBuf\000"
 3249      725F4C45 
 3249      445F5265 
 3249      61644361 
 3249      70747572 
 3250              	.LASF15:
 3251 02f3 73697A65 		.ascii	"sizetype\000"
 3251      74797065 
 3251      00
 3252              	.LASF32:
 3253 02fc 73796E63 		.ascii	"syncKillEnable\000"
 3253      4B696C6C 
 3253      456E6162 
 3253      6C6500
 3254              	.LASF79:
 3255 030b 54696D65 		.ascii	"Timer_LED_initVar\000"
 3255      725F4C45 
 3255      445F696E 
 3255      69745661 
 3255      7200
 3256              	.LASF19:
 3257 031d 54696D65 		.ascii	"Timer_LED_Stop\000"
 3257      725F4C45 
 3257      445F5374 
 3257      6F7000
 3258              	.LASF45:
 3259 032c 54696D65 		.ascii	"Timer_LED_ReadCounter\000"
 3259      725F4C45 
 3259      445F5265 
 3259      6164436F 
 3259      756E7465 
 3260              	.LASF54:
 3261 0342 636F6D70 		.ascii	"compare\000"
 3261      61726500 
 3262              	.LASF63:
 3263 034a 54696D65 		.ascii	"Timer_LED_SetReloadMode\000"
 3263      725F4C45 
 3263      445F5365 
 3263      7452656C 
 3263      6F61644D 
 3264              	.LASF11:
 3265 0362 666C6F61 		.ascii	"float\000"
 3265      7400
 3266              	.LASF26:
 3267 0368 70726573 		.ascii	"prescaler\000"
 3267      63616C65 
 3267      7200
 3268              	.LASF17:
 3269 0372 54696D65 		.ascii	"Timer_LED_Start\000"
 3269      725F4C45 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 86


 3269      445F5374 
 3269      61727400 
 3270              	.LASF41:
 3271 0382 54696D65 		.ascii	"Timer_LED_SetCounterMode\000"
 3271      725F4C45 
 3271      445F5365 
 3271      74436F75 
 3271      6E746572 
 3272              	.LASF1:
 3273 039b 756E7369 		.ascii	"unsigned char\000"
 3273      676E6564 
 3273      20636861 
 3273      7200
 3274              	.LASF34:
 3275 03a9 73746F70 		.ascii	"stopOnKillEnable\000"
 3275      4F6E4B69 
 3275      6C6C456E 
 3275      61626C65 
 3275      00
 3276              	.LASF70:
 3277 03ba 54696D65 		.ascii	"Timer_LED_SetInterruptMode\000"
 3277      725F4C45 
 3277      445F5365 
 3277      74496E74 
 3277      65727275 
 3278              	.LASF2:
 3279 03d5 73686F72 		.ascii	"short int\000"
 3279      7420696E 
 3279      7400
 3280              	.LASF48:
 3281 03df 73776170 		.ascii	"swapEnable\000"
 3281      456E6162 
 3281      6C6500
 3282              	.LASF71:
 3283 03ea 696E7465 		.ascii	"interruptMask\000"
 3283      72727570 
 3283      744D6173 
 3283      6B00
 3284              	.LASF61:
 3285 03f8 54696D65 		.ascii	"Timer_LED_SetCaptureMode\000"
 3285      725F4C45 
 3285      445F5365 
 3285      74436170 
 3285      74757265 
 3286              	.LASF13:
 3287 0411 63686172 		.ascii	"char\000"
 3287      00
 3288              	.LASF23:
 3289 0416 6D6F6465 		.ascii	"mode\000"
 3289      00
 3290              	.LASF42:
 3291 041b 636F756E 		.ascii	"counterMode\000"
 3291      7465724D 
 3291      6F646500 
 3292              	.LASF43:
 3293 0427 54696D65 		.ascii	"Timer_LED_WritePeriod\000"
 3293      725F4C45 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 87


 3293      445F5772 
 3293      69746550 
 3293      6572696F 
 3294              	.LASF57:
 3295 043d 636F6D70 		.ascii	"compareBuf\000"
 3295      61726542 
 3295      756600
 3296              	.LASF64:
 3297 0448 54696D65 		.ascii	"Timer_LED_SetStartMode\000"
 3297      725F4C45 
 3297      445F5365 
 3297      74537461 
 3297      72744D6F 
 3298              	.LASF50:
 3299 045f 70657269 		.ascii	"periodBuf\000"
 3299      6F644275 
 3299      6600
 3300              	.LASF73:
 3301 0469 54696D65 		.ascii	"Timer_LED_GetInterruptSource\000"
 3301      725F4C45 
 3301      445F4765 
 3301      74496E74 
 3301      65727275 
 3302              	.LASF20:
 3303 0486 656E6162 		.ascii	"enableInterrupts\000"
 3303      6C65496E 
 3303      74657272 
 3303      75707473 
 3303      00
 3304              	.LASF58:
 3305 0497 54696D65 		.ascii	"Timer_LED_ReadCompareBuf\000"
 3305      725F4C45 
 3305      445F5265 
 3305      6164436F 
 3305      6D706172 
 3306              	.LASF47:
 3307 04b0 54696D65 		.ascii	"Timer_LED_SetCompareSwap\000"
 3307      725F4C45 
 3307      445F5365 
 3307      74436F6D 
 3307      70617265 
 3308              	.LASF72:
 3309 04c9 54696D65 		.ascii	"Timer_LED_GetInterruptSourceMasked\000"
 3309      725F4C45 
 3309      445F4765 
 3309      74496E74 
 3309      65727275 
 3310              	.LASF69:
 3311 04ec 54696D65 		.ascii	"Timer_LED_ReadStatus\000"
 3311      725F4C45 
 3311      445F5265 
 3311      61645374 
 3311      61747573 
 3312              	.LASF16:
 3313 0501 54696D65 		.ascii	"Timer_LED_Init\000"
 3313      725F4C45 
 3313      445F496E 
ARM GAS  C:\DOCUME~1\Admin\LOCALS~1\Temp\ccsKpslE.s 			page 88


 3313      697400
 3314              	.LASF76:
 3315 0510 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3315      4320342E 
 3315      392E3320 
 3315      32303135 
 3315      30333033 
 3316 0543 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3316      20726576 
 3316      6973696F 
 3316      6E203232 
 3316      31323230 
 3317 0576 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3317      66756E63 
 3317      74696F6E 
 3317      2D736563 
 3317      74696F6E 
 3318              	.LASF21:
 3319 059e 54696D65 		.ascii	"Timer_LED_SetMode\000"
 3319      725F4C45 
 3319      445F5365 
 3319      744D6F64 
 3319      6500
 3320              	.LASF66:
 3321 05b0 54696D65 		.ascii	"Timer_LED_SetCountMode\000"
 3321      725F4C45 
 3321      445F5365 
 3321      74436F75 
 3321      6E744D6F 
 3322              	.LASF78:
 3323 05c7 633A5C43 		.ascii	"c:\\Cypress\\Mainline_v2\\Finish\\fin_v0.cydsn\000"
 3323      79707265 
 3323      73735C4D 
 3323      61696E6C 
 3323      696E655F 
 3324              	.LASF31:
 3325 05f2 54696D65 		.ascii	"Timer_LED_SetPWMSyncKill\000"
 3325      725F4C45 
 3325      445F5365 
 3325      7450574D 
 3325      53796E63 
 3326              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
